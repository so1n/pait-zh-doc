{"config":{"lang":["en"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4ecb\u7ecd","text":"<p><code>Pait</code>\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684Python Api\u5f00\u53d1\u5de5\u5177\uff0c\u62e5\u6709\u53c2\u6570\u7c7b\u578b\u68c0\u67e5, \u7c7b\u578b\u8f6c\u6362\uff0c\u63d0\u4f9b\u6587\u6863\u8f93\u51fa\u548cgRPC GateWay\u7b49\u529f\u80fd\uff0c\u975e\u5e38\u9002\u5408\u7528\u4e8e\u540e\u7aef\u7684\u63a5\u53e3\u5f00\u53d1\uff0c \u5b83\u88ab\u8bbe\u8ba1\u6210\u53ef\u4ee5\u7528\u4e8e\u591a\u4e2aPython\u7684Web\u5e94\u7528\u5f00\u53d1\u6846\u67b6(\u76ee\u524d\u9002\u914d\u4e86<code>Flask</code>, <code>Starlette</code>, <code>Sanic</code>, <code>Tornado</code>)\uff0c<code>Pait</code>\u8bbe\u8ba1\u7075\u611f\u89c1\u6587\u7ae0\u300a\u7ed9python\u63a5\u53e3\u52a0\u4e0a\u4e00\u5c42\u7c7b\u578b\u68c0\u300b \u3002</p>"},{"location":"#_2","title":"\u529f\u80fd","text":"<ul> <li> \u878d\u5165Type Hints\u751f\u6001\uff0c\u4f7f\u7528\u8005\u53ef\u4ee5\u5feb\u901f\u65b9\u4fbf\u7684\u7f16\u5199\u5b89\u5168\u7684\u4ee3\u7801</li> <li> \u53c2\u6570\u6821\u9a8c\u548c\u81ea\u52a8\u8f6c\u5316(\u53c2\u6570\u6821\u9a8c\u4f9d\u8d56\u4e8e<code>Pydantic</code>)</li> <li> \u53c2\u6570\u5173\u7cfb\u4f9d\u8d56\u6821\u9a8c</li> <li> \u81ea\u52a8\u751f\u6210openapi\u6587\u4ef6</li> <li> \u652f\u6301swagger,redoc\u8def\u7531</li> <li> \u652f\u6301mock\u54cd\u5e94</li> <li> TestClient\u652f\u6301, \u652f\u6301\u6d4b\u8bd5\u7528\u4f8b\u7684\u54cd\u5e94\u7ed3\u679c\u6821\u9a8c</li> <li> \u652f\u6301\u63d2\u4ef6\u62d3\u5c55</li> <li> \u652f\u6301gRPC GateWay\u8def\u7531</li> <li> \u81ea\u52a8API\u6d4b\u8bd5</li> <li> WebSocket\u652f\u6301</li> </ul>"},{"location":"#_3","title":"\u5b89\u88c5","text":"<p>Note</p> <p>\u4ec5\u652f\u6301Python3.7+\u7248\u672c</p> <p><pre><code>pip install pait --pre\n</code></pre> \u5982\u679c\u4f7f\u7528\u5230<code>gRPC</code>\u76f8\u5173\u529f\u80fd\uff0c\u5219\u9700\u8981\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5<code>gRPC</code>\u4f9d\u8d56: <pre><code>pip install pait[grpc] --pre\n</code></pre></p>"},{"location":"#_4","title":"\u4f7f\u7528","text":""},{"location":"#_5","title":"\u53c2\u6570\u6821\u9a8c\u4e0e\u6587\u6863\u751f\u6210","text":"<p><code>Pait</code>\u7684\u4e3b\u8981\u529f\u80fd\u662f\u63d0\u4f9b\u53c2\u6570\u6821\u9a8c\u548c\u6587\u6863\u751f\u6210\uff0c\u4f7f\u7528\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u6dfb\u52a0\u51e0\u884c\u5982\u4e0b\u9ad8\u4eae\u4ee3\u7801\u5c31\u53ef\u4ee5\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/flask_demo.py<pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/starlette_demo.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/sanic_demo.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/tornado_demo.py<pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u5176\u4e2d\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u4e2d\u7684<code>@pait</code>\u4f1a\u88c5\u9970\u8def\u7531\u51fd\u6570\uff0c \u7136\u540e<code>@pait</code>\u4f1a\u81ea\u52a8\u4ece\u8def\u7531\u51fd\u6570\u63d0\u53d6\u6570\u636e\uff0c\u4f46\u662f\u6ca1\u529e\u6cd5\u4e86\u89e3\u5230\u8def\u7531\u51fd\u6570\u7684\u54cd\u5e94\u5185\u5bb9\u662f\u4ec0\u4e48\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7<code>response_model_list</code>\u53c2\u6570\u58f0\u660e\u4e86\u8def\u7531\u51fd\u6570\u7684\u54cd\u5e94\u5bf9\u8c61\u662f<code>DemoResponseModel</code>\uff0c<code>DemoResponseModel</code>\u5bf9\u8c61\u7684<code>description</code>\u548c<code>response_data</code>\u5206\u522b\u7528\u4e8e\u63cf\u8ff0\u8def\u7531\u51fd\u6570\u7684\u54cd\u5e94\u5bf9\u8c61\u6587\u6863\u548c\u54cd\u5e94\u5bf9\u8c61\u7684\u7ed3\u6784\u7c7b\u578b\u3002</p> <p>\u800c\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4ee3\u7801\u4e2d\u8def\u7531\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u79cd\u7b26\u5408<code>Pait</code>\u89c4\u8303\u7684\u53c2\u6570\uff0c\u5728\u521d\u59cb\u5316\u65f6<code>@pait</code>\u4f1a\u4e3b\u52a8\u53bb\u89e3\u6790\u8def\u7531\u51fd\u6570\u5e76\u6839\u636e\u8def\u7531\u51fd\u6570\u7684\u51fd\u6570\u7b7e\u540d\u751f\u6210\u4f9d\u8d56\u6ce8\u5165\u89c4\u5219\uff0c\u5f53\u8bf7\u6c42\u547d\u4e2d\u8def\u7531\u51fd\u6570\u65f6\uff0c<code>Pait</code>\u4f1a\u6839\u636e\u4f9d\u8d56\u6ce8\u5165\u89c4\u5219\u4ece<code>Request</code>\u5bf9\u8c61\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u503c\u5e76\u5c06\u5176\u6ce8\u5165\u5230\u8def\u7531\u51fd\u6570\u4e2d\u3002</p> <p>\u6700\u540e\u7684\u9ad8\u4eae\u4ee3\u7801\u4e3b\u8981\u7684\u5de5\u4f5c\u662f\u6ce8\u518c<code>OpenAPI</code>\u8def\u7531\uff0c\u4e3aWeb\u6846\u67b6\u63d0\u4f9b\u63a5\u53e3\u6587\u6863\u529f\u80fd\u3002</p> <p>\u5728\u4e00\u5207\u51c6\u5907\u5c31\u7eea\u540e\u5f00\u59cb\u8fd0\u884c\u4ee3\u7801\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u8bbf\u95ee: http://127.0.0.1:8000/swagger \u5c31\u53ef\u4ee5\u770b\u5230SwaggerUI\u7684\u9875\u9762\uff0c\u76ee\u524d\u8fd9\u4e2a\u9875\u9762\u663e\u793a\u4e86\u4e24\u7ec4\u63a5\u53e3\uff1a </p> <p>\u5176\u4e2d\u4e00\u7ec4\u662f<code>Pait doc</code>\u81ea\u5e26\u7684<code>OpenAPI</code>\u63a5\u53e3\uff0c\u53e6\u5916\u4e00\u7ec4\u662f<code>default</code>\uff0c\u91cc\u9762\u6709\u521a\u521b\u5efa\u7684<code>/api</code>\u63a5\u53e3\uff0c\u70b9\u5f00<code>/api</code>\u63a5\u53e3\u540e\u4f1a\u5f39\u51fa\u8be5\u63a5\u53e3\u7684\u8be6\u60c5\uff1a </p> <p>\u8be6\u60c5\u91cc\u7684\u6570\u636e\u662f\u7531<code>Pait</code>\u901a\u8fc7\u8bfb\u53d6\u8def\u7531\u7684\u51fd\u6570\u7b7e\u540d\u4ee5\u53ca\u4f20\u5165\u7684<code>DemoResponseModel</code>\u5bf9\u8c61\u751f\u6210\u7684\uff0c \u63a5\u7740\u53ef\u4ee5\u70b9\u51fb<code>try it out</code>\u6309\u94ae\uff0c\u7136\u540e\u8f93\u5165\u53c2\u6570\u5e76\u70b9\u51fb<code>Excute</code>\uff0c\u5c31\u53ef\u4ee5\u770b\u5230<code>curl</code>\u547d\u4ee4\u751f\u6210\u7ed3\u679c\u4ee5\u53ca\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u679c: </p> <p>Note</p> <p>\u60f3\u8981\u4e86\u89e3\u66f4\u591a\uff1f \u9a6c\u4e0a\u8fdb\u5165\u7c7b\u578b\u8f6c\u6362\u4e0e\u53c2\u6570\u6821\u9a8c\u7ae0\u8282</p>"},{"location":"#_6","title":"\u63d2\u4ef6","text":"<p><code>Pait</code>\u9664\u4e86\u53c2\u6570\u6821\u9a8c\u548c<code>OpenAPI</code>\u529f\u80fd\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u7cfb\u7edf\u62d3\u5c55\u529f\u80fd\uff0c\u6bd4\u5982Mock\u54cd\u5e94\u529f\u80fd\uff0c\u5b83\u80fd\u6839\u636eResponseModel\u6765\u81ea\u52a8\u8fd4\u56de\u6570\u636e\uff0c\u5373\u4f7f\u8fd9\u4e2a\u8def\u7531\u6ca1\u6709\u6570\u636e\u8fd4\u56de\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/flask_demo_with_mock_plugin.py<pre><code>from typing import Type\nfrom flask import Flask, Response\nfrom pait.app.flask import pait\nfrom pait.app.flask.plugin.mock_response import MockPlugin\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field(example=999)\nusername: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel], plugin_list=[MockPlugin.build()])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\npass\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/starlette_demo_with_mock_plugin.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.app.starlette.plugin.mock_response import MockPlugin\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field(example=999)\nusername: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel], plugin_list=[MockPlugin.build()])\nasync def demo_post(  # type: ignore[empty-body]\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\npass\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/sanic_demo_with_mock_plugin.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.app.sanic.plugin.mock_response import MockPlugin\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field(example=999)\nusername: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel], plugin_list=[MockPlugin.build()])\nasync def demo_post(  # type: ignore[empty-body]\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\npass\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/tornado_demo_with_mock_plugin.py<pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.app.tornado.plugin.mock_response import MockPlugin\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field(example=999)\nusername: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel], plugin_list=[MockPlugin.build()])\nasync def post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\npass\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8be5\u4ee3\u7801\u662f\u6839\u636e<code>\u53c2\u6570\u6821\u9a8c\u4e0e\u6587\u6863\u751f\u6210</code>\u7684\u4ee3\u7801\u8fdb\u884c\u66f4\u6539\uff0c\u5b83\u79fb\u9664\u4e86\u8def\u7531\u51fd\u6570\u7684\u8fd4\u56de\u54cd\u5e94\u529f\u80fd\uff0c\u540c\u65f6\u5f15\u5165\u4e86\u9ad8\u4eae\u90e8\u5206\u7684\u4ee3\u7801\uff0c \u5176\u4e2d<code>DemoResponseModel</code>\u4e2d\u7684<code>uid: int = Field(example=999)</code>\u6307\u5b9a\u4e86\u54cd\u5e94\u7ed3\u6784\u4e2duid\u7684example\u503c\u4e3a999\uff0c \u800c<code>@pait</code>\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a<code>MockPlugin</code>\u7684\u63d2\u4ef6\uff0c\u4ed6\u53ef\u4ee5\u6839\u636e<code>response_model_list</code>\u751f\u6210\u4e00\u4e2amock\u54cd\u5e94\u3002</p> <p>\u5728\u4e00\u5207\u51c6\u5907\u5c31\u7eea\u540e\u5f00\u59cb\u8fd0\u884c\u4ee3\u7801\uff0c\u5e76\u91cd\u65b0\u70b9\u51fb<code>Swagger</code>\u9875\u9762\u7684<code>Excute</code>\u6309\u94ae\u6216\u8005\u5728\u7ec8\u7aef\u8fd0\u884c<code>Swagger</code>\u9875\u9762\u751f\u6210\u7684<code>curl</code>\u547d\u4ee4: <pre><code>\u279c  ~ curl -X 'POST' \\\n'http://127.0.0.1:8000/api' \\\n-H 'accept: application/json' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"uid\": 666,\n  \"user_name\": \"so1n\"\n}'\n</code></pre> \u65e0\u8bba\u5728<code>Swagger</code>\u9875\u9762\u6216\u8005\u7ec8\u7aef\u4e2d\u90fd\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u8f93\u51fa\uff1a <pre><code>{\"uid\":999,\"username\":\"\"}\n</code></pre> \u901a\u8fc7\u8fd4\u56de\u7ed3\u679c\u53ef\u4ee5\u770b\u5230\uff0c\u8def\u7531\u51fd\u6570\u867d\u7136\u6ca1\u6709\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u4f46\u662f\u8be5\u63a5\u53e3\u4ecd\u7136\u53ef\u4ee5\u8fd4\u56de\u54cd\u5e94\u3002\u8fd9\u4e2a\u54cd\u5e94\u7ed3\u679c\u662fMock\u63d2\u4ef6\u81ea\u52a8\u751f\u6210\u7684\uff0c\u54cd\u5e94\u7ed3\u679c\u4e2d<code>uid</code>\u7684\u503c\u662f999\uff0c\u4e0e\u54cd\u5e94\u6a21\u578b\u4e2d<code>uid: int = Field(example=999)</code>\u8bbe\u5b9a\u7684\u503c\u4e00\u81f4\uff0c\u800c<code>username</code>\u7531\u4e8e\u6ca1\u6709\u8bbe\u5b9a<code>example</code>\u503c\uff0c\u6240\u4ee5\u54cd\u5e94\u7ed3\u679c\u4e2d\u5b83\u7684\u503c\u662f\u9ed8\u8ba4\u7684\u7a7a\u5b57\u7b26\u4e32\u3002</p> <p>Note</p> <p>\u9664\u4e86<code>MockPlugin</code>\u63d2\u4ef6\u5916\uff0c<code>Pait</code>\u8fd8\u6709\u5176\u5b83\u7684\u63d2\u4ef6\u548c\u529f\u80fd\uff0c\u5c06\u5728\u540e\u7eed\u7684\u6587\u6863\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u3002</p>"},{"location":"#_7","title":"\u6027\u80fd","text":"<p><code>Pait</code>\u91c7\u7528<code>Python</code>\u7684\u6807\u51c6\u5e93<code>inspect</code>\u5b9e\u73b0\u51fd\u6570\u7b7e\u540d\u63d0\u53d6\uff0c \u5e76\u57fa\u4e8e<code>Pydantic</code>\u5b9e\u73b0\u53c2\u6570\u6821\u9a8c\u548c\u7c7b\u578b\u8f6c\u6362\uff0c\u540c\u65f6\u8fd8\u8fd0\u7528\u4e86\u5f88\u591a\u9884\u52a0\u8f7d\u8bbe\u8ba1\uff0c\u6240\u4ee5<code>Pait</code>\u7684\u8fd0\u884c\u65f6\u6027\u80fd\u8868\u73b0\u5341\u5206\u4f18\u8d8a\u3002 \u4e0d\u8fc7\u76ee\u524d\u7684<code>Pait</code>\u8fd8\u5728\u6210\u957f\u4e2d\uff0c \u8fd8\u6709\u8bb8\u591a\u9700\u8981\u4f18\u5316\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u901a\u8fc7issues\u53cd\u9988<code>Pait</code>\u76f8\u5173\u95ee\u9898\u5e76\u4e00\u8d77\u4f18\u5316\u3002</p>"},{"location":"#_8","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>\u6bcf\u4e2a<code>Pait</code>\u652f\u6301\u7684Web\u6846\u67b6\u90fd\u6709\u5b8c\u5584\u7684\u4ee3\u7801\u793a\u4f8b\uff0c \u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u793a\u4f8b\u4ee3\u7801\u4e86\u89e3\u6700\u4f73\u5b9e\u8df5:</p> <ul> <li> <p>flask example</p> </li> <li> <p>sanic example</p> </li> <li> <p>starlette example</p> </li> <li> <p>tornado example</p> </li> </ul>"},{"location":"1_1_introduction/","title":"\u4ecb\u7ecd","text":"<p>\u4e3a\u4e86\u5c55\u793a<code>Pait</code>\u7684\u7528\u6cd5\uff0c\u9996\u5148\u4f1a\u5c55\u793a\u4e0d\u540cWeb\u6846\u67b6\u7684<code>Hello World</code>\u8def\u7531\u4ee3\u7801\uff0c\u5982\u4e0b:</p> FlaskStarletteSanicTornado docs_source_code/introduction/flask_hello_world_demo.py<pre><code>from flask import Flask, Response, jsonify, request\ndef demo_post() -&gt; Response:\nrequest_dict = request.json()\nuid_str: str = request_dict.get(\"uid\", \"\")\nusername: str = request_dict.get(\"username\", \"\")\nuid = int(uid_str)  # \u6682\u65f6\u4e0d\u53bb\u8003\u8651\u7c7b\u578b\u8f6c\u6362\u7684\u5f02\u5e38\nif not (10 &lt; uid &lt; 1000):\nraise ValueError(\"invalid uid\")\nif not (2 &lt;= len(username) &lt;= 4):\nraise ValueError(\"invalid name\")\n# \u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u8fdb\u884c\u8fd4\u56de\nreturn jsonify({\"uid\": uid, \"username\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/starlette_hello_world_demo.py<pre><code>import uvicorn\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def demo_post(request: Request) -&gt; JSONResponse:\nrequest_dict = await request.json()\nuid_str: str = request_dict.get(\"uid\", \"\")\nusername: str = request_dict.get(\"username\", \"\")\nuid = int(uid_str)  # \u6682\u65f6\u4e0d\u53bb\u8003\u8651\u7c7b\u578b\u8f6c\u6362\u7684\u5f02\u5e38\nif not (10 &lt; uid &lt; 1000):\nraise ValueError(\"invalid uid\")\nif not (2 &lt;= len(username) &lt;= 4):\nraise ValueError(\"invalid name\")\n# \u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u8fdb\u884c\u8fd4\u56de\nreturn JSONResponse({\"uid\": uid, \"username\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/sanic_hello_world_demo.py<pre><code>import uvicorn\nfrom sanic.app import Sanic\nfrom sanic.request import Request\nfrom sanic.response import HTTPResponse, json\nasync def demo_post(request: Request) -&gt; HTTPResponse:\nrequest_dict = await request.json()\nuid_str: str = request_dict.get(\"uid\", \"\")\nusername: str = request_dict.get(\"username\", \"\")\nuid = int(uid_str)  # \u6682\u65f6\u4e0d\u53bb\u8003\u8651\u7c7b\u578b\u8f6c\u6362\u7684\u5f02\u5e38\nif not (10 &lt; uid &lt; 1000):\nraise ValueError(\"invalid uid\")\nif not (2 &lt;= len(username) &lt;= 4):\nraise ValueError(\"invalid name\")\n# \u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u8fdb\u884c\u8fd4\u56de\nreturn json({\"uid\": uid, \"username\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/tornado_hello_world_demo.py<pre><code>import json\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoHandler(RequestHandler):\ndef post(self) -&gt; None:\nrequest_dict = json.loads(self.request.body.decode())\nuid_str: str = request_dict.get(\"uid\", \"\")\nusername: str = request_dict.get(\"username\", \"\")\nuid = int(uid_str)  # \u6682\u65f6\u4e0d\u53bb\u8003\u8651\u7c7b\u578b\u8f6c\u6362\u7684\u5f02\u5e38\nif not (10 &lt; uid &lt; 1000):\nraise ValueError(\"invalid uid\")\nif not (2 &lt;= len(username) &lt;= 4):\nraise ValueError(\"invalid name\")\n# \u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u8fdb\u884c\u8fd4\u56de\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4ee3\u7801\u5c55\u793a\u7684\u662f\u5c06\u4e00\u4e2a\u8def\u7531\u6ce8\u518c\u5230Web\u6846\u67b6\u7684Application\u4e2d\uff0cWeb\u6846\u67b6\u5728\u6536\u5230\u4e00\u4e2aurl\u4e3a'/api'\uff0cmethod\u4e3a<code>POST</code>\u8bf7\u6c42\u540e\u4f1a\u4ea4\u7531<code>Heool World</code>\u4e2d\u7684\u8def\u7531\u51fd\u6570\u6765\u8fdb\u884c\u5904\u7406\u3002 \u800c\u8def\u7531\u51fd\u6570\u7684\u5904\u7406\u903b\u8f91\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u6709\u6570\u636e\u5728\u7b26\u5408\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u8fd4\u56de\uff0c\u5426\u5219\u4f1a\u76f4\u63a5\u629b\u51fa\u9519\u8bef\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u5c06\u5c55\u793a\u5728\u5404\u4e2aWeb\u6846\u67b6\u4e2d\u5982\u4f55\u4f7f\u7528<code>Pait</code>\u7684\u53c2\u6570\u7c7b\u578b\u8f6c\u6362\u548c\u53c2\u6570\u6821\u9a8c\u529f\u80fd\uff0c\u4ee3\u7801\u5982\u4e0b(\u4e0e\u6587\u6863\u9996\u9875\u4e00\u6837\u7684\u793a\u4f8b\u4ee3\u7801)\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/flask_demo.py<pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/starlette_demo.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/sanic_demo.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/tornado_demo.py<pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4ee3\u7801\u4e2d\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u4e2d\u7684<code>@pait</code>\u662f<code>Pait</code>\u6240\u6709\u529f\u80fd\u7684\u6838\u5fc3\uff0c\u5728\u901a\u8fc7<code>@pait</code>\u88c5\u9970\u8def\u7531\u51fd\u6570\u540e\uff0c<code>Pait</code>\u4f1a\u901a\u8fc7<code>inspect</code>\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u7b7e\u540d\uff0c\u5e76\u901a\u8fc7\u51fd\u6570\u7b7e\u540d\u751f\u6210<code>pydantic.BaseModel</code>\u5bf9\u8c61\u3002 \u6bd4\u5982\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4ee3\u7801\u4e2d\u8def\u7531\u51fd\u6570\u7684\u53c2\u6570\u90fd\u4ee5<code>&lt;name&gt;:&lt;type&gt;=&lt;default&gt;</code>\u683c\u5f0f\u7684\u5173\u952e\u53c2\u6570\u586b\u5199\uff0c<code>Pait</code>\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u81ea\u52a8\u901a\u8fc7\u5982\u4e0b\u7684\u89c4\u5219\u5c06\u5173\u952e\u53c2\u6570\u8f6c\u5316\u4e3a\u81ea\u5df1\u7684\u4f9d\u8d56\u6ce8\u5165\u89c4\u5219\uff1a</p> key \u542b\u4e49 \u4f5c\u7528 name \u53c2\u6570\u540d \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f1a\u4f5c\u4e3aKey\u5230\u8bf7\u6c42\u8d44\u6e90\u83b7\u53d6\u5bf9\u5e94\u7684\u503c type \u53c2\u6570\u7c7b\u578b \u7528\u4e8e\u53c2\u6570\u6821\u9a8c\u6216\u8005\u8f6c\u5316\u7684\u7c7b\u578b default <code>Pait</code>\u7684<code>Field</code>\u5bf9\u8c61 \u4e0d\u540c\u7684<code>Field</code>\u4ee3\u8868\u4ece\u4e0d\u540c\u7684\u8bf7\u6c42\u7c7b\u578b\u83b7\u53d6\u503c\uff0c \u800c<code>Field</code>\u5bf9\u8c61\u7684\u5c5e\u6027\u5219\u544a\u8bc9<code>Pait</code>\u8be5\u5982\u4f55\u53bb\u9884\u5904\u7406\u4ece\u8bf7\u6c42\u4e2d\u83b7\u53d6\u7684\u503c\u3002 <p>\u4ee5\u4e0a\u9762\u7684<code>uid</code>\u53c2\u6570\u4e3a\u4f8b\u5b50\uff0c<code>Pait</code>\u4f1a\u901a\u8fc7Body\u4ece\u8bf7\u6c42\u4e2d\u7684\u83b7\u53d6Json\u6570\u636e\uff0c\u63a5\u7740\u4ee5uid\u4e3aKey\u4eceJson\u6570\u636e\u4e2d\u83b7\u53d6\u5bf9\u5e94\u7684\u7684\u503c\u5e76\u8f6c\u5316\u5e76\u9a8c\u8bc1\u662f\u5426\u4e3a<code>int</code>\u7c7b\u578b\uff0c \u6700\u540e\u518d\u5224\u65ad\u8be5\u503c\u662f\u5426\u5904\u4e8e10-1000\u4e4b\u95f4\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u76f4\u63a5\u62a5\u9519\uff0c \u5982\u679c\u662f\u5219\u8d4b\u503c\u7ed9<code>uid</code>\u53d8\u91cf\u3002</p> <p>\u901a\u8fc7<code>Hello World</code>\u4ee3\u7801\u4e0e\u4f7f\u7528<code>Pait</code>\u540e\u7684\u4ee3\u7801\u505a\u5bf9\u6bd4\uff0c\u53ef\u4ee5\u770b\u5230\u4f7f\u7528<code>Pait</code>\u540e\u7684\u4ee3\u7801\u66f4\u52a0\u7b80\u5355\u660e\u4e86\uff0c\u540c\u65f6\u4e5f\u7b26\u5408\u4e86\u73b0\u5728<code>Python</code>\u6d41\u884c\u7684<code>Type Hint</code>\uff0c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7a33\u5065\u6027\u3002</p> <p>Note</p> <p>\u76f4\u63a5\u4f7f\u7528Body()\u65f6, <code>mypy</code>\u4f1a\u68c0\u67e5\u5230\u7c7b\u578b\u4e0d\u5339\u914d, \u4e3a\u6b64\u53ef\u4ee5\u901a\u8fc7Body.i()\u5ffd\u7565\u8fd9\u4e2a\u95ee\u9898\u3002 \u5982\u679c\u9700\u8981<code>mypy</code>\u68c0\u67e5Body\u4e2d<code>default</code>\uff0c<code>default_factory</code>\u4ee5\u53ca<code>example</code>\u5c5e\u6027\u7684\u503c\uff0c \u90a3\u4e48\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528Body.t()\u3002</p>"},{"location":"1_2_how_to_use_field/","title":"\u5982\u4f55\u4f7f\u7528Field\u5bf9\u8c61","text":"<p><code>Field</code>\u5bf9\u8c61\u5728<code>Pait</code>\u4e2d\u8d77\u5230\u4e86\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff0c <code>Pait</code>\u9664\u4e86\u901a\u8fc7<code>Field</code>\u5bf9\u8c61\u83b7\u53d6\u6570\u636e\u6765\u6e90\u5916\uff0c \u8fd8\u53ef\u4ee5\u5b9e\u73b0\u5176\u5b83\u7684\u529f\u80fd\uff0c \u4e0d\u8fc7\u672c\u7ae0\u4e2d\u53ea\u7740\u91cd\u8bf4\u660e\u53c2\u6570\u6821\u9a8c\u3002</p>"},{"location":"1_2_how_to_use_field/#1field","title":"1.Field\u7684\u79cd\u7c7b","text":"<p>\u9664\u4e86\u4ecb\u7ecd\u63d0\u5230\u7684<code>Body</code>\u5916\uff0c \u8fd8\u6709\u5176\u4ed6\u4e0d\u540c\u542b\u4e49\u7684<code>Field</code>\u5bf9\u8c61\uff0c \u5b83\u4eec\u7684\u540d\u79f0\u548c\u4f5c\u7528\u5982\u4e0b:</p> <ul> <li>Body: \u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684json\u6570\u636e</li> <li>Cookie: \u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684cookie\u6570\u636e(\u6ce8\u610f\uff0c \u76ee\u524dCookie\u6570\u636e\u4f1a\u88ab\u8f6c\u5316\u4e3aPython\u7684dict\u5bf9\u8c61\uff0c \u8fd9\u610f\u5473\u7740Cookie\u7684Key\u4e0d\u80fd\u91cd\u590d\u3002\u5efa\u8bae\u5f53Field\u4e3aCookie\u65f6\uff0c\u53c2\u6570\u7684\u7c7b\u578b\u4e3astr)</li> <li>File\uff1a\u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684file\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e0e\u539fWeb\u6846\u67b6\u7684file\u5bf9\u8c61\u4e00\u81f4</li> <li>Form\uff1a\u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684form\u6570\u636e\uff0c\u5982\u679c\u6709\u591a\u4e2a\u91cd\u590dKey\uff0c\u53ea\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u503c</li> <li>Header: \u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684header\u6570\u636e</li> <li>Json: \u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684json\u6570\u636e(\u4e0eBody\u4e00\u6837)</li> <li>Path: \u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684path\u6570\u636e\uff0c\u5982<code>/api/{version}/test</code>\uff0c\u5219\u4f1a\u83b7\u53d6\u5230version\u7684\u6570\u636e</li> <li>Query: \u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684Url\u53c2\u6570\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u5982\u679c\u6709\u591a\u4e2a\u91cd\u590dKey\uff0c\u53ea\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u503c</li> <li>MultiForm\uff1a\u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684form\u6570\u636e\uff0c \u8fd4\u56deKey\u5bf9\u5e94\u7684\u6570\u636e\u5217\u8868</li> <li>MultiQuery\uff1a\u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684Url\u53c2\u6570\u5bf9\u5e94\u7684\u6570\u636e\uff0c \u8fd4\u56deKey\u5bf9\u5e94\u7684\u6570\u636e\u5217\u8868</li> </ul> <p>\u5404\u4e2a\u79cd\u7c7b\u7684\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u586b\u5165<code>&lt;name&gt;:&lt;type&gt;=&lt;default&gt;</code>\u4e2d\u7684<code>default</code>\u4f4d\u7f6e\u5373\u53ef\uff0c\u4ee5\u8fd9\u6bb5\u4ee3\u7801\u4e3a\u4f8b\u5b50:</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_demo.py<pre><code>from enum import Enum\nfrom typing import List, Optional\nfrom flask import Flask\nfrom pait.app.flask import pait\nfrom pait.field import Cookie, Form, MultiForm, MultiQuery, Path, Query\nclass SexEnum(str, Enum):\nman: str = \"man\"\nwoman: str = \"woman\"\n@pait()\ndef demo_route(\na: str = Form.t(description=\"form data\"),\nb: str = Form.t(description=\"form data\"),\nc: List[str] = MultiForm.t(description=\"form data\"),\ncookie: dict = Cookie.t(raw_return=True, description=\"cookie\"),\nmulti_user_name: List[str] = MultiQuery.t(description=\"user name\", min_length=2, max_length=4),\nage: int = Path.t(description=\"age\", gt=1, lt=100),\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nuser_name: str = Query.t(description=\"user name\", min_length=2, max_length=4),\nemail: Optional[str] = Query.t(default=\"example@xxx.com\", description=\"user email\"),\nsex: SexEnum = Query.t(description=\"sex\"),\n) -&gt; dict:\nreturn {\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"form_a\": a,\n\"form_b\": b,\n\"form_c\": c,\n\"cookie\": cookie,\n\"multi_user_name\": multi_user_name,\n\"age\": age,\n\"uid\": uid,\n\"user_name\": user_name,\n\"email\": email,\n\"sex\": sex,\n},\n}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo/&lt;age&gt;\", \"demo\", demo_route, methods=[\"POST\"])\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_demo.py<pre><code>from enum import Enum\nfrom typing import List, Optional\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Cookie, Form, MultiForm, MultiQuery, Path, Query\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nclass SexEnum(str, Enum):\nman: str = \"man\"\nwoman: str = \"woman\"\n@pait()\nasync def demo_route(\na: str = Form.t(description=\"form data\"),\nb: str = Form.t(description=\"form data\"),\nc: List[str] = MultiForm.t(description=\"form data\"),\ncookie: dict = Cookie.t(raw_return=True, description=\"cookie\"),\nmulti_user_name: List[str] = MultiQuery.t(description=\"user name\", min_length=2, max_length=4),\nage: int = Path.t(description=\"age\", gt=1, lt=100),\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nuser_name: str = Query.t(description=\"user name\", min_length=2, max_length=4),\nemail: Optional[str] = Query.t(default=\"example@xxx.com\", description=\"user email\"),\nsex: SexEnum = Query.t(description=\"sex\"),\n) -&gt; JSONResponse:\nreturn JSONResponse(\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"form_a\": a,\n\"form_b\": b,\n\"form_c\": c,\n\"cookie\": cookie,\n\"multi_user_name\": multi_user_name,\n\"age\": age,\n\"uid\": uid,\n\"user_name\": user_name,\n\"email\": email,\n\"sex\": sex,\n},\n}\n)\napp: Starlette = Starlette()\napp.add_route(\"/api/demo/{age}\", demo_route, methods=[\"POST\"])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_demo.py<pre><code>from enum import Enum\nfrom typing import List, Optional\nfrom pait.app.sanic import pait\nfrom pait.field import Cookie, Form, MultiForm, MultiQuery, Path, Query\nfrom sanic import HTTPResponse, Sanic, json\nclass SexEnum(str, Enum):\nman: str = \"man\"\nwoman: str = \"woman\"\n@pait()\nasync def demo_route(\na: str = Form.t(description=\"form data\"),\nb: str = Form.t(description=\"form data\"),\nc: List[str] = MultiForm.t(description=\"form data\"),\ncookie: dict = Cookie.t(raw_return=True, description=\"cookie\"),\nmulti_user_name: List[str] = MultiQuery.t(description=\"user name\", min_length=2, max_length=4),\nage: int = Path.t(description=\"age\", gt=1, lt=100),\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nuser_name: str = Query.t(description=\"user name\", min_length=2, max_length=4),\nemail: Optional[str] = Query.t(default=\"example@xxx.com\", description=\"user email\"),\nsex: SexEnum = Query.t(description=\"sex\"),\n) -&gt; HTTPResponse:\nreturn json(\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"form_a\": a,\n\"form_b\": b,\n\"form_c\": c,\n\"cookie\": cookie,\n\"multi_user_name\": multi_user_name,\n\"age\": age,\n\"uid\": uid,\n\"user_name\": user_name,\n\"email\": email,\n\"sex\": sex,\n},\n}\n)\napp: Sanic = Sanic(name=\"demo\")\napp.add_route(demo_route, \"/api/demo/&lt;age&gt;\", methods={\"POST\"})\napp.run()\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_demo.py<pre><code>from enum import Enum\nfrom typing import List, Optional\nfrom pait.app.tornado import pait\nfrom pait.field import Cookie, Form, MultiForm, MultiQuery, Path, Query\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass SexEnum(str, Enum):\nman: str = \"man\"\nwoman: str = \"woman\"\nclass DemoHandler(RequestHandler):\n@pait()\nasync def post(\nself,\na: str = Form.t(description=\"form data\"),\nb: str = Form.t(description=\"form data\"),\nc: List[str] = MultiForm.t(description=\"form data\"),\ncookie: dict = Cookie.t(raw_return=True, description=\"cookie\"),\nmulti_user_name: List[str] = MultiQuery.t(description=\"user name\", min_length=2, max_length=4),\nage: int = Path.t(description=\"age\", gt=1, lt=100),\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nuser_name: str = Query.t(description=\"user name\", min_length=2, max_length=4),\nemail: Optional[str] = Query.t(default=\"example@xxx.com\", description=\"user email\"),\nsex: SexEnum = Query.t(description=\"sex\"),\n) -&gt; None:\nself.write(\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"form_a\": a,\n\"form_b\": b,\n\"form_c\": c,\n\"cookie\": cookie,\n\"multi_user_name\": multi_user_name,\n\"age\": age,\n\"uid\": uid,\n\"user_name\": user_name,\n\"email\": email,\n\"sex\": sex,\n},\n}\n)\napp: Application = Application([(r\"/api/demo/(?P&lt;age&gt;\\w+)\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>Note</p> <p>\u4e3a\u4e86\u786e\u4fdd\u6f14\u793a\u7684\u4ee3\u7801\u80fd\u591f\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u987a\u5229\u8fd0\u884c\uff0c\u8fd9\u91cc\u6ca1\u6709\u6f14\u793a<code>File</code>\u5b57\u6bb5\u7684\u7528\u6cd5\uff0c\u5177\u4f53\u7528\u6cd5\u8bf7\u53c2\u8003\u4e0d\u540cWeb\u6846\u67b6\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684<code>field_route.py</code>\u6587\u4ef6\u4e2d<code>/api/pait-base-field</code>\u5bf9\u5e94\u7684\u8def\u7531\u51fd\u6570\u3002</p> <p>\u8fd9\u6bb5\u4ee3\u7801\u6765\u6f14\u793a\u4e86\u901a\u8fc7\u4e0d\u540c\u79cd\u7c7b<code>Field</code>\u4ece\u8bf7\u6c42\u5bf9\u8c61\u83b7\u53d6\u8bf7\u6c42\u8005\u7684\u53c2\u6570\uff0c\u5e76\u7ec4\u88c5\u6210\u4e00\u5b9a\u7684\u683c\u5f0f\u8fd4\u56de\u3002 \u63a5\u4e0b\u6765\u8fd0\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\uff0c\u7136\u540e\u4f7f\u7528<code>curl</code>\u547d\u4ee4\u5728\u7ec8\u7aef\u8fdb\u884c\u4e00\u6b21\u8bf7\u6c42\u6d4b\u8bd5\uff0c\u547d\u4ee4\u5982\u4e0b: <pre><code>curl -X 'POST' \\\n'http://127.0.0.1:8000/api/demo/18?multi_user_name=aaa&amp;multi_user_name=bbb&amp;uid=999&amp;user_name=so1n&amp;sex=man' \\\n-H 'accept: */*' \\\n-H 'Cookie: cookie=aaa,aaa' \\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\n-d 'a=aaa&amp;b=bbb&amp;c=ccc1&amp;c=ccc2'\n</code></pre> \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f1a\u770b\u5230\u5982\u4e0b\u8f93\u51fa: <pre><code>{\n\"code\": 0,\n\"data\": {\n\"age\": 18,\n\"cookie\": {\n\"cookie\": \"aaa,aaa\"\n},\n\"email\": \"example@xxx.com\",\n\"form_a\": \"aaa\",\n\"form_b\": \"bbb\",\n\"form_c\": [\n\"ccc1\",\n\"ccc2\"\n],\n\"multi_user_name\": [\n\"aaa\",\n\"bbb\"\n],\n\"sex\": \"man\",\n\"uid\": 999,\n\"user_name\": \"so1n\"\n},\n\"msg\": \"\"\n}\n</code></pre> \u901a\u8fc7\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\uff0c<code>Pait</code>\u90fd\u80fd\u901a\u8fc7<code>Field</code>\u7684\u79cd\u7c7b\u51c6\u786e\u7684\u4ece\u8bf7\u6c42\u5bf9\u8c61\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u3002</p>"},{"location":"1_2_how_to_use_field/#2field","title":"2.Field\u7684\u529f\u80fd","text":"<p>\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c<code>curl</code>\u547d\u4ee4\u7684<code>url</code>\u5e76\u6ca1\u6709\u643a\u5e26<code>email</code>\u53c2\u6570\uff0c \u4f46\u662f\u63a5\u53e3\u8fd4\u56de\u7684\u54cd\u5e94\u503c\u4e2d\u7684<code>email</code>\u5374\u4e0d\u4e3a\u7a7a\uff0c\u4e14\u503c\u662f<code>example@xxx.com</code>\uff0c \u8fd9\u662f\u56e0\u4e3a<code>email</code>\u5b57\u6bb5\u7684<code>Field</code>\u7684<code>default</code>\u5c5e\u6027\u88ab\u8bbe\u7f6e\u4e3a<code>example@xx.com</code>\uff0c \u8fd9\u6837<code>Pait</code>\u4f1a\u5728\u65e0\u6cd5\u901a\u8fc7\u8bf7\u6c42\u4f53\u83b7\u53d6\u5230<code>email</code>\u503c\u7684\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u80fd\u628a\u9ed8\u8ba4\u503c\u8d4b\u7ed9\u53d8\u91cf\u3002</p> <p>\u9664\u4e86\u9ed8\u8ba4\u503c\u4e4b\u5916\uff0c <code>Field</code>\u4e5f\u6709\u5f88\u591a\u7684\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u5927\u90e8\u5206\u6765\u6e90\u4e8e<code>Field</code>\u6240\u7ee7\u627f\u7684<code>pydantic.Field</code>\u3002</p>"},{"location":"1_2_how_to_use_field/#21default","title":"2.1.default","text":"<p><code>Pait</code>\u901a\u8fc7\u8bfb\u53d6<code>Field</code>\u7684<code>default</code>\u5c5e\u6027\u6765\u83b7\u53d6\u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\uff0c\u5f53<code>Field</code>\u7684<code>default</code>\u5c5e\u6027\u4e0d\u4e3a\u7a7a\u4e14\u8bf7\u6c42\u4f53\u6ca1\u6709\u5bf9\u5e94\u7684\u503c\u65f6\uff0c<code>Pait</code>\u5c31\u4f1a\u628a<code>default</code>\u7684\u503c\u6ce8\u5165\u5230\u5bf9\u5e94\u7684\u53d8\u91cf\u4e2d\u3002</p> <p>\u4e0b\u9762\u662f\u7b80\u5355\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2a\u63a5\u53e3\u90fd\u76f4\u63a5\u8fd4\u56de\u83b7\u53d6\u5230\u7684\u503c<code>demo_value</code>\uff0c\u5176\u4e2d<code>demo</code>\u63a5\u53e3\u5e26\u6709\u9ed8\u8ba4\u503c\uff0c \u9ed8\u8ba4\u503c\u4e3a\u5b57\u7b26\u4e32123\uff0c\u800c<code>demo1</code>\u63a5\u53e3\u6ca1\u6709\u9ed8\u8ba4\u503c:</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_with_default_demo.py<pre><code>from flask import Flask\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn str(exc)\n@pait()\ndef demo(demo_value: str = field.Query.t(default=\"123\")) -&gt; str:\nreturn demo_value\n@pait()\ndef demo1(demo_value: str = field.Query.t()) -&gt; str:\nreturn demo_value\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.add_url_rule(\"/api/demo1\", view_func=demo1, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_with_default_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import PlainTextResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; PlainTextResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn PlainTextResponse(str(exc))\n@pait()\nasync def demo(demo_value: str = field.Query.t(default=\"123\")) -&gt; PlainTextResponse:\nreturn PlainTextResponse(demo_value)\n@pait()\nasync def demo1(demo_value: str = field.Query.t()) -&gt; PlainTextResponse:\nreturn PlainTextResponse(demo_value)\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\nRoute(\"/api/demo1\", demo1, methods=[\"GET\"]),\n]\n)\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_with_default_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom sanic import HTTPResponse, Request, Sanic\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn HTTPResponse(str(exc))\n@pait()\nasync def demo(demo_value: str = field.Query.t(default=\"123\")) -&gt; HTTPResponse:\nreturn HTTPResponse(demo_value)\n@pait()\nasync def demo1(demo_value: str = field.Query.t()) -&gt; HTTPResponse:\nreturn HTTPResponse(demo_value)\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.add_route(demo1, \"/api/demo1\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_with_default_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nself.write(str(exc))\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def get(self, demo_value: str = field.Query.t(default=\"123\")) -&gt; None:\nself.write(demo_value)\nclass Demo1Handler(_Handler):\n@pait()\nasync def get(self, demo_value: str = field.Query.t()) -&gt; None:\nself.write(demo_value)\napp: Application = Application([(r\"/api/demo\", DemoHandler), (r\"/api/demo1\", Demo1Handler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u5728\u8fd0\u884c\u4ee3\u7801\uff0c\u5e76\u4f7f\u7528<code>curl</code>\u8c03\u7528\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u6ca1\u6709\u4f20demo_value\u53c2\u6570\u65f6\uff0c<code>/api/demo</code>\u63a5\u53e3\u9ed8\u8ba4\u8fd4\u56de123, \u800c<code>/api/demo1</code>\u63a5\u53e3\u4f1a\u629b\u51fa\u627e\u4e0d\u5230<code>demo_value</code>\u503c\u7684\u9519\u8bef: <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\"\n123\n\u279c  curl \"http://127.0.0.1:8000/api/demo1\"\nCan not found demo_value value\n</code></pre></p> <p>\u5f53\u4f20\u7684demo_value\u53c2\u6570\u4e3a456\u65f6\uff0c<code>/api/demo</code>\u63a5\u53e3\u548c<code>/api/demo1</code>\u63a5\u53e3\u90fd\u4f1a\u8fd4\u56de456: <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=456\"\n456\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo1?demo_value=456\"\n456\n</code></pre></p> <p>Note</p> <p>\u9519\u8bef\u5904\u7406\u4f7f\u7528\u4e86<code>TipException</code>\uff0c\u53ef\u4ee5\u901a\u8fc7\u5f02\u5e38\u63d0\u793a\u4e86\u89e3<code>TipException</code>\u7684\u4f5c\u7528\u3002</p>"},{"location":"1_2_how_to_use_field/#22default_factory","title":"2.2.default_factory","text":"<p><code>default_factory</code>\u7684\u4f5c\u7528\u4e0e<code>default</code>\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7<code>default_factory</code>\u63a5\u6536\u7684\u503c\u662f\u51fd\u6570\uff0c\u53ea\u6709\u5f53\u8bf7\u6c42\u547d\u4e2d\u8def\u7531\u51fd\u6570\u4e14<code>Pait</code>\u65e0\u6cd5\u4ece\u8bf7\u6c42\u5bf9\u8c61\u4e2d\u627e\u5230\u53d8\u91cf\u9700\u8981\u7684\u503c\u65f6\u624d\u4f1a\u88ab\u6267\u884c\u5e76\u5c06\u8fd4\u56de\u503c\u6ce8\u5165\u5230\u53d8\u91cf\u4e2d\u3002</p> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff0c\u7b2c\u4e00\u4e2a\u63a5\u53e3\u7684\u9ed8\u8ba4\u503c\u662f\u5f53\u524d\u65f6\u95f4\uff0c \u7b2c\u4e8c\u4e2a\u63a5\u53e3\u7684\u9ed8\u8ba4\u503c\u662fuuid\uff0c\u4ed6\u4eec\u6bcf\u6b21\u7684\u8fd4\u56de\u503c\u90fd\u662f\u6536\u5230\u8bf7\u6c42\u65f6\u751f\u6210\u7684:</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_with_default_factory_demo.py<pre><code>import datetime\nimport uuid\nimport uvicorn  # type: ignore\nfrom flask import Flask\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn str(exc)\n@pait()\ndef demo(demo_value: datetime.datetime = field.Query.t(default_factory=datetime.datetime.now)) -&gt; str:\nreturn str(demo_value)\n@pait()\ndef demo1(demo_value: str = field.Query.t(default_factory=lambda: uuid.uuid4().hex)) -&gt; str:\nreturn demo_value\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.add_url_rule(\"/api/demo1\", view_func=demo1, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_with_default_factory_demo.py<pre><code>import datetime\nimport uuid\nimport uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import PlainTextResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; PlainTextResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn PlainTextResponse(str(exc))\n@pait()\nasync def demo(\ndemo_value: datetime.datetime = field.Query.t(default_factory=datetime.datetime.now),\n) -&gt; PlainTextResponse:\nreturn PlainTextResponse(str(demo_value))\n@pait()\nasync def demo1(demo_value: str = field.Query.t(default_factory=lambda: uuid.uuid4().hex)) -&gt; PlainTextResponse:\nreturn PlainTextResponse(demo_value)\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\nRoute(\"/api/demo1\", demo1, methods=[\"GET\"]),\n]\n)\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_with_default_factory_demo.py<pre><code>import datetime\nimport uuid\nimport uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom sanic import HTTPResponse, Request, Sanic\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn HTTPResponse(str(exc))\n@pait()\nasync def demo(demo_value: datetime.datetime = field.Query.t(default_factory=datetime.datetime.now)) -&gt; HTTPResponse:\nreturn HTTPResponse(str(demo_value))\n@pait()\nasync def demo1(demo_value: str = field.Query.t(default_factory=lambda: uuid.uuid4().hex)) -&gt; HTTPResponse:\nreturn HTTPResponse(demo_value)\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.add_route(demo1, \"/api/demo1\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_with_default_factory_demo.py<pre><code>import datetime\nimport uuid\nfrom pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nself.write(str(exc))\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def get(self, demo_value: datetime.datetime = field.Query.t(default_factory=datetime.datetime.now)) -&gt; None:\nself.write(str(demo_value))\nclass Demo1Handler(_Handler):\n@pait()\nasync def get(self, demo_value: str = field.Query.t(default_factory=lambda: uuid.uuid4().hex)) -&gt; None:\nself.write(demo_value)\napp: Application = Application([(r\"/api/demo\", DemoHandler), (r\"/api/demo1\", Demo1Handler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u5e76\u4f7f\u7528<code>curl</code>\u8c03\u7528\u53ef\u4ee5\u53d1\u73b0\u63a5\u53e3\u6bcf\u6b21\u8fd4\u56de\u7684\u7ed3\u679c\u90fd\u662f\u4e0d\u4e00\u6837\u7684: <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\"\n2022-02-07T14:54:29.127519\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\"\n2022-02-07T14:54:33.789994\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo1\"\n7e4659e18103471da9db91ed4843d962\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo1\"\nef84f04fa9fc4ea9a8b44449c76146b8\n</code></pre></p>"},{"location":"1_2_how_to_use_field/#23alias","title":"2.3.alias","text":"<p>\u901a\u5e38\u60c5\u51b5\u4e0b<code>Pait</code>\u4f1a\u4ee5\u53c2\u6570\u540d\u4e3akey\u4ece\u8bf7\u6c42\u4f53\u4e2d\u83b7\u53d6\u6570\u636e\uff0c\u4f46\u662f\u4e00\u4e9b\u53c2\u6570\u540d\u5982<code>Content-Type</code>\u662fPython\u4e0d\u652f\u6301\u7684\u53d8\u91cf\u547d\u540d\u65b9\u5f0f\uff0c \u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528<code>alias</code>\u6765\u4e3a\u53d8\u91cf\u8bbe\u7f6e\u522b\u540d\uff0c\u5982\u4e0b\u793a\u4f8b\u4ee3\u7801:</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_with_alias_demo.py<pre><code>import uvicorn  # type: ignore\nfrom flask import Flask\nfrom pait import field\nfrom pait.app.flask import pait\n@pait()\ndef demo(content_type: str = field.Header.t(alias=\"Content-Type\")) -&gt; str:\nreturn content_type\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_with_alias_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom starlette.applications import Starlette\nfrom starlette.responses import PlainTextResponse\nfrom starlette.routing import Route\n@pait()\nasync def demo(content_type: str = field.Header.t(alias=\"Content-Type\")) -&gt; PlainTextResponse:\nreturn PlainTextResponse(content_type)\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\n]\n)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_with_alias_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom sanic import HTTPResponse, Sanic\n@pait()\nasync def demo(content_type: str = field.Header.t(alias=\"Content-Type\")) -&gt; HTTPResponse:\nreturn HTTPResponse(content_type)\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_with_alias_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoHandler(RequestHandler):\n@pait()\nasync def get(self, content_type: str = field.Header.t(alias=\"Content-Type\")) -&gt; None:\nself.write(content_type)\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd0\u884c\u4ee3\u7801\u5e76\u4f7f\u7528<code>curl</code>\u8c03\u7528\u53ef\u4ee5\u53d1\u73b0\uff0c<code>Pait</code>\u6b63\u5e38\u7684\u4ece\u8bf7\u6c42\u4f53\u7684Header\u4e2d\u63d0\u53d6<code>Content-Type</code>\u7684\u503c\u5e76\u8d4b\u7ed9\u4e86<code>content_type</code>\u53d8\u91cf\uff0c\u6240\u4ee5\u8def\u7531\u51fd\u6570\u80fd\u6b63\u5e38\u8fd4\u56de\u503c<code>123</code>: <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" -H \"Content-Type:123\"\n123\n</code></pre></p>"},{"location":"1_2_how_to_use_field/#24gtgeltlemultiple_of","title":"2.4.\u6570\u503c\u7c7b\u578b\u6821\u9a8c\u4e4bgt\uff0cge\uff0clt\uff0cle\uff0cmultiple_of","text":"<p><code>gt</code>\uff0c<code>ge</code>\uff0c<code>lt</code>\uff0c<code>le</code>\uff0c<code>multiple_of</code>\u90fd\u5c5e\u4e8e<code>pydantic</code>\u7684\u6570\u503c\u7c7b\u578b\u6821\u9a8c\uff0c \u4ec5\u7528\u4e8e\u6570\u503c\u7684\u7c7b\u578b\uff0c\u4ed6\u4eec\u7684\u4f5c\u7528\u5404\u4e0d\u76f8\u540c\uff1a</p> <ul> <li>gt\uff1a\u4ec5\u7528\u4e8e\u6570\u503c\u7684\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c\u6570\u503c\u662f\u5426\u5927\u4e8e\u8be5\u503c\uff0c\u540c\u65f6\u4e5f\u4f1a\u5728OpenAPI\u6dfb\u52a0<code>exclusiveMinimum</code>\u5c5e\u6027\u3002</li> <li>ge\uff1a\u4ec5\u7528\u4e8e\u6570\u503c\u7684\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c\u6570\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u8be5\u503c\uff0c\u540c\u65f6\u4e5f\u4f1a\u5728OpenAPI\u6dfb\u52a0<code>exclusiveMinimum</code>\u5c5e\u6027\u3002</li> <li>lt\uff1a\u4ec5\u7528\u4e8e\u6570\u503c\u7684\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c\u6570\u503c\u662f\u5426\u5c0f\u4e8e\u8be5\u503c\uff0c\u540c\u65f6\u4e5f\u4f1a\u5728OpenAPI\u6dfb\u52a0<code>exclusiveMaximum</code>\u5c5e\u6027\u3002</li> <li>le\uff1a\u4ec5\u7528\u4e8e\u6570\u503c\u7684\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c\u6570\u503c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u8be5\u503c\uff0c\u540c\u65f6\u4e5f\u4f1a\u5728OpenAPI\u6dfb\u52a0<code>exclusiveMaximum</code>\u5c5e\u6027\u3002</li> <li>multiple_of\uff1a\u4ec5\u7528\u4e8e\u6570\u5b57\uff0c \u4f1a\u6821\u9a8c\u8be5\u6570\u5b57\u662f\u5426\u662f\u6307\u5b9a\u503c\u5f97\u500d\u6570\u3002</li> </ul> <p>\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b:</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_with_num_check_demo.py<pre><code>from flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn jsonify({\"data\": exc.errors()})\nreturn jsonify({\"data\": str(exc)})\n@pait()\ndef demo(\ndemo_value1: int = field.Query.i(gt=1, lt=10),\ndemo_value2: int = field.Query.i(ge=1, le=1),\ndemo_value3: int = field.Query.i(multiple_of=3),\n) -&gt; dict:\nreturn {\"data\": [demo_value1, demo_value2, demo_value3]}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_with_num_check_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn JSONResponse({\"data\": exc.errors()})\nreturn JSONResponse({\"data\": str(exc)})\n@pait()\nasync def demo(\ndemo_value1: int = field.Query.i(gt=1, lt=10),\ndemo_value2: int = field.Query.i(ge=1, le=1),\ndemo_value3: int = field.Query.i(multiple_of=3),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"data\": [demo_value1, demo_value2, demo_value3]})\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\n]\n)\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_with_num_check_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn json({\"data\": exc.errors()})\nreturn json({\"data\": str(exc)})\n@pait()\nasync def demo(\ndemo_value1: int = field.Query.i(gt=1, lt=10),\ndemo_value2: int = field.Query.i(ge=1, le=1),\ndemo_value3: int = field.Query.i(multiple_of=3),\n) -&gt; HTTPResponse:\nreturn json({\"data\": [demo_value1, demo_value2, demo_value3]})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_with_num_check_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import ValidationError\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nself.write({\"data\": exc.errors()})\nelse:\nself.write({\"data\": str(exc)})\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def get(\nself,\ndemo_value1: int = field.Query.i(gt=1, lt=10),\ndemo_value2: int = field.Query.i(ge=1, le=1),\ndemo_value3: int = field.Query.i(multiple_of=3),\n) -&gt; None:\nself.write({\"data\": [demo_value1, demo_value2, demo_value3]})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd9\u4efd\u793a\u4f8b\u4ee3\u7801\u53ea\u6709\u4e00\u4e2a\u63a5\u53e3\uff0c\u4f46\u662f\u63a5\u53d7\u4e86\u4e09\u4e2a\u53c2\u6570<code>demo_value1</code>, <code>demo_value2</code>, <code>demo_value3</code>\uff0c\u4ed6\u4eec\u5206\u522b\u53ea\u63a5\u6536\u7b26\u5408\u5927\u4e8e1\u5c0f\u4e8e10\uff0c\u7b49\u4e8e1\u4ee5\u53ca3\u7684\u500d\u6570\u7684\u4e09\u4e2a\u53c2\u6570, \u5728\u8fd0\u884c\u4ee3\u7801\u5e76\u4f7f\u7528<code>curl</code>\u8c03\u7528\u53ef\u4ee5\u53d1\u73b0\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u7b26\u5408\u8981\u6c42\u5e76\u5f97\u5230\u4e86\u60f3\u8981\u7684\u54cd\u5e94\u7ed3\u679c\uff0c \u7b2c\u4e8c\uff0c\u4e09\uff0c\u56db\u4e2a\u8bf7\u6c42\u5206\u522b\u662f<code>demo_value1</code>\uff0c<code>demo_value2</code>\uff0c<code>demo_value3</code>\u7684\u503c\u4e0d\u5728\u8981\u6c42\u7684\u8303\u56f4\u5185\uff0c\u6240\u4ee5<code>Pait</code>\u4f1a\u751f\u6210<code>Pydantic.ValidationError</code>\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u4ece\u9519\u8bef\u4fe1\u606f\u53ef\u4ee5\u7b80\u5355\u7684\u770b\u51fa\u6765\u4e09\u4e2a\u53c2\u6570\u90fd\u4e0d\u7b26\u5408\u63a5\u53e3\u8bbe\u7f6e\u7684\u9650\u5b9a\u6761\u4ef6\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value1=2&amp;demo_value2=1&amp;demo_value3=3\"\n{\"data\":[2,1,3]}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value1=11&amp;demo_value2=1&amp;demo_value3=3\"\n{\n\"data\": [\n{\n\"ctx\": {\"limit_value\": 10},\n            \"loc\": [\"query\", \"demo_value1\"],\n            \"msg\": \"ensure this value is less than 10\",\n            \"type\": \"value_error.number.not_lt\"\n}\n]\n}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value1=2&amp;demo_value2=2&amp;demo_value3=3\"\n{\n\"data\": [\n{\n\"ctx\": {\"limit_value\": 1},\n            \"loc\": [\"query\", \"demo_value2\"],\n            \"msg\": \"ensure this value is less than or equal to 1\",\n            \"type\": \"value_error.number.not_le\"\n}\n]\n}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value1=2&amp;demo_value2=1&amp;demo_value3=4\"\n{\n\"data\": [\n{\n\"ctx\": {\"multiple_of\": 3},\n            \"loc\": [\"query\", \"demo_value3\"],\n            \"msg\": \"ensure this value is a multiple of 3\",\n            \"type\": \"value_error.number.not_multiple\"\n}\n]\n}\n</code></pre></p>"},{"location":"1_2_how_to_use_field/#25min_itemsmax_items","title":"2.5.\u6570\u7ec4\u6821\u9a8c\u4e4bmin_items\uff0cmax_items","text":"<p><code>min_items</code>\uff0c<code>max_items</code>\u90fd\u5c5e\u4e8e<code>pydantic</code>\u7684<code>Sequence</code>\u7c7b\u578b\u6821\u9a8c\uff0c\u4ec5\u7528\u4e8e<code>Sequence</code>\u7684\u7c7b\u578b\uff0c\u4ed6\u4eec\u7684\u4f5c\u7528\u5404\u4e0d\u76f8\u540c\uff1a</p> <ul> <li>min_items\uff1a\u4ec5\u7528\u4e8e<code>Sequence</code>\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c<code>Sequence</code>\u662f\u5426\u6ee1\u8db3\u5927\u4e8e\u7b49\u4e8e\u6307\u5b9a\u7684\u503c\u3002</li> <li>max_items\uff1a \u4ec5\u7528\u4e8e<code>Sequence</code>\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c<code>Sequence</code>\u662f\u5426\u6ee1\u8db3\u5c0f\u4e8e\u7b49\u4e8e\u6307\u5b9a\u7684\u503c\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff0c\u8be5\u63a5\u53e3\u901a\u8fc7<code>field.MultiQuery</code>\u4ece\u8bf7\u6c42Url\u4e2d\u83b7\u53d6\u53c2\u6570<code>demo_value</code>\u7684\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u7ed9\u8c03\u7528\u7aef\uff0c\u5176\u4e2d\u6570\u7ec4\u7684\u957f\u5ea6\u9650\u5b9a\u5728\u5927\u4e8e\u7b49\u4e8e1\u4e14\u5c0f\u4e8e\u7b49\u4e8e2\u4e4b\u95f4\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_with_item_check_demo.py<pre><code>from typing import List\nimport uvicorn  # type: ignore\nfrom flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn jsonify({\"data\": exc.errors()})\nreturn jsonify({\"data\": str(exc)})\n@pait()\ndef demo(\ndemo_value: List[int] = field.MultiQuery.i(min_items=1, max_items=2),\n) -&gt; dict:\nreturn {\"data\": demo_value}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_with_item_check_demo.py<pre><code>from typing import List\nimport uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn JSONResponse({\"data\": exc.errors()})\nreturn JSONResponse({\"data\": str(exc)})\n@pait()\nasync def demo(\ndemo_value: List[int] = field.MultiQuery.i(min_items=1, max_items=2),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"data\": demo_value})\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\n]\n)\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_with_item_check_demo.py<pre><code>from typing import List\nimport uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn json({\"data\": exc.errors()})\nreturn json({\"data\": str(exc)})\n@pait()\nasync def demo(demo_value: List[int] = field.MultiQuery.i(min_items=1, max_items=2)) -&gt; HTTPResponse:\nreturn json({\"data\": demo_value})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_with_item_check_demo.py<pre><code>from typing import List\nfrom pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import ValidationError\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nself.write({\"data\": exc.errors()})\nelse:\nself.write({\"data\": str(exc)})\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def get(self, demo_value: List[int] = field.MultiQuery.i(min_items=1, max_items=2)) -&gt; None:\nself.write({\"data\": demo_value})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4e0e2.4\u4e00\u6837\uff0c\u901a\u8fc7<code>curl</code>\u8c03\u7528\u53ef\u4ee5\u53d1\u73b0\u5408\u6cd5\u7684\u53c2\u6570\u4f1a\u653e\u884c\uff0c\u4e0d\u5408\u6cd5\u7684\u53c2\u6570\u5219\u4f1a\u629b\u9519\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=1\"\n{\"data\":[1]}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=1&amp;demo_value=2\"\n{\"data\":[1,2]}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=1&amp;demo_value=2&amp;demo_value=3\"\n{\n\"data\": [\n{\n\"loc\": [\n\"demo_value\"\n],\n            \"msg\": \"ensure this value has at most 2 items\",\n            \"type\": \"value_error.list.max_items\",\n            \"ctx\": {\n\"limit_value\": 2\n}\n}\n]\n}\n</code></pre></p>"},{"location":"1_2_how_to_use_field/#26min_lengthmax_lengthregex","title":"2.6.\u5b57\u7b26\u4e32\u6821\u9a8c\u4e4bmin_length\uff0cmax_length\uff0cregex","text":"<p><code>min_length</code>\uff0c<code>max_length</code>\uff0c<code>regex</code>\u90fd\u5c5e\u4e8e<code>pydantic</code>\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u6821\u9a8c\uff0c\u4ec5\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u7c7b\u578b\uff0c\u4ed6\u4eec\u7684\u4f5c\u7528\u5404\u4e0d\u76f8\u540c\uff1a</p> <ul> <li>min_length\uff1a\u4ec5\u7528\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5426\u6ee1\u8db3\u5927\u4e8e\u7b49\u4e8e\u6307\u5b9a\u7684\u503c\u3002</li> <li>max_length\uff1a\u4ec5\u7528\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5426\u6ee1\u8db3\u5c0f\u4e8e\u7b49\u4e8e\u6307\u5b9a\u7684\u503c\u3002</li> <li>regex\uff1a\u4ec5\u7528\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4f1a\u6821\u9a8c\u5b57\u7b26\u4e32\u662f\u5426\u7b26\u5408\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff0c \u8be5\u63a5\u53e3\u9700\u8981\u4eceUrl\u4e2d\u83b7\u53d6\u4e00\u4e2a\u503c\uff0c \u8fd9\u4e2a\u503c\u5f97\u957f\u5ea6\u5927\u5c0f\u4e3a6\uff0c\u4e14\u5fc5\u987b\u4e3a\u82f1\u6587\u5b57\u6bcdu\u5f00\u5934\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_with_string_check_demo.py<pre><code>import uvicorn  # type: ignore\nfrom flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn jsonify({\"data\": exc.errors()})\nreturn jsonify({\"data\": str(exc)})\n@pait()\ndef demo(demo_value: str = field.Query.i(min_length=6, max_length=6, regex=\"^u\")) -&gt; dict:\nreturn {\"data\": demo_value}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_with_string_check_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn JSONResponse({\"data\": exc.errors()})\nreturn JSONResponse({\"data\": str(exc)})\n@pait()\nasync def demo(demo_value: str = field.Query.i(min_length=6, max_length=6, regex=\"^u\")) -&gt; JSONResponse:\nreturn JSONResponse({\"data\": demo_value})\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\n]\n)\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_with_string_check_demo.py<pre><code>import uvicorn  # type: ignore\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn json({\"data\": exc.errors()})\nreturn json({\"data\": str(exc)})\n@pait()\nasync def demo(demo_value: str = field.Query.i(min_length=6, max_length=6, regex=\"^u\")) -&gt; HTTPResponse:\nreturn json({\"data\": demo_value})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_with_string_check_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import ValidationError\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nself.write({\"data\": exc.errors()})\nelse:\nself.write({\"data\": str(exc)})\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def get(self, demo_value: str = field.Query.i(min_length=6, max_length=6, regex=\"^u\")) -&gt; None:\nself.write({\"data\": demo_value})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd0\u884c\u4ee3\u7801\u5e76\u4f7f\u7528<code>curl</code>\u8fdb\u884c\u4e09\u6b21\u8bf7\u6c42\uff0c\u901a\u8fc7\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u7b2c\u4e00\u6b21\u4e3a\u6b63\u5e38\u6570\u636e\uff0c\u7b2c\u4e8c\u6b21\u4e3a\u4e0d\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7b2c\u4e09\u6b21\u4e3a\u957f\u5ea6\u4e0d\u7b26\u5408\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=u66666\"\n{\"data\":\"u66666\"}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=666666\"\n{\"data\":[{\"loc\":[\"demo_value\"],\"msg\":\"string does not match regex \\\"^u\\\"\",\"type\":\"value_error.str.regex\",\"ctx\":{\"pattern\":\"^u\"}}]}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=1\"\n{\"data\":[{\"loc\":[\"demo_value\"],\"msg\":\"ensure this value has at least 6 characters\",\"type\":\"value_error.any_str.min_length\",\"ctx\":{\"limit_value\":6}}]}\n</code></pre></p>"},{"location":"1_2_how_to_use_field/#27raw_return","title":"2.7.raw_return","text":"<p>\u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u4e3a<code>False</code>\uff0c\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219<code>Pait</code>\u4e0d\u4f1a\u6839\u636e\u53c2\u6570\u540d\u6216\u8005<code>alias</code>\u4e3akey\u4ece\u8bf7\u6c42\u6570\u636e\u83b7\u53d6\u503c\uff0c \u800c\u662f\u628a\u6574\u4e2a\u8bf7\u6c42\u503c\u8fd4\u56de\u7ed9\u5bf9\u5e94\u7684\u53d8\u91cf\u3002</p> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff0c \u8be5\u63a5\u53e3\u4e3a\u4e00\u4e2aPOST\u63a5\u53e3\uff0c \u5b83\u9700\u8981\u4e24\u4e2a\u503c\uff0c\u7b2c\u4e00\u4e2a\u503c\u4e3a\u6574\u4e2a\u5ba2\u6237\u7aef\u4f20\u8fc7\u6765\u7684Json\u53c2\u6570\uff0c \u800c\u7b2c\u4e8c\u4e2a\u503c\u4e3a\u5ba2\u6237\u7aef\u4f20\u8fc7\u6765\u7684Json\u53c2\u6570\u4e2dKey\u4e3aa\u7684\u503c\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_with_raw_return_demo.py<pre><code>import uvicorn  # type: ignore\nfrom flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn jsonify({\"data\": exc.errors()})\nreturn jsonify({\"data\": str(exc)})\n@pait()\ndef demo(\ndemo_value: dict = field.Body.i(raw_return=True),\na: str = field.Body.i(),\n) -&gt; dict:\nreturn {\"data\": demo_value, \"a\": a}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"POST\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_with_raw_return_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn JSONResponse({\"data\": exc.errors()})\nreturn JSONResponse({\"data\": str(exc)})\n@pait()\nasync def demo(\ndemo_value: dict = field.Body.i(raw_return=True),\na: str = field.Body.i(),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"data\": demo_value, \"a\": a})\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"POST\"]),\n]\n)\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_with_raw_return_demo.py<pre><code>import uvicorn  # type: ignore\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn json({\"data\": exc.errors()})\nreturn json({\"data\": str(exc)})\n@pait()\nasync def demo(\ndemo_value: dict = field.Body.i(raw_return=True),\na: str = field.Body.i(),\n) -&gt; HTTPResponse:\nreturn json({\"data\": demo_value, \"a\": a})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"POST\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_with_raw_return_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import ValidationError\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nself.write({\"data\": exc.errors()})\nelse:\nself.write({\"data\": str(exc)})\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def post(\nself,\ndemo_value: dict = field.Body.i(raw_return=True),\na: str = field.Body.i(),\n) -&gt; None:\nself.write({\"data\": demo_value, \"a\": a})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd0\u884c\u4ee3\u7801\u5e76\u4f7f\u7528<code>curl</code>\u8c03\u7528\uff0c \u53ef\u4ee5\u53d1\u73b0\u7ed3\u679c\u7b26\u5408\u9884\u671f\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" -X POST -d '{\"a\": \"1\", \"b\": \"2\"}' --header \"Content-Type: application/json\"\n{\"demo_value\":{\"a\":\"1\",\"b\":\"2\"},\"a\":\"1\"}\n</code></pre></p>"},{"location":"1_2_how_to_use_field/#28","title":"2.8.\u81ea\u5b9a\u4e49\u67e5\u8be2\u4e0d\u5230\u503c\u7684\u5f02\u5e38","text":"<p>\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u8bf7\u6c42\u5bf9\u8c61\u4e2d\u6ca1\u6709<code>Pait</code>\u9700\u8981\u7684\u6570\u636e\uff0c\u90a3\u4e48<code>Pait</code>\u4f1a\u629b\u51fa<code>NotFoundValueException</code>\u5f02\u5e38\u3002 \u4e0d\u8fc7<code>Pait</code>\u53ef\u4ee5\u652f\u6301\u5f00\u53d1\u8005\u901a\u8fc7<code>not_value_exception</code>\u5b9a\u4e49\u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c\u5982\u4e0b\u4ee3\u7801\u4e2d\u8def\u7531\u51fd\u6570\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u7b2c\u4e00\u4e2a\u53d8\u91cf<code>demo_value1</code>\u6ca1\u6709\u8bbe\u7f6e\u4efb\u4f55<code>Field</code>\u7684\u5c5e\u6027\uff0c\u800c\u7b2c\u4e8c\u4e2a\u53d8\u91cf<code>demo_value2</code>\u8bbe\u7f6e\u4e86<code>not_value_exception</code>\u5c5e\u6027\u4e3a<code>RuntimeError(\"not found data\")</code>\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_field/flask_with_not_found_exc_demo.py<pre><code>import uvicorn  # type: ignore\nfrom flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn jsonify({\"data\": exc.errors()})\nreturn jsonify({\"data\": str(exc)})\n@pait()\ndef demo(\ndemo_value1: str = field.Query.i(),\ndemo_value2: str = field.Query.i(not_value_exception=RuntimeError(\"not found data\")),\n) -&gt; dict:\nreturn {\"data\": {\"demo_value1\": demo_value1, \"demo_value2\": demo_value2}}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_field/starlette_with_not_found_exc_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn JSONResponse({\"data\": exc.errors()})\nreturn JSONResponse({\"data\": str(exc)})\n@pait()\nasync def demo(\ndemo_value1: str = field.Query.i(),\ndemo_value2: str = field.Query.i(not_value_exception=RuntimeError(\"not found data\")),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"data\": {\"demo_value1\": demo_value1, \"demo_value2\": demo_value2}})\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\n]\n)\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/sanic_with_not_found_exc_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom pydantic import ValidationError\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nreturn json({\"data\": exc.errors()})\nreturn json({\"data\": str(exc)})\n@pait()\nasync def demo(\ndemo_value1: str = field.Query.i(),\ndemo_value2: str = field.Query.i(not_value_exception=RuntimeError(\"not found data\")),\n) -&gt; HTTPResponse:\nreturn json({\"data\": {\"demo_value1\": demo_value1, \"demo_value2\": demo_value2}})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_field/tornado_with_not_found_exc_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import ValidationError\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nif isinstance(exc, ValidationError):\nself.write({\"data\": exc.errors()})\nelse:\nself.write({\"data\": str(exc)})\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def get(\nself,\ndemo_value1: str = field.Query.i(),\ndemo_value2: str = field.Query.i(not_value_exception=RuntimeError(\"not found data\")),\n) -&gt; None:\nself.write({\"data\": {\"demo_value1\": demo_value1, \"demo_value2\": demo_value2}})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd0\u884c\u4ee3\u7801\uff0c\u5e76\u5728\u7ec8\u7aef\u6267\u884c\u5982\u4e0b<code>curl</code>\u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230<code>demo_value1</code>\u53d8\u91cf\u7f3a\u503c\u548c<code>demo_value2</code>\u7f3a\u503c\u7684\u54cd\u5e94\u662f\u4e0d\u540c\u7684\uff1a <pre><code>\u279c ~ curl \"http://127.0.0.1:8000/api/demo?demo_value1=1&amp;demo_value2=2\"\n{\"data\": {\"demo_value1\": \"1\", \"demo_value2\": \"2\"}}\n\u279c ~ curl \"http://127.0.0.1:8000/api/demo?demo_value2=2\"\n{\"data\": \"Can not found demo_value1 value\"}\n\u279c ~ curl \"http://127.0.0.1:8000/api/demo?demo_value1=1\"\n{\"data\": \"not found data\"}\n</code></pre></p>"},{"location":"1_2_how_to_use_field/#28_1","title":"2.8.\u5176\u5b83\u529f\u80fd","text":"<p>\u9664\u4e86\u4e0a\u8ff0\u529f\u80fd\u5916\uff0c<code>Pait</code>\u8fd8\u6709\u5176\u5b83\u529f\u80fd\uff0c\u53ef\u4ee5\u5230\u5bf9\u5e94\u6a21\u5757\u6587\u6863\u4e86\u89e3\uff1a</p> \u5c5e\u6027 \u6587\u6863 \u63cf\u8ff0 links OpenAPI \u7528\u4e8e\u652f\u6301OpenAPI\u7684link\u529f\u80fd media_type OpenAPI Field\u5bf9\u5e94\u7684media_type\uff0c\u7528\u4e8eOpenAPI\u7684Scheme\u7684\u53c2\u6570media type\u5206\u7c7b\u3002 openapi_serialization OpenAPI \u7528\u4e8e\u8be5\u503c\u5728OpenAPI\u7684Schema\u7684\u5e8f\u5217\u5316\u65b9\u5f0f\u3002 example OpenAPI \u7528\u4e8e\u6587\u6863\u7684\u793a\u4f8b\u503c\uff0c\u4ee5\u53caMock\u8bf7\u6c42\u4e0e\u54cd\u5e94\u7b49Mock\u529f\u80fd\uff0c\u540c\u65f6\u652f\u6301\u53d8\u91cf\u548c\u53ef\u8c03\u7528\u51fd\u6570\u5982<code>datetime.datetim.now</code>\uff0c\u63a8\u8350\u4e0efaker\u4e00\u8d77\u4f7f\u7528\u3002 description OpenAPI \u7528\u4e8eOpenAPI\u7684\u53c2\u6570\u63cf\u8ff0 openapi_include OpenAPI \u5b9a\u4e49\u8be5\u5b57\u6bb5\u4e0d\u88abOpenAPI\u8bfb\u53d6 extra_param_list Plugin \u5b9a\u4e49\u63d2\u4ef6\u7684\u884c\u4e3a"},{"location":"1_3_how_to_use_type/","title":"\u5982\u4f55\u4f7f\u7528Type","text":"<p><code>Type</code>\u7528\u4e8e\u6307\u660e\u8be5\u53d8\u91cf\u503c\u7684\u6700\u7ec8\u7c7b\u578b\u662f\u4ec0\u4e48\uff0c\u5982\u4e0b\u7684\u793a\u4f8b\u4ee3\u7801: <pre><code>@pait()\ndef demo(\na: str = field.Body.i(),\nb: int = field.Body.i(),\n) -&gt; dict:\nreturn {\"a\": a, \"b\": b}\n</code></pre> \u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u8ba4\u4e3a<code>Pait</code>\u4f1a\u5728\u5185\u90e8\u5c06\u51fd\u6570\u7b7e\u540d\u8f6c\u6362\u4e3a\u5982\u4e0b\u7684<code>Pydantic.BaseModel</code>: <pre><code>from pydantic import BaseModel, Field\nclass Demo(BaseModel):\na: str = Field()\nb: int = Field()\n</code></pre></p> <p>\u6240\u4ee5\u8def\u7531\u51fd\u6570\u4e2d\u7684<code>Type</code>\u53ef\u4ee5\u53d8\u5f97\u975e\u5e38\u7075\u6d3b\uff0c\u4f7f\u7528\u8005\u53ef\u4ee5\u50cfPydantic Field Types\u4e00\u6837\u4f7f\u7528\u4ee5\u53ca\u76f4\u63a5\u4f7f\u7528Pydantic Field Types\u7684\u62d3\u5c55<code>Type</code>\uff0c\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u7b26\u5408<code>Pait</code>\u89c4\u8303\u7684<code>Type</code>\u6765\u4f7f\u7528<code>Pait</code>\u7684\u4e00\u4e9b\u529f\u80fd\u3002</p>"},{"location":"1_3_how_to_use_type/#1typepydanticbasemodel","title":"1.Type\u4e3aPydantic.BaseModel","text":"<p>\u5728\u7ecf\u5386\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684\u5f00\u53d1\u540e\uff0c\u4f1a\u53d1\u73b0\u6709\u4e9b\u63a5\u53e3\u7684\u53c2\u6570\u53ef\u80fd\u53ef\u4ee5\u590d\u7528\uff0c\u8fd9\u65f6\u53ef\u4ee5\u91c7\u7528<code>Type</code>\u4e3a<code>Pydantic.BaseModel</code>\u7684\u65b9\u6848\u628a\u4e24\u4e2a\u63a5\u53e3\u91cd\u590d\u7684\u53c2\u6570\u62bd\u8c61\u4e3a\u4e00\u4e2a<code>pydantic.Basemodel</code></p> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff0c \u9996\u5148\u662f\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4e2d\u7684<code>DemoModel</code>\uff0c\u5b83\u7ee7\u627f\u4e8e<code>Pydantic.BaseModel</code>\u4e14\u6709\u4e09\u4e2a\u5c5e\u6027\u5206\u522b\u4e3a<code>uid</code>,<code>name</code>\u4ee5\u53ca<code>age</code>\uff0c\u7136\u540e\u6709\u4e24\u4e2a\u4e0d\u4e00\u6837\u7684\u63a5\u53e3\uff0c \u5176\u4e2d\u63a5\u53e3<code>demo</code>\u4f1a\u4eceUrl\u4e2d\u83b7\u53d6\u6240\u6709\u7684\u503c\uff0c\u5e76\u4ea4\u7ed9<code>DemoModel</code>\u8fdb\u884c\u6821\u9a8c\uff0c\u7136\u540e\u901a\u8fc7<code>.dict</code>\u65b9\u6cd5\u751f\u6210dict\u5e76\u8fd4\u56de\uff0c\u800c\u63a5\u53e3<code>demo1</code>\u4e0e\u63a5\u53e3<code>demo</code>\u5f88\u50cf\uff0c \u53ea\u4e0d\u8fc7\u83b7\u53d6\u6570\u636e\u7684\u6765\u6e90\u4eceUrl\u53d8\u4e3aJson Body\u3002</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_type/flask_with_model_demo.py<pre><code>from flask import Flask, Response, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pydantic import BaseModel, Field\nclass DemoModel(BaseModel):\nuid: str = Field(max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(min_length=4, max_length=10)\nage: int = Field(ge=0, le=100)\n@pait()\ndef demo(demo_model: DemoModel = field.Query.i(raw_return=True)) -&gt; Response:\nreturn jsonify(demo_model.dict())\n@pait()\ndef demo1(demo_model: DemoModel = field.Body.i(raw_return=True)) -&gt; Response:\nreturn jsonify(demo_model.dict())\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", \"demo\", demo, methods=[\"GET\"])\napp.add_url_rule(\"/api/demo1\", \"demo1\", demo1, methods=[\"POST\"])\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_type/starlette_with_model_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoModel(BaseModel):\nuid: str = Field(max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(min_length=4, max_length=10)\nage: int = Field(ge=0, le=100)\n@pait()\nasync def demo(demo_model: DemoModel = field.Query.i(raw_return=True)) -&gt; JSONResponse:\nreturn JSONResponse(demo_model.dict())\n@pait()\nasync def demo1(demo_model: DemoModel = field.Body.i(raw_return=True)) -&gt; JSONResponse:\nreturn JSONResponse(demo_model.dict())\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"]), Route(\"/api/demo1\", demo1, methods=[\"POST\"])])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/sanic_with_model_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pydantic import BaseModel, Field\nfrom sanic import Sanic, json, response\nclass DemoModel(BaseModel):\nuid: str = Field(max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(min_length=4, max_length=10)\nage: int = Field(ge=0, le=100)\n@pait()\nasync def demo(demo_model: DemoModel = field.Query.i(raw_return=True)) -&gt; response.HTTPResponse:\nreturn json(demo_model.dict())\n@pait()\nasync def demo1(demo_model: DemoModel = field.Body.i(raw_return=True)) -&gt; response.HTTPResponse:\nreturn json(demo_model.dict())\napp = Sanic(name=\"demo\")\napp.add_route(demo, \"/api/demo\", methods=[\"GET\"])\napp.add_route(demo1, \"/api/demo1\", methods=[\"POST\"])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/tornado_with_model_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoModel(BaseModel):\nuid: str = Field(max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(min_length=4, max_length=10)\nage: int = Field(ge=0, le=100)\nclass DemoHandler(RequestHandler):\n@pait()\ndef get(self, demo_model: DemoModel = field.Query.i(raw_return=True)) -&gt; None:\nself.write(demo_model.dict())\nclass Demo1Handler(RequestHandler):\n@pait()\ndef post(self, demo_model: DemoModel = field.Body.i(raw_return=True)) -&gt; None:\nself.write(demo_model.dict())\napp: Application = Application([(r\"/api/demo\", DemoHandler), (r\"/api/demo1\", Demo1Handler)])\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>Note</p> <p>\u5982\u679c<code>Field</code>\u5bf9\u8c61\u7684<code>raw_return</code>\u4e0d\u4e3aTrue\uff0c\u5219<code>Pait</code>\u4f1a\u4ee5Key\u4e3a<code>demo_model</code>\u4ece\u8bf7\u6c42\u8d44\u6e90\u4e2d\u83b7\u53d6\u503c</p> <p>\u63a5\u4e0b\u6765\u8fd0\u884c\u4ee3\u7801\u5e76\u4f7f\u7528<code>curl</code>\u5bf9\u4e24\u4e2a\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?uid=u12345&amp;name=so1n&amp;age=10\"\n{\"uid\":\"u12345\",\"name\":\"so1n\",\"age\":10}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo1\" -X POST -d '{\"uid\": \"u12345\", \"name\": \"so1n\", \"age\": 10}' --header \"Content-Type: application/json\"\n{\"uid\":\"u12345\",\"name\":\"so1n\",\"age\":10}\n</code></pre> \u901a\u8fc7\u8f93\u51fa\u7684\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\u4e24\u4e2a\u63a5\u53e3\u90fd\u80fd\u6b63\u5e38\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u5728\u8fd9\u79cd\u7528\u6cd5\u4e0b\uff0cField\u7684\u4f5c\u7528\u662f\u9650\u5b9a\u4e8e\u6574\u4e2aBaseModel\u7684\uff0c\u65e0\u6cd5\u4e3a\u6bcf\u4e00\u4e2a\u5c5e\u6027\u4f7f\u7528\u5355\u72ec\u7684<code>field</code>\uff0c\u8fd9\u65f6\u53ef\u4ee5\u91c7\u7528\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"1_3_how_to_use_type/#2typepydanticbasemodel","title":"2.Type\u4e3a\u7279\u6b8a\u7684Pydantic.BaseModel","text":"<p><code>Pait</code>\u7684<code>Field</code>\u5bf9\u8c61\u7ee7\u627f\u4e8e<code>pydantic.FieldInfo</code>\u5bf9\u8c61\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u8f6c\u4e3a\u6807\u51c6\u7684<code>pydantic.FieldInfo</code>\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a<code>Field</code>\u5bf9\u8c61\u8ba4\u4e3a\u662f\u4e00\u4e2a\u643a\u5e26\u8d44\u6e90\u6765\u6e90\u6807\u8bc6\u7684<code>pydantic.FieldInfo</code>\u5bf9\u8c61\uff0c\u4e5f\u662f\u53ef\u4ee5\u7528\u4e8e<code>pydantic.BaseModel</code>\u4e2d\uff0c\u6bd4\u5982\u524d\u6587\u8bf4\u5230\u7684<code>DemoModel</code>\u5bf9\u8c61\u53ef\u4ee5\u6539\u5199\u4e3a\u5982\u4e0b\u4ee3\u7801: <pre><code>from pait import field\nfrom pydantic import BaseModel\nclass DemoModel(BaseModel):\nuid: str = field.Query.i(max_length=6, min_length=6, regex=\"^u\")\nname: str = field.Query.i(min_length=4, max_length=10)\nage: int = field.Query.i(ge=0, le=100)\n</code></pre> \u8fd9\u6837\u4e00\u6765\u5c31\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u5c5e\u6027\u90fd\u4f7f\u7528\u4e0d\u4e00\u6837\u7684<code>Field</code>\u5bf9\u8c61\uff0c\u4e0d\u8fc7\u73b0\u5728<code>DemoModel</code>\u4e2d\u6bcf\u4e2a\u53d8\u91cf\u90fd\u4f7f\u7528\u4e86<code>Pait</code>\u7684<code>Field</code>\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u505a\u4e00\u70b9\u6539\u53d8\uff0c\u586b\u5199\u7684\u53c2\u6570\u5f62\u5f0f\u9700\u8981\u4ece<code>&lt;name&gt;:&lt;type&gt;=&lt;default&gt;</code>\u6539\u4e3a<code>&lt;name&gt;:&lt;type&gt;</code>\uff0c\u5982\u4e0b: <pre><code>@pait()\ndef demo(demo_model: DemoModel) -&gt; None:\npass\n</code></pre> \u6b64\u5916\uff0c\u5f53\u524d<code>DemoModel</code>\u4e2d\u6bcf\u4e2a\u5c5e\u6027\u7684<code>Field</code>\u5bf9\u8c61\u90fd\u88ab\u56fa\u5b9a\u4e3a<code>Query</code>\uff0c\u800c\u524d\u6587<code>demo1</code>\u63a5\u53e3\u7528\u5230\u7684\u662f<code>Body</code>\u5bf9\u8c61\uff0c\u4e0e<code>Query</code>\u5bf9\u8c61\u4e0d\u5339\u914d\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528\u5230<code>Pait</code>\u7684<code>AnyField</code>\u529f\u80fd\u4e86\uff0c\u9996\u5148\u628a\u6bcf\u4e2a<code>Field</code>\u5bf9\u8c61\u90fd\u66ff\u6362\u4e3a<code>pydantic.FieldInfo</code>: <pre><code>from pydantic import BaseModel, Field\nclass DemoModel(BaseModel):\nuid: str = Field(max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(min_length=4, max_length=10)\nage: int = Field(ge=0, le=100)\n</code></pre> \u7136\u540e\u901a\u8fc7<code>pait</code>\u88c5\u9970\u5668\u4e2d\u7684<code>default_field_class</code>\u5206\u522b\u6307\u5b9a\u4e86<code>demo</code>\u8def\u7531\u7684<code>AnyField</code>\u4e3a<code>Query</code>\uff0c<code>demo1</code>\u8def\u7531\u7684<code>AnyField</code>\u4e3a<code>Body</code>: <pre><code>@pait(default_field_class=field.Query)\ndef demo(demo_model: DemoModel) -&gt; None:\npass\n@pait(default_field_class=field.Body)\ndef demo1(demo_model: DemoModel) -&gt; None:\npass\n</code></pre> \u8fd9\u6837\u5c31\u53ef\u4ee5\u53ea\u7f16\u5199\u4e00\u4efd<code>DemoModel</code>\uff0c\u4f46\u53ef\u4ee5\u5728\u4e0d\u540c\u529f\u80fd\u7684\u8def\u7531\u51fd\u6570\u4e2d\u4f7f\u7528\u4e86\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b:</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_type/flask_with_pait_model_demo.py<pre><code>from uuid import uuid4\nfrom flask import Flask, Response, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pydantic import BaseModel, Field\nclass DemoModel(BaseModel):\nuid: str = Field(..., max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(..., min_length=4, max_length=10)\nage: int = Field(..., ge=0, le=100)\nrequest_id: str = field.Header.i(default_factory=lambda: str(uuid4()))\n@pait(default_field_class=field.Query)\ndef demo(demo_model: DemoModel) -&gt; Response:\nreturn jsonify(demo_model.dict())\n@pait(default_field_class=field.Body)\ndef demo1(demo_model: DemoModel) -&gt; Response:\nreturn jsonify(demo_model.dict())\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", \"demo\", demo, methods=[\"GET\"])\napp.add_url_rule(\"/api/demo1\", \"demo1\", demo1, methods=[\"POST\"])\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_type/starlette_with_pait_model_demo.py<pre><code>from uuid import uuid4\nimport uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoModel(BaseModel):\nuid: str = Field(..., max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(..., min_length=4, max_length=10)\nage: int = Field(..., ge=0, le=100)\nrequest_id: str = field.Header.i(default_factory=lambda: str(uuid4()))\n@pait(default_field_class=field.Query)\nasync def demo(demo_model: DemoModel) -&gt; JSONResponse:\nreturn JSONResponse(demo_model.dict())\n@pait(default_field_class=field.Body)\nasync def demo1(demo_model: DemoModel) -&gt; JSONResponse:\nreturn JSONResponse(demo_model.dict())\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"]), Route(\"/api/demo1\", demo1, methods=[\"POST\"])])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/sanic_with_pait_model_demo.py<pre><code>from uuid import uuid4\nimport uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pydantic import BaseModel, Field\nfrom sanic import Sanic, json, response\nclass DemoModel(BaseModel):\nuid: str = Field(..., max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(..., min_length=4, max_length=10)\nage: int = Field(..., ge=0, le=100)\nrequest_id: str = field.Header.i(default_factory=lambda: str(uuid4()))\n@pait(default_field_class=field.Query)\nasync def demo(demo_model: DemoModel) -&gt; response.HTTPResponse:\nreturn json(demo_model.dict())\n@pait(default_field_class=field.Body)\nasync def demo1(demo_model: DemoModel) -&gt; response.HTTPResponse:\nreturn json(demo_model.dict())\napp = Sanic(name=\"demo\")\napp.add_route(demo, \"/api/demo\", methods=[\"GET\"])\napp.add_route(demo1, \"/api/demo1\", methods=[\"POST\"])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/tornado_with_pait_model_demo.py<pre><code>from uuid import uuid4\nfrom pait import field\nfrom pait.app.tornado import pait\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoModel(BaseModel):\nuid: str = Field(..., max_length=6, min_length=6, regex=\"^u\")\nname: str = Field(..., min_length=4, max_length=10)\nage: int = Field(..., ge=0, le=100)\nrequest_id: str = field.Header.i(default_factory=lambda: str(uuid4()))\nclass DemoHandler(RequestHandler):\n@pait(default_field_class=field.Query)\ndef get(self, demo_model: DemoModel) -&gt; None:\nself.write(demo_model.dict())\nclass Demo1Handler(RequestHandler):\n@pait(default_field_class=field.Body)\ndef post(self, demo_model: DemoModel) -&gt; None:\nself.write(demo_model.dict())\napp: Application = Application([(r\"/api/demo\", DemoHandler), (r\"/api/demo1\", Demo1Handler)])\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd9\u4efd\u4ee3\u7801\u4e3a\u4e86\u9a8c\u8bc1\u5c5e\u4e8e<code>pait</code>\u7684<code>Field</code>\u5bf9\u8c61\u4e0d\u88ab\u5f71\u54cd\uff0c\u8fd8\u589e\u52a0\u4e86\u4e00\u4e2a<code>request_id</code>\u7684\u5c5e\u6027\uff0c\u5b83\u4f7f\u7528\u4e86<code>Header</code>\u5bf9\u8c61\uff0c\u8fd9\u610f\u5473\u7740\u4f1a\u4eceHeader\u83b7\u53d6\u6570\u636e\u3002</p> <p>\u73b0\u5728\u8fd0\u884c\u4ee3\u7801\uff0c\u5e76\u4f7f\u7528<code>curl</code>\u8fdb\u884c\u8c03\u7528\u53d1\u73b0\u54cd\u5e94\u7684\u7ed3\u679c\u662f\u6b63\u5e38\u7684\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?uid=u12345&amp;name=so1n&amp;age=10\"\n{\"age\":10,\"name\":\"so1n\",\"request_id\":\"6a5827f7-5767-46ef-91c6-f2ae99770865\",\"uid\":\"u12345\"}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo1\" -X POST -d '{\"uid\": \"u12345\", \"name\": \"so1n\", \"age\": 10}' --header \"Content-Type: application/json\"\n{\"age\":10,\"name\":\"so1n\",\"request_id\":\"3279944c-6de7-4270-8536-33619641f25e\",\"uid\":\"u12345\"}\n</code></pre></p> <p>Note</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5982\u4f55\u4f7f\u7528Field\u5bf9\u8c61\u4e2d<code>Pait</code>\u662f\u6309\u7167\u53d8\u91cf\u987a\u5e8f\u53bb\u5904\u7406/\u6821\u9a8c\u6bcf\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u5982\u679c\u53d1\u73b0\u6709\u4e0d\u5408\u6cd5\u7684\u503c\u5c31\u76f4\u63a5\u629b\u9519\uff0c\u4e0d\u4f1a\u5bf9\u5269\u4e0b\u7684\u503c\u8fdb\u884c\u5904\u7406\uff0c\u800c<code>Type</code>\u4e3a<code>pydantic.BaseModel</code>\u65f6\uff0c<code>Pait</code>\u4f1a\u628a\u53c2\u6570\u59d4\u6258\u7ed9<code>pydantic.BaseModel</code>\u6821\u9a8c\uff0c\u800c<code>pydantic.BaseModel</code>\u4f1a\u5bf9\u6240\u6709\u503c\u90fd\u8fdb\u884c\u6821\u9a8c\uff0c\u7136\u540e\u518d\u628a\u9519\u8bef\u629b\u51fa\u6765\u3002</p>"},{"location":"1_3_how_to_use_type/#3","title":"3.\u5176\u5b83","text":""},{"location":"1_3_how_to_use_type/#31request","title":"3.1.Request\u5bf9\u8c61","text":"<p>\u5728\u4f7f\u7528<code>Pait</code>\u65f6\uff0c<code>Request</code>\u5bf9\u8c61\u4f7f\u7528\u7684\u9891\u7387\u4f1a\u5927\u5e45\u7684\u964d\u4f4e\uff0c\u6240\u4ee5<code>Pait</code>\u4f1a\u81ea\u52a8\u628a<code>Request</code>\u5bf9\u8c61\u7701\u7565\uff0c\u6bd4\u5982\u539f\u672c<code>Starlette</code>\u6846\u67b6\u8def\u7531\u51fd\u6570\u7684\u5199\u6cd5\u662f\uff1a <pre><code>from starlette.requests import Request\nasync def demo(request: Request) -&gt; None:\npass\n</code></pre> \u800c\u5728\u4f7f\u7528\u4e86<code>Pait</code>\u540e\u4f1a\u53d8\u4e3a\u5982\u4e0b\u4ee3\u7801\uff1a <pre><code>from pait.app.starlette import pait\n@pait()\nasync def demo():\npass\n</code></pre></p> <p>\u5982\u679c\u5f00\u53d1\u8005\u9700\u8981<code>Request</code>\u5bf9\u8c61\uff0c\u5219\u4efb\u7136\u53ef\u4ee5\u4f7f\u7528\u6846\u67b6\u539f\u672c\u7684\u65b9\u6cd5\u6765\u83b7\u53d6<code>Request</code>\u5bf9\u8c61\uff0c\u4e0d\u8fc7<code>Pait</code>\u4f1a\u8981\u6c42\u586b\u5199\u7684<code>Type</code>\u5fc5\u987b\u662f<code>Request</code>\u5bf9\u8c61\u7684<code>Type</code>\uff0c<code>pait</code>\u624d\u80fd\u6b63\u786e\u7684\u628a<code>Request</code>\u5bf9\u8c61\u6ce8\u5165\u7ed9\u5bf9\u5e94\u7684\u53d8\u91cf\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_type/flask_with_request_demo.py<pre><code>from flask import Flask, Request, Response, jsonify\nfrom pait.app.flask import pait\n@pait()\ndef demo(req: Request) -&gt; Response:\nreturn jsonify({\"url\": req.url, \"method\": req.method})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", \"demo\", demo, methods=[\"GET\"])\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_type/starlette_with_request_demo.py<pre><code>import uvicorn\nfrom pait.app.starlette import pait\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\n@pait()\nasync def demo(req: Request) -&gt; JSONResponse:\nreturn JSONResponse({\"url\": str(req.url), \"method\": req.method})\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\n]\n)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/sanic_with_request_demo.py<pre><code>import uvicorn\nfrom pait.app.sanic import pait\nfrom sanic import Request, Sanic, json, response\n@pait()\nasync def demo(req: Request) -&gt; response.HTTPResponse:\nreturn json({\"url\": req.url, \"method\": req.method})\napp = Sanic(name=\"demo\")\napp.add_route(demo, \"/api/demo\", methods=[\"GET\"])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/tornado_with_request_demo.py<pre><code>from pait.app.tornado import pait\nfrom tornado.httputil import HTTPServerRequest\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoHandler(RequestHandler):\n@pait()\ndef get(self, req: HTTPServerRequest) -&gt; None:\nself.write({\"url\": req.full_url(), \"method\": req.method})\napp: Application = Application(\n[\n(r\"/api/demo\", DemoHandler),\n]\n)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd0\u884c\u4ee3\u7801\u5e76\u6267\u884c\u5982\u4e0b<code>curl</code>\u547d\u4ee4\u5373\u53ef\u770b\u5230\u7c7b\u4f3c\u7684\u7ed3\u679c\uff1a <pre><code>curl \"http://127.0.0.1:8000/api/demo\"\n{\"url\": \"http://127.0.0.1:8000/api/demo\", \"method\": \"GET\"}\n</code></pre></p>"},{"location":"1_3_how_to_use_type/#32pydantictype","title":"3.2.\u5982\u4f55\u81ea\u5b9a\u4e49\u7b26\u5408Pydantic\u6821\u9a8c\u7684Type","text":"<p>\u524d\u6587\u63d0\u5230\uff0c\u5728<code>Pait</code>\u4e2d<code>Type</code>\u8ddfPydantic\u7684<code>Type</code>\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u53ef\u4ee5\u901a\u8fc7<code>Type</code>\u6765\u62d3\u5c55\u6821\u9a8c\u89c4\u5219\u4ece\u800c\u5f25\u8865<code>Field</code>\u5bf9\u8c61\u7684\u4e0d\u8db3\uff0c \u6bd4\u5982\u5728\u4e00\u4e2a\u7528\u6237\u53ef\u80fd\u5206\u5e03\u5728\u4e0d\u540c\u56fd\u5bb6\u7684\u4e1a\u52a1\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u9009\u7528\u65f6\u95f4\u6233\u6765\u505a\u65f6\u95f4\u4f20\u9012\uff0c\u9632\u6b62\u65f6\u533a\u4e0d\u540c\u5e26\u6765\u7684\u6570\u636e\u9519\u8bef\uff0c\u8fd9\u65f6\u4ee3\u7801\u53ef\u4ee5\u5199\u4e3a\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_type/flask_with_datetime_demo.py<pre><code>import datetime\nfrom flask import Flask, Response, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\n@pait()\ndef demo(timestamp: datetime.datetime = field.Query.i()) -&gt; Response:\nreturn jsonify({\"time\": timestamp.isoformat()})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", \"demo\", demo, methods=[\"GET\"])\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_type/starlette_with_datetime_demo.py<pre><code>import datetime\nimport uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\n@pait()\nasync def demo(timestamp: datetime.datetime = field.Query.i()) -&gt; JSONResponse:\nreturn JSONResponse({\"time\": timestamp.isoformat()})\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\n]\n)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/sanic_with_datetime_demo.py<pre><code>import datetime\nimport uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom sanic import Sanic, json, response\n@pait()\nasync def demo(timestamp: datetime.datetime = field.Query.i()) -&gt; response.HTTPResponse:\nreturn json({\"time\": timestamp.isoformat()})\napp = Sanic(name=\"demo\")\napp.add_route(demo, \"/api/demo\", methods=[\"GET\"])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/tornado_with_datetime_demo.py<pre><code>import datetime\nfrom pait import field\nfrom pait.app.tornado import pait\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoHandler(RequestHandler):\n@pait()\ndef get(self, timestamp: datetime.datetime = field.Query.i()) -&gt; None:\nself.write({\"time\": timestamp.isoformat()})\napp: Application = Application(\n[\n(r\"/api/demo\", DemoHandler),\n]\n)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4e0d\u8fc7\u5728\u8fd0\u884c\u4ee3\u7801\u5e76\u4f7f\u7528\u5982\u4e0b<code>curl</code>\u8c03\u7528\u53ef\u4ee5\u53d1\u73b0\uff0c<code>Pydantic</code>\u81ea\u52a8\u628a\u65f6\u95f4\u6233\u8f6c\u4e3adatetime\u7c7b\u578b\u4e86\uff0c\u4e14\u65f6\u533a\u662fUTC\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?timestamp=1600000000\"\n{\"time\":\"2020-09-13T12:26:40+00:00\"}\n</code></pre> \u8fd9\u79cd\u5904\u7406\u65b9\u5f0f\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u4f46\u5047\u8bbe\u8fd9\u4e2a\u4e1a\u52a1\u7684\u6570\u636e\u5e93\u7684\u670d\u52a1\u5668\u662f\u4f4d\u4e8e\u67d0\u4e2a\u975eUTC\u65f6\u533a\uff0c\u800c\u6570\u636e\u5e93\u4e0e\u7a0b\u5e8f\u7684\u65f6\u533a\u90fd\u4f9d\u8d56\u4e8e\u673a\u5668\u7684\u65f6\u533a\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u5728\u6bcf\u6b21\u83b7\u53d6\u6570\u636e\u540e\u8fd8\u9700\u8981\u518d\u8f6c\u5316\u4e00\u6b21\u53c2\u6570\u7684\u65f6\u533a\uff0c \u975e\u5e38\u9ebb\u70e6\u3002 \u8fd9\u65f6\u53ef\u4ee5\u91c7\u7528\u7f16\u5199\u4e00\u4e2a\u7b26\u5408<code>Pydantic</code>\u6821\u9a8c\u89c4\u5219\u7684<code>Type</code>\u7c7b\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u4e00\u4e2a\u7b26\u5408<code>Pydantic</code>\u6821\u9a8c\u65b9\u6cd5\u7684\u7c7b\u5fc5\u987b\u6ee1\u8db3\u5e26\u6709<code>__get_validators__</code>\u7c7b\u65b9\u6cd5\uff0c\u4e14\u8be5\u65b9\u6cd5\u662f\u4e00\u4e2a\u751f\u6210\u5668\uff0c \u4e8e\u662f\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u8f6c\u6362\u65b9\u6cd5\uff0c\u4f7f<code>Pydantic</code>\u5728\u9047\u5230\u65f6\u95f4\u6233\u65f6\uff0c\u80fd\u628a\u65f6\u95f4\u8f6c\u4e3a<code>datetime</code>\u4e14\u8be5\u503c\u7684\u65f6\u533a\u4e3a\u670d\u52a1\u5668\u7684\u65f6\u533a\uff1a <pre><code>import datetime\nfrom typing import Callable, Generator, Union\nclass UnixDatetime(datetime.datetime):\n@classmethod\ndef __get_validators__(cls) -&gt; Generator[Callable, None, None]:\nyield cls.validate\n@classmethod\ndef validate(cls, v: Union[int, str]) -&gt; datetime.datetime:\nif isinstance(v, str):\nv = int(v)\nreturn datetime.datetime.fromtimestamp(v)\n</code></pre> \u7136\u540e\u628a\u8fd9\u4e2a\u7c7b\u5e94\u7528\u5230\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/how_to_use_type/flask_with_unix_datetime_demo.py<pre><code>import datetime\nfrom typing import Callable, Generator, Union\nfrom flask import Flask, Response, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nclass UnixDatetime(datetime.datetime):\n@classmethod\ndef __get_validators__(cls) -&gt; Generator[Callable, None, None]:\nyield cls.validate\n@classmethod\ndef validate(cls, v: Union[int, str]) -&gt; datetime.datetime:\nif isinstance(v, str):\nv = int(v)\nreturn datetime.datetime.fromtimestamp(v)\n@pait()\ndef demo(timestamp: UnixDatetime = field.Query.i()) -&gt; Response:\nreturn jsonify({\"time\": timestamp.isoformat()})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", \"demo\", demo, methods=[\"GET\"])\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/how_to_use_type/starlette_with_unix_datetime_demo.py<pre><code>import datetime\nfrom typing import Callable, Generator, Union\nimport uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass UnixDatetime(datetime.datetime):\n@classmethod\ndef __get_validators__(cls) -&gt; Generator[Callable, None, None]:\nyield cls.validate\n@classmethod\ndef validate(cls, v: Union[int, str]) -&gt; datetime.datetime:\nif isinstance(v, str):\nv = int(v)\nreturn datetime.datetime.fromtimestamp(v)\n@pait()\nasync def demo(timestamp: UnixDatetime = field.Query.i()) -&gt; JSONResponse:\nreturn JSONResponse({\"time\": timestamp.isoformat()})\napp = Starlette(\nroutes=[\nRoute(\"/api/demo\", demo, methods=[\"GET\"]),\n]\n)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/sanic_with_unix_datetime_demo.py<pre><code>import datetime\nfrom typing import Callable, Generator, Union\nimport uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom sanic import Sanic, json, response\nclass UnixDatetime(datetime.datetime):\n@classmethod\ndef __get_validators__(cls) -&gt; Generator[Callable, None, None]:\nyield cls.validate\n@classmethod\ndef validate(cls, v: Union[int, str]) -&gt; datetime.datetime:\nif isinstance(v, str):\nv = int(v)\nreturn datetime.datetime.fromtimestamp(v)\n@pait()\nasync def demo(timestamp: UnixDatetime = field.Query.i()) -&gt; response.HTTPResponse:\nreturn json({\"time\": timestamp.isoformat()})\napp = Sanic(name=\"demo\")\napp.add_route(demo, \"/api/demo\", methods=[\"GET\"])\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/how_to_use_type/tornado_with_unix_datetime_demo.py<pre><code>import datetime\nfrom typing import Callable, Generator, Union\nfrom pait import field\nfrom pait.app.tornado import pait\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass UnixDatetime(datetime.datetime):\n@classmethod\ndef __get_validators__(cls) -&gt; Generator[Callable, None, None]:\nyield cls.validate\n@classmethod\ndef validate(cls, v: Union[int, str]) -&gt; datetime.datetime:\nif isinstance(v, str):\nv = int(v)\nreturn datetime.datetime.fromtimestamp(v)\nclass DemoHandler(RequestHandler):\n@pait()\ndef get(self, timestamp: UnixDatetime = field.Query.i()) -&gt; None:\nself.write({\"time\": timestamp.isoformat()})\napp: Application = Application(\n[\n(r\"/api/demo\", DemoHandler),\n]\n)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u91cd\u65b0\u8fd0\u884c\u8fd9\u4efd\u4ee3\u7801\u540e\u4f7f\u7528<code>curl</code>\u547d\u4ee4\u8fdb\u884c\u6d4b\u8bd5\uff0c \u53d1\u73b0\u8fd4\u56de\u7684\u65f6\u95f4\u503c\u5df2\u7ecf\u6ca1\u6709\u5e26\u65f6\u533a\u4e86\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?timestamp=1600000000\"\n{\"time\":\"2020-09-13T20:26:40\"}\n</code></pre></p>"},{"location":"1_4_depend/","title":"Depend","text":"<p>\u524d\u6587\u4ecb\u7ecd\u7684<code>Field</code>\u5bf9\u8c61\u90fd\u662f\u4e0e\u8bf7\u6c42\u5bf9\u8c61\u76f8\u5173\u7684\uff0c\u4ed6\u4eec\u7684\u4f5c\u7528\u90fd\u662f\u628a\u8bf7\u6c42\u5bf9\u8c61\u6307\u5b9a\u7684\u8d44\u6e90\u6ce8\u5165\u5230\u8def\u7531\u51fd\u6570\u4e2d\u3002 \u800c<code>Depend</code>\u5219\u662f\u4e00\u79cd\u7279\u6b8a<code>Field</code>\u5bf9\u8c61\uff0c\u4ed6\u7684\u4f5c\u7528\u662f\u628a\u7b26\u5408<code>Pait</code>\u89c4\u5219\u7684\u51fd\u6570\u6ce8\u5165\u5230\u8def\u7531\u51fd\u6570\u4e2d\uff0c\u901a\u8fc7<code>Pait</code>\u7684<code>Depend</code>\u53ef\u4ee5\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd:</p> <ul> <li>\u5171\u4eab\u76f8\u540c\u7684\u903b\u8f91</li> <li>\u5b9e\u73b0\u5b89\u5168\u6821\u9a8c\u7684\u529f\u80fd</li> <li>\u4e0e\u522b\u7684\u7cfb\u7edf\u4ea4\u4e92(\u5982\u6570\u636e\u5e93)\u3002</li> </ul> <p>Note</p> <p><code>Depend</code>\u53ea\u505a\u8bf7\u6c42\u5bf9\u8c61\u76f8\u5173\u7684\u4f9d\u8d56\u6ce8\u5165\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42\u5bf9\u8c61\u4e4b\u5916\u7684\u4f9d\u8d56\u6ce8\u5165\u529f\u80fd\uff0c\u63a8\u8350\u901a\u8fc7DI\u5de5\u5177\u6765\u5b9e\u73b0\u4f9d\u8d56\u6ce8\u5165\u529f\u80fd\uff0c\u5177\u4f53\u7684DI\u5de5\u5177\u89c1Awesome Dependency Injection in Python\u3002</p>"},{"location":"1_4_depend/#1depend","title":"1.Depend\u7684\u4f7f\u7528","text":"<p>\u4e00\u822c\u7684\u540e\u7aef\u7cfb\u7edf\u4e2d\u90fd\u5e26\u6709\u7528\u6237Token\u6821\u9a8c\u4e1a\u52a1\uff0c\u8fd9\u4e2a\u4e1a\u52a1\u662f\u975e\u5e38\u7b26\u5408<code>Depend</code>\u7684\u4f7f\u7528\u573a\u666f\u3002 \u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\uff0c\u7528\u6237\u6bcf\u6b21\u8bbf\u95ee\u63a5\u53e3\u65f6\u90fd\u9700\u8981\u5e26\u4e0aToken\uff0c\u670d\u52a1\u7aef\u5728\u6536\u5230\u7528\u6237\u7684\u8bf7\u6c42\u540e\u4f1a\u5148\u5224\u65adToken\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u4e0d\u5408\u6cd5\u5219\u4f1a\u8fd4\u56de\u9519\u8bef\uff0c\u5408\u6cd5\u5219\u4f1a\u6267\u884c\u63a5\u53e3\u7684\u903b\u8f91\u3002</p> <p>\u5982\u679c\u5728\u4f7f\u7528\u7c7b<code>Flask</code>\u7684\u5faeWeb\u6846\u67b6\uff0c\u5927\u591a\u6570\u4f7f\u7528\u8005\u90fd\u4f1a\u9009\u62e9\u4f7f\u7528<code>Python</code>\u88c5\u9970\u5668\u7684\u65b9\u6cd5\u6765\u5171\u4eab\u7528\u6237Token\u6821\u9a8c\uff0c\u5982\u4e0b: <pre><code>@check_token()\ndef demo_route() -&gt; None:\npass\n</code></pre> \u6709\u4e9b\u65f6\u5019\u8fd8\u4f1a\u6839\u636eToken\u53bb\u83b7\u53d6\u5230uid\u6570\u636e\u5e76\u4f20\u7ed9\u8def\u7531\u51fd\u6570\u7684\u529f\u80fd\uff0c\u5982\u4e0b: <pre><code>@check_token()\ndef demo_route(uid: str) -&gt; None:\npass\n</code></pre> \u4f46\u662f\u8fd9\u79cd\u5b9e\u73b0\u65b9\u6cd5\u6bd4\u8f83\u52a8\u6001\uff0c\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u5f88\u96be\u68c0\u6d4b\u51fa\u6765\uff0c\u53ea\u80fd\u8ba2\u597d\u5185\u90e8\u89c4\u8303\uff0c\u624d\u6709\u53ef\u80fd\u9632\u6b62\u5f00\u53d1\u4eba\u5458\u9519\u8bef\u7684\u4f7f\u7528<code>check_token</code>\u88c5\u9970\u5668\uff0c\u4f46\u6ca1\u529e\u6cd5\u5b8c\u5168\u9632\u6b62\u9519\u8bef\u7684\u4f7f\u7528\uff0c\u800c\u4f7f\u7528<code>Pait</code>\u7684<code>Depend</code>\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p><code>Pait</code>\u7684<code>Depend</code>\u4f7f\u7528\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff0c\u5176\u4e2d\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u662f\u6a21\u4eff\u6570\u636e\u5e93\u7684\u8c03\u7528\u65b9\u6cd5\uff0c\u76ee\u524d\u5047\u8bbe\u6570\u636e\u5e93\u53ea\u6709\u7528\u6237<code>so1n</code>\u62e5\u6709token\uff0c\u4e14token\u503c\u4e3a\"u12345\"\uff1b \u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4ee3\u7801\u662f\u4e00\u4e2a\u540d\u4e3a<code>get_user_by_token</code>\u7684\u51fd\u6570\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u4eceHeader\u4e2d\u83b7\u53d6Token\uff0c\u5e76\u6821\u9a8cToken\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u5219\u8fd4\u56de\u7528\u6237\uff0c\u4e0d\u5b58\u5728\u5219\u629b\u9519\u3002\u8fd9\u4e2a\u51fd\u6570\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u586b\u5199\u89c4\u5219\u4e0e\u88ab<code>Pait</code>\u88c5\u9970\u7684\u8def\u7531\u51fd\u6570\u4e00\u81f4\uff0c \u4e4b\u524d\u63d0\u5230\u7684\u4efb\u4f55\u5199\u6cd5\u90fd\u53ef\u4ee5\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u540c\u65f6\u8be5\u51fd\u6570\u53ef\u4ee5\u88ab<code>Pait</code>\u7684<code>Depend</code>\u4f7f\u7528\u3002 \u7b2c\u4e09\u6bb5\u9ad8\u4eae\u5219\u662f\u8def\u7531\u51fd\u6570\u586b\u5199\u7684Token\u53c2\u6570\uff0c\u6bd4\u8f83\u7279\u6b8a\u7684\u662f\u8fd9\u91cc\u901a\u8fc7<code>field.Depend</code>\u6765\u88f9\u4f4f<code>get_user_by_token</code>\u51fd\u6570\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/depend/flask_with_depend_demo.py<pre><code>from flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn jsonify({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\ndef get_user_by_token(token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait()\ndef demo(token: str = field.Depends.i(get_user_by_token)) -&gt; dict:\nreturn {\"user\": token}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/depend/starlette_with_depend_demo.py<pre><code>import uvicorn  # type: ignore\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nasync def get_user_by_token(token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait()\nasync def demo(token: str = field.Depends.i(get_user_by_token)) -&gt; JSONResponse:\nreturn JSONResponse({\"user\": token})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/sanic_with_depend_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn json({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nasync def get_user_by_token(token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait()\nasync def demo(token: str = field.Depends.i(get_user_by_token)) -&gt; HTTPResponse:\nreturn json({\"user\": token})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/tornado_with_depend_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nself.write({\"data\": str(exc)})\nself.finish()\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nasync def get_user_by_token(token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\nclass DemoHandler(_Handler):\n@pait()\nasync def get(self, token: str = field.Depends.i(get_user_by_token)) -&gt; None:\nself.write({\"user\": token})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u63a5\u7740\u4f7f\u7528<code>curl</code>\u547d\u4ee4\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u8fd9\u6bb5\u4ee3\u7801\u5de5\u4f5c\u4e00\u5207\u6b63\u5e38\uff0c\u5f53token\u5b58\u5728\u65f6\u8fd4\u56de\u7528\u6237\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de\u629b\u9519\u4fe1\u606f: <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" --header \"token:u12345\"\n{\"user\":\"so1n\"}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" --header \"token:u123456\"\n{\"data\":\"Can not found by token:u123456\"}\n</code></pre></p> <p>\u9664\u6b64\u4e4b\u5916\uff0c<code>Pait</code>\u8fd8\u80fd\u652f\u6301\u591a\u5c42Depend\u5d4c\u5957\u7684\uff0c\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u4e3a\u4f8b\u5b50\uff0c\u5047\u8bbeToken\u8981\u7ecf\u8fc7\u4e00\u5c42\u7279\u522b\u7684\u6821\u9a8c\uff0c\u4e14\u8be5\u6821\u9a8c\u903b\u8f91\u4f1a\u88ab\u590d\u7528\uff0c\u5219\u4ee3\u7801\u53ef\u4ee5\u6539\u5199\u6210\u5982\u4e0b\u4ee3\u7801\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/depend/flask_with_nested_depend_demo.py<pre><code>from flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn jsonify({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\ndef check_token(token: str = field.Header.i()) -&gt; str:\nif len(token) != 6 and token[0] != \"u\":\nraise RuntimeError(\"Illegal Token\")\nreturn token\ndef get_user_by_token(token: str = field.Depends.i(check_token)) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait()\ndef demo(token: str = field.Depends.i(get_user_by_token)) -&gt; dict:\nreturn {\"user\": token}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/depend/starlette_with_nested_depend_demo.py<pre><code>import uvicorn  # type: ignore\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\ndef check_token(token: str = field.Header.i()) -&gt; str:\nif len(token) != 6 and token[0] != \"u\":\nraise RuntimeError(\"Illegal Token\")\nreturn token\nasync def get_user_by_token(token: str = field.Depends.i(check_token)) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait()\nasync def demo(token: str = field.Depends.i(get_user_by_token)) -&gt; JSONResponse:\nreturn JSONResponse({\"user\": token})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/sanic_with_nested_depend_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn json({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\ndef check_token(token: str = field.Header.i()) -&gt; str:\nif len(token) != 6 and token[0] != \"u\":\nraise RuntimeError(\"Illegal Token\")\nreturn token\nasync def get_user_by_token(token: str = field.Depends.i(check_token)) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait()\nasync def demo(token: str = field.Depends.i(get_user_by_token)) -&gt; HTTPResponse:\nreturn json({\"user\": token})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/tornado_with_nested_depend_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nself.write({\"data\": str(exc)})\nself.finish()\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\ndef check_token(token: str = field.Header.i()) -&gt; str:\nif len(token) != 6 and token[0] != \"u\":\nraise RuntimeError(\"Illegal Token\")\nreturn token\nasync def get_user_by_token(token: str = field.Depends.i(check_token)) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\nclass DemoHandler(_Handler):\n@pait()\nasync def get(self, token: str = field.Depends.i(get_user_by_token)) -&gt; None:\nself.write({\"user\": token})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u5176\u4e2d\u9ad8\u4eae\u90e8\u5206\u4e3a\u65b0\u4fee\u6539\u7684\u5730\u65b9\uff0c \u4e3b\u8981\u662f\u65b0\u589e\u4e86\u4e00\u4e2a<code>check_token</code>\u7684\u51fd\u6570\u7528\u6765\u83b7\u53d6\u548c\u6821\u9a8cToken\uff0c\u800c<code>get_user_by_token</code>\u5219\u4f9d\u8d56\u4e8e<code>check_token</code>\u83b7\u53d6Token\u5e76\u5224\u65ad\u7528\u6237\u662f\u5426\u5b58\u5728\u3002 \u4f7f\u7528<code>curl</code>\u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5\uff0c\u53d1\u73b0\u54cd\u5e94\u7ed3\u679c\u6b63\u5e38\uff0c\u4e0d\u7b26\u5408\u6821\u9a8c\u903b\u8f91\u7684\u4f1a\u8fd4\u56de\u629b\u9519\u4fe1\u606f\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" --header \"token:u12345\"\n{\"user\":\"so1n\"}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" --header \"token:u123456\"\n{\"data\":\"Can not found by token:u123456\"}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" --header \"token:fu12345\"\n{\"data\":\"Illegal Token\"}\n</code></pre></p>"},{"location":"1_4_depend/#2contextmanagerdepend","title":"2.\u57fa\u4e8eContextManager\u7684Depend","text":"<p>\u4e0a\u6587\u6240\u793a\u7684<code>Depends</code>\u7528\u6cd5\u867d\u7136\u80fd\u6b63\u5e38\u7684\u4f7f\u7528\uff0c\u4f46\u662f\u5b83\u4e0d\u80fd\u50cf<code>Python</code>\u88c5\u9970\u5668\u4e00\u6837\u77e5\u9053\u51fd\u6570\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u5305\u62ec\u51fd\u6570\u662f\u5426\u6b63\u5e38\u8fd0\u884c\uff0c\u4ea7\u751f\u7684\u5f02\u5e38\u662f\u4ec0\u4e48\uff0c\u4f55\u65f6\u8fd0\u884c\u7ed3\u675f\u7b49\u7b49\u7b49\uff0c \u6240\u4ee5<code>Pait</code>\u7684<code>Depend</code>\u901a\u8fc7\u652f\u6301<code>ContentManager</code>\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u7684\u4f7f\u7528\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u628a\u51fd\u6570\u52a0\u4e0a\u5bf9\u5e94\u7684<code>ContextManager</code>\u88c5\u9970\u5668\uff0c\u7136\u540e\u6309\u7167\u5b98\u65b9\u6587\u6863\u4f7f\u7528<code>try</code>,<code>except</code>,<code>finally</code>\u8bed\u6cd5\u5757\u5373\u53ef\uff0c\u5982\u4e0b\u793a\u4f8b\u4ee3\u7801: <pre><code>from contextlib import contextmanager\nfrom typing import Any, Generator\n@contextmanager\ndef demo() -&gt; Generator[Any, Any, Any]:\ntry:\n# 1\nyield None\nexcept Exception:\n# 2\npass\nfinally:\n# 3\npass\n</code></pre> \u8be5\u4f8b\u5b50\u4e2d\u5e8f\u53f71\u7684\u4f4d\u7f6e\u7528\u6765\u7f16\u5199\u6b63\u5e38\u7684\u51fd\u6570\u903b\u8f91\uff0c\u5e76\u901a\u8fc7yield\u8fd4\u56de\u6570\u636e\uff0c\u5e8f\u53f72\u7684\u4f4d\u7f6e\u7528\u6765\u5199\u5f53\u51fd\u6570\u8fd0\u884c\u5f02\u5e38\u65f6\u7684\u4ee3\u7801\u903b\u8f91\uff0c\u6700\u540e\u7684\u5e8f\u53f73\u5219\u662f\u4e00\u4e2a\u7edf\u4e00\u7684\u51fd\u6570\u8fd0\u884c\u7ed3\u675f\u5904\u7406\u903b\u8f91\u3002</p> <p>Note</p> <p><code>ContextManager</code>\u7684<code>Depend</code>\u51fd\u6570\u9664\u4e86\u53c2\u6570\u5916\uff0c\u5176\u4f59\u7684\u7f16\u5199\u65b9\u6cd5\u548c\u5b98\u65b9\u7684\u4e00\u81f4\uff0c\u5177\u4f53\u53ef\u89c1contextlib \u2014 Utilities for with-statement contexts</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u4f7f\u7528\u4e86<code>ContextManager</code>\u548c<code>Depend</code>\u4f8b\u5b50\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/depend/flask_with_context_manager_depend_demo.py<pre><code>from contextlib import contextmanager\nfrom typing import Any, Generator\nfrom flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn jsonify({\"data\": str(exc)})\nclass _DemoSession(object):\ndef __init__(self, uid: int) -&gt; None:\nself._uid: int = uid\nself._status: bool = False\n@property\ndef uid(self) -&gt; int:\nif self._status:\nreturn self._uid\nelse:\nraise RuntimeError(\"Session is close\")\ndef create(self) -&gt; None:\nself._status = True\ndef close(self) -&gt; None:\nself._status = False\n@contextmanager\ndef context_depend(uid: int = field.Query.i(description=\"user id\", gt=10, lt=1000)) -&gt; Generator[int, Any, Any]:\nsession: _DemoSession = _DemoSession(uid)\ntry:\nprint(\"context_depend init\")\nsession.create()\nyield session.uid\nexcept Exception:\nprint(\"context_depend error\")\nfinally:\nprint(\"context_depend exit\")\nsession.close()\n@pait()\ndef demo(uid: int = field.Depends.i(context_depend), is_raise: bool = field.Query.i(default=False)) -&gt; dict:\nif is_raise:\nraise RuntimeError()\nreturn jsonify({\"code\": 0, \"msg\": uid})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/depend/starlette_with_context_manager_depend_demo.py<pre><code>from contextlib import asynccontextmanager\nfrom typing import Any, AsyncGenerator\nimport uvicorn  # type: ignore\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\nclass _DemoSession(object):\ndef __init__(self, uid: int) -&gt; None:\nself._uid: int = uid\nself._status: bool = False\n@property\ndef uid(self) -&gt; int:\nif self._status:\nreturn self._uid\nelse:\nraise RuntimeError(\"Session is close\")\ndef create(self) -&gt; None:\nself._status = True\ndef close(self) -&gt; None:\nself._status = False\n@asynccontextmanager\nasync def context_depend(uid: int = field.Query.i(description=\"user id\", gt=10, lt=1000)) -&gt; AsyncGenerator[int, Any]:\nsession: _DemoSession = _DemoSession(uid)\ntry:\nprint(\"context_depend init\")\nsession.create()\nyield session.uid\nexcept Exception:\nprint(\"context_depend error\")\nfinally:\nprint(\"context_depend exit\")\nsession.close()\n@pait()\nasync def demo(\nuid: int = field.Depends.i(context_depend), is_raise: bool = field.Query.i(default=False)\n) -&gt; JSONResponse:\nif is_raise:\nraise RuntimeError()\nreturn JSONResponse({\"code\": 0, \"msg\": uid})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/sanic_with_context_manager_depend_demo.py<pre><code>from contextlib import asynccontextmanager\nfrom typing import Any, AsyncGenerator\nimport uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn json({\"data\": str(exc)})\nclass _DemoSession(object):\ndef __init__(self, uid: int) -&gt; None:\nself._uid: int = uid\nself._status: bool = False\n@property\ndef uid(self) -&gt; int:\nif self._status:\nreturn self._uid\nelse:\nraise RuntimeError(\"Session is close\")\ndef create(self) -&gt; None:\nself._status = True\ndef close(self) -&gt; None:\nself._status = False\n@asynccontextmanager\nasync def context_depend(uid: int = field.Query.i(description=\"user id\", gt=10, lt=1000)) -&gt; AsyncGenerator[int, Any]:\nsession: _DemoSession = _DemoSession(uid)\ntry:\nprint(\"context_depend init\")\nsession.create()\nyield session.uid\nexcept Exception:\nprint(\"context_depend error\")\nfinally:\nprint(\"context_depend exit\")\nsession.close()\n@pait()\nasync def demo(\nuid: int = field.Depends.i(context_depend), is_raise: bool = field.Query.i(default=False)\n) -&gt; HTTPResponse:\nif is_raise:\nraise RuntimeError()\nreturn json({\"code\": 0, \"msg\": uid})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/tornado_with_context_manager_depend_demo.py<pre><code>from contextlib import asynccontextmanager\nfrom typing import Any, AsyncGenerator\nfrom pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _DemoSession(object):\ndef __init__(self, uid: int) -&gt; None:\nself._uid: int = uid\nself._status: bool = False\n@property\ndef uid(self) -&gt; int:\nif self._status:\nreturn self._uid\nelse:\nraise RuntimeError(\"Session is close\")\ndef create(self) -&gt; None:\nself._status = True\ndef close(self) -&gt; None:\nself._status = False\n@asynccontextmanager\nasync def context_depend(uid: int = field.Query.i(description=\"user id\", gt=10, lt=1000)) -&gt; AsyncGenerator[int, Any]:\nsession: _DemoSession = _DemoSession(uid)\ntry:\nprint(\"context_depend init\")\nsession.create()\nyield session.uid\nexcept Exception:\nprint(\"context_depend error\")\nfinally:\nprint(\"context_depend exit\")\nsession.close()\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nself.write({\"data\": str(exc)})\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def get(\nself, uid: int = field.Depends.i(context_depend), is_raise: bool = field.Query.i(default=False)\n) -&gt; None:\nif is_raise:\nraise RuntimeError()\nself.write({\"code\": 0, \"msg\": uid})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8be5\u4f8b\u5b50\u5047\u8bbe\u6bcf\u6b21\u8c03\u7528\u8bf7\u6c42\u65f6\u90fd\u4f1a\u57fa\u4e8e\u5bf9\u5e94\u7684uid\u521b\u5efa\u4e00\u4e2aSession\uff0c\u5e76\u5728\u8bf7\u6c42\u7ed3\u675f\u65f6\u81ea\u52a8\u5173\u95ed\uff0c \u5176\u4e2d\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u662f\u6a21\u62df\u4e00\u4e2a\u57fa\u4e8eUid\u7684Session\uff0c\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4ee3\u7801\u5219\u662f\u5e26\u6709<code>ContextManger</code>\u7684Depends\u51fd\u6570\uff0c\u5e76\u5206\u522b\u5728<code>try</code>, <code>except</code>\u4ee5\u53ca<code>finally</code>\u6253\u5370\u4e0d\u540c\u7684\u5185\u5bb9\uff0c \u800c\u7b2c\u4e09\u6bb5\u9ad8\u4eae\u4ee3\u7801\u5219\u662f\u8def\u7531\u51fd\u6570\uff0c\u5b83\u4f1a\u4f9d\u636e\u53c2\u6570<code>is_raise</code>\u662f\u5426\u4e3a<code>True</code>\u6765\u51b3\u5b9a\u629b\u9519\u8fd8\u662f\u6b63\u5e38\u8fd4\u56de\u3002</p> <p>\u73b0\u5728\u8fd0\u884c\u4ee3\u7801\u5e76\u4f7f\u7528<code>curl</code>\u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5\uff0c\u53d1\u73b0\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u662f\u901a\u8fc7\u7684\uff0c\u4f46\u662f\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\u53d1\u751f\u5f02\u5e38(\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32)\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?uid=999\"\n{\"code\":0,\"msg\":999}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?uid=999&amp;is_raise=True\"\n{\"data\":\"\"}\n</code></pre> \u8fd9\u65f6\u5207\u56de\u5230\u8fd0\u884cPython\u8fdb\u7a0b\u7684\u7ec8\u7aef\uff0c\u53ef\u4ee5\u53d1\u73b0\u7ec8\u7aef\u6253\u5370\u4e86\u7c7b\u4f3c\u5982\u4e0b\u6570\u636e: <pre><code>context_depend init\ncontext_depend exit\nINFO:     127.0.0.1:44162 - \"GET /api/demo?uid=999 HTTP/1.1\" 200 OK\ncontext_depend init\ncontext_depend error\ncontext_depend exit\nINFO:     127.0.0.1:44164 - \"GET /api/demo?uid=999&amp;is_raise=True HTTP/1.1\" 200 OK\n</code></pre> \u4ece\u8f93\u51fa\u7684\u6570\u636e\u53ef\u4ee5\u770b\u51fa\uff0c \u7b2c\u4e00\u4e2a\u8bf7\u6c42\u8bbf\u95ee\u670d\u52a1\u7aef\u65f6\uff0c\u670d\u52a1\u7aef\u8fdb\u7a0b\u53ea\u6253\u5370\u4e86<code>init</code>\u548c<code>exit</code>\uff0c\u800c\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u7684\u903b\u8f91\u4f1a\u6267\u884c\u5230\u5f02\u5e38\u5904\uff0c\u6240\u4ee5\u4f1a\u5728<code>init</code>\u548c<code>exit</code>\u4e2d\u95f4\u591a\u6253\u5370\u4e86\u4e00\u884c<code>error</code>\u3002</p>"},{"location":"1_4_depend/#3depend","title":"3.\u57fa\u4e8e\u7c7b\u7684Depend","text":"<p>\u524d\u6587\u6240\u8ff0\u7684\u90fd\u662f\u57fa\u4e8e\u51fd\u6570\u7684<code>Depend</code>\uff0c\u800c<code>Pait</code>\u8fd8\u63d0\u4f9b\u57fa\u4e8e\u7c7b\u7684\u7684\u5b9e\u73b0\u3002 \u57fa\u4e8e\u7c7b\u7684<code>Depend</code>\u7528\u6cd5\u4e0e\u57fa\u4e8e\u51fd\u6570\u7684<code>Depend</code>\u7c7b\u4f3c\uff0c\u4e0d\u8fc7<code>Pait</code>\u9664\u4e86\u89e3\u6790\u57fa\u4e8e\u7c7b\u7684<code>Depend</code>\u7684<code>__call__</code>\u65b9\u6cd5\u7684\u51fd\u6570\u7b7e\u540d\u5916\uff0c\u8fd8\u4f1a\u53bb\u89e3\u6790\u5b83\u7684\u5c5e\u6027\uff0c\u5982\u4e0b\u4ee3\u7801:</p> FlaskStarletteSanicTornado docs_source_code/introduction/depend/flask_with_class_depend_demo.py<pre><code>from flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\ndef api_exception(exc: Exception) -&gt; str:\nimport traceback\nprint(traceback.format_exc())\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn jsonify({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nclass GetUserDepend(object):\nuser_name: str = field.Query.i()\ndef __call__(self, token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nuser_name = fake_db_dict[token]\nif user_name != self.user_name:\nraise RuntimeError(\"The specified user could not be found through the token\")\nreturn user_name\n@pait()\ndef demo(token: str = field.Depends.i(GetUserDepend)) -&gt; dict:\nreturn {\"user\": token}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/depend/starlette_with_class_depend_demo.py<pre><code>import uvicorn  # type: ignore\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nclass GetUserDepend(object):\nuser_name: str = field.Query.i()\nasync def __call__(self, token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nuser_name = fake_db_dict[token]\nif user_name != self.user_name:\nraise RuntimeError(\"The specified user could not be found through the token\")\nreturn user_name\n@pait()\nasync def demo(token: str = field.Depends.i(GetUserDepend)) -&gt; JSONResponse:\nreturn JSONResponse({\"user\": token})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/sanic_with_class_depend_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn json({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nclass GetUserDepend(object):\nuser_name: str = field.Query.i()\nasync def __call__(self, token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nuser_name = fake_db_dict[token]\nif user_name != self.user_name:\nraise RuntimeError(\"The specified user could not be found through the token\")\nreturn user_name\n@pait()\nasync def demo(token: str = field.Depends.i(GetUserDepend)) -&gt; HTTPResponse:\nreturn json({\"user\": token})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/tornado_with_class_depend_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nself.write({\"data\": str(exc)})\nself.finish()\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nclass GetUserDepend(object):\nuser_name: str = field.Query.i()\nasync def __call__(self, token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nuser_name = fake_db_dict[token]\nif user_name != self.user_name:\nraise RuntimeError(\"The specified user could not be found through the token\")\nreturn user_name\nclass DemoHandler(_Handler):\n@pait()\nasync def get(self, token: str = field.Depends.i(GetUserDepend)) -&gt; None:\nself.write({\"user\": token})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u5176\u4e2d\u7684\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u662f\u57fa\u4e8e\u7c7b\u7684<code>Depend</code>\u5b9e\u73b0\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c \u7b2c\u4e00\u90e8\u5206\u662f\u7c7b\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u4e5f\u91c7\u7528<code>&lt;name&gt;: &lt;type&gt; = &lt;default&gt;</code>\u7684\u683c\u5f0f\u7f16\u5199\u7684\uff0c\u8fd9\u6837\u4e00\u6765\u6bcf\u5f53\u8bf7\u6c42\u547d\u4e2d\u8def\u7531\u65f6\uff0c<code>Pait</code>\u90fd\u4f1a\u4e3a\u8be5\u7c7b\u6ce8\u5165\u5bf9\u5e94\u7684\u503c\u3002 \u7b2c\u4e8c\u90e8\u5206\u662f\u6839\u636e<code>Depend\u7684\u4f7f\u7528</code>\u4e2d\u7684\u4f8b\u5b50\u8fdb\u884c\u6539\u5199\u7684\uff0c\u5b83\u9664\u4e86\u6821\u9a8cToken\u5916\uff0c\u8fd8\u4f1a\u6821\u9a8cToken\u5bf9\u5e94\u7684\u7528\u6237\u540d\u662f\u5426\u6b63\u786e(\u6b63\u5e38\u7684\u903b\u8f91\u57fa\u672c\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u8fd9\u91cc\u53ea\u505a\u529f\u80fd\u6f14\u793a)\u3002 \u8fd9\u91cc\u7684<code>__call__</code>\u65b9\u6cd5\u662f\u771f\u6b63\u88ab<code>pait</code>\u8c03\u7528\u65b9\u6cd5\uff0c\u6240\u4ee5\u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e\u57fa\u4e8e\u51fd\u6570\u7684<code>Depend</code>\u7c7b\u4f3c\u3002</p> <code>__call__</code>\u65b9\u6cd5\u4f7f\u7528\u9650\u5236\u8bf4\u660e <p><pre><code>from typing import Any\nclass DemoDepend(object):\ndef __call__(self, *args: Any, **kwargs: Any) -&gt; Any:\npass\n</code></pre> \u662f\u4e00\u4e2a\u76f4\u89c2\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4f46\u662f\u7531\u4e8e<code>Python</code>\u7684\u9650\u5236\uff0c\u5b83\u4e0d\u652f\u6301\u51fd\u6570\u7b7e\u540d\u91cd\u5199\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u91cd\u5199\u65b9\u6cd5\u51fd\u6570\u7684\u4f8b\u5b50: <pre><code>from typing import Any\nfrom pait import field\nclass DemoDepend(object):\ndef __init__(self) -&gt; Any:\ndef new_call(uid: str = field.Query.i(), user_name: str = field.Query.i()) -&gt; Any:\npass\nsetattr(self, \"__call__\", new_call)\ndef __call__(self, uid: str = field.Query.i()) -&gt; Any:\npass\n</code></pre> \u8fd9\u65f6\u5019\u89e3\u6790\u51fa\u6765\u7684<code>__call__</code>\u65b9\u6cd5\u4ecd\u7136\u662f<code>__call__(self, uid: str = field.Query.i()) -&gt; Any</code>\uff0c\u800c\u4e0d\u662f<code>__call__(uid: str = field.Query.i(), user_name: str = field.Query.i()) -&gt; Any</code>\u3002\u6b64\u65f6\u63a8\u8350\u4f7f\u7528<code>pait_handler</code>\u65b9\u6cd5\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b: <pre><code>from typing import Any\nfrom pait import field\nclass DemoDepend(object):\ndef __init__(self) -&gt; Any:\ndef new_call(uid: str = field.Query.i(), user_name: str = field.Query.i()) -&gt; Any:\npass\nsetattr(self, \"pait_handler\", new_call)\ndef pait_handler(self, uid: str = field.Query.i()) -&gt; Any:\npass\n</code></pre> \u8fd9\u6837<code>Pait</code>\u5c31\u80fd\u6b63\u5e38\u89e3\u6790\u51fa<code>pait_handler</code>\u7684\u51fd\u6570\u7b7e\u540d\u662f<code>pait_handler(uid: str = field.Query.i(), user_name: str = field.Query.i()) -&gt; Any</code></p> <p>\u800c\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4ee3\u7801\u4e2d\u5219\u628a<code>Depend</code>\u53c2\u6570\u4e2d\u7684\u57fa\u4e8e\u51fd\u6570\u7684<code>Depend</code>\u66ff\u6362\u4e3a\u57fa\u4e8e\u7c7b\u7684<code>Depend</code>\u3002</p> <p>\u8fd0\u884c\u4ee3\u7801\u5e76\u6267\u884c\u5982\u4e0b<code>curl</code>\u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u8f93\u51fa: <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" --header \"token:u12345\"\n{\"data\":\"Can not found user_name value\"}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?user_name=so1n\" --header \"token:u12345\"\n{\"user\":\"so1n\"}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?user_name=faker\" --header \"token:u12345\"\n{\"data\":\"The specified user could not be found through the token\"}\n</code></pre></p> \u57fa\u4e8e\u7c7b\u7684<code>Depend</code>\u7684\u521d\u59cb\u5316\u8bf4\u660e <p>\u7531\u4e8e\u53ea\u652f\u6301\u4f20\u9012\u57fa\u4e8e\u7c7b\u7684<code>Depend</code>\uff0c\u800c\u4e0d\u662f\u5bf9\u5e94\u7684\u5b9e\u4f8b\uff0c\u8fd9\u610f\u5473\u7740\u65e0\u6cd5\u8ddf\u5e73\u5e38\u4e00\u6837\u81ea\u5b9a\u4e49\u521d\u59cb\u5316\u53c2\u6570\uff0c\u8fd9\u65f6\u53ef\u4ee5\u91c7\u7528<code>pait.util.partial_wrapper</code>\uff0c\u5982\u4e0b\u4f8b\u5b50: <pre><code>from pait import field\nfrom pait.util import partial_wrapper\nclass GetUserDepend(object):\nuser_name: str = field.Query.i()\nage: int = field.Query.i()\ndef __init__(self, age_limit: int = 18) -&gt; None:\nself.age_limit: int = age_limit\ndef __call__(self, token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nuser_name = fake_db_dict[token]\nif user_name != self.user_name:\nraise RuntimeError(\"The specified user could not be found through the token\")\nif self.age &lt; self.age_limit:\nraise ValueError(\"Minors cannot access\")\nreturn user_name\n@pait()\ndef demo(user_name: str = field.Depends.i(partial_wrapper(GetUserDepend, age_limit=16))):\npass\n@pait()\ndef demo1(user_name: str = field.Depends.i(GetUserDepend)):\npass\n</code></pre> \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6bcf\u4e2a\u63a5\u53e3\u9488\u5bf9\u4f7f\u7528\u8005\u7684\u5e74\u9f84\u6709\u6240\u4e0d\u540c\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5c0f\u4e8e18\u5c81\u662f\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u800c<code>demo1</code>\u63a5\u53e3\u7684\u9650\u5236\u7684\u662f\u5c0f\u4e8e16\u5c81\u7684\u662f\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u4ed6\u4eec\u7684\u521d\u59cb\u5316\u53c2\u6570\u662f\u4e0d\u540c\u7684\u3002 \u800c<code>pait.util.partial_wrapper</code>\u7684\u4f5c\u7528\u4e0e\u5b98\u65b9\u7684<code>functools.partial</code>\u7c7b\u4f3c\uff0c\u5b83\u53ef\u4ee5\u628a\u53c2\u6570\u8ddf<code>GetUserDepend</code>\u7ed1\u5b9a\uff0c\u7136\u540e\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u628a\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u5b83\u652f\u6301PEP612\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u7f16\u5199\u4ee3\u7801\u7684\u65f6\u5019\u83b7\u5f97<code>Type Hint</code>\u7684\u529f\u80fd\uff0c\u65f6\u523b\u4fdd\u8bc1\u81ea\u5df1\u7684\u4ee3\u7801\u662f\u5065\u5168\u7684\u3002</p>"},{"location":"1_4_depend/#4pre-depend","title":"4.Pre-Depend","text":"<p>\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u53ea\u9700\u8981<code>Depends</code>\u51fd\u6570\u6267\u884c\u6821\u9a8c\u903b\u8f91\uff0c\u5982\u679c\u6821\u9a8c\u5931\u8d25\u5c31\u629b\u51fa\u9519\u8bef\uff0c\u6b63\u5e38\u5c31\u8fd4\u56de\u7a7a\u6570\u636e\uff0c\u8def\u7531\u51fd\u6570\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981<code>Depends</code>\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u53ef\u80fd\u4f1a\u8003\u8651\u7528\u53d8\u91cf\u540d<code>_</code>\u6765\u8fdb\u884c\u66ff\u4ee3\uff0c\u5982\u4e0b: <pre><code>@pait()\ndef demo(_: str = field.Depends.i(get_user_by_token)) -&gt; None:\npass\n</code></pre> \u4f46\u662fPython\u662f\u4e0d\u652f\u6301\u4e00\u4e2a\u51fd\u6570\u5185\u51fa\u73b0\u76f8\u540c\u540d\u5b57\u7684\u53d8\u91cf\uff0c \u8fd9\u610f\u5473\u7740\u6709\u591a\u4e2a\u7c7b\u4f3c\u7684\u53c2\u6570\u65f6\uff0c\u4e0d\u80fd\u628a\u4ed6\u4eec\u7684\u53d8\u91cf\u540d\u90fd\u6539\u4e3a<code>_</code>\u3002</p> <p>\u4e3a\u6b64\uff0c<code>Pait</code>\u901a\u8fc7\u53ef\u9009\u53c2\u6570<code>pre_depend_list</code>\u6765\u63d0\u4f9b\u4e86<code>Pre-Depends</code>\u529f\u80fd\uff0c\u4f7f\u7528\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u628a<code>Depend</code>\u51fd\u6570\u4ece\u53c2\u6570\u8fc1\u79fb\u5230<code>Pait</code>\u7684<code>pre_depend_list</code>\u53ef\u9009\u53c2\u6570\u5373\u53ef\uff0c <code>Depend</code>\u4ee3\u7801\u7684\u903b\u8f91\u548c\u529f\u80fd\u5747\u4e0d\u4f1a\u88ab\u53d7\u5230\u5f71\u54cd\uff0c\u8fd9\u6837\u4fee\u6539\u540e\u4ee3\u7801\u4f1a\u53d8\u4e3a\u5982\u4e0b\uff08\u9ad8\u4eae\u4ee3\u7801\u4e3a\u4fee\u6539\u90e8\u5206\uff09\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/depend/flask_with_pre_depend_demo.py<pre><code>from flask import Flask, jsonify\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.exceptions import TipException\ndef api_exception(exc: Exception) -&gt; str:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn jsonify({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\ndef get_user_by_token(token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait(pre_depend_list=[get_user_by_token])\ndef demo() -&gt; dict:\nreturn {\"msg\": \"success\"}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/depend/starlette_with_pre_depend_demo.py<pre><code>import uvicorn  # type: ignore\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.exceptions import TipException\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nasync def get_user_by_token(token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait(pre_depend_list=[get_user_by_token])\nasync def demo() -&gt; JSONResponse:\nreturn JSONResponse({\"msg\": \"success\"})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/sanic_with_pre_depend_demo.py<pre><code>import uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.exceptions import TipException\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn json({\"data\": str(exc)})\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nasync def get_user_by_token(token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\n@pait(pre_depend_list=[get_user_by_token])\nasync def demo() -&gt; HTTPResponse:\nreturn json({\"msg\": \"success\"})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/depend/tornado_with_pre_depend_demo.py<pre><code>from pait import field\nfrom pait.app.tornado import pait\nfrom pait.exceptions import TipException\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, TipException):\nexc = exc.exc\nself.write({\"data\": str(exc)})\nself.finish()\nfake_db_dict: dict = {\"u12345\": \"so1n\"}\nasync def get_user_by_token(token: str = field.Header.i()) -&gt; str:\nif token not in fake_db_dict:\nraise RuntimeError(f\"Can not found by token:{token}\")\nreturn fake_db_dict[token]\nclass DemoHandler(_Handler):\n@pait(pre_depend_list=[get_user_by_token])\nasync def get(self) -&gt; None:\nself.write({\"msg\": \"success\"})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd0\u884c\u4ee3\u7801\u5e76\u6267\u884c<code>curl</code>\u4ee3\u7801\u793a\u4f8b\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" --header \"token:u12345\"\n{\"msg\":\"success\"}\n\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\" --header \"token:u123456\"\n{\"data\":\"Can not found by token:u123456\"}\n</code></pre> \u53ef\u4ee5\u770b\u5230\u80fd\u591f\u6b63\u5e38\u6267\u884c\u6821\u9a8c\u903b\u8f91\u3002</p> <p>Note</p> <ul> <li>1.\u5f53\u4f7f\u7528<code>Pre-Depend</code>\u65f6\uff0c<code>Pait</code>\u4f1a\u5148\u6309\u987a\u5e8f\u6267\u884c<code>Pre-Depend</code>\u518d\u6267\u884c\u8def\u7531\u51fd\u6570\uff0c\u5982\u679c<code>Pre-Depend</code>\u6267\u884c\u51fa\u9519\u5219\u4f1a\u76f4\u63a5\u629b\u9519\u3002</li> <li>2.<code>Pre-Depend</code>\u7ed1\u5b9a\u662f<code>Pait</code>\u800c\u4e0d\u662f\u8def\u7531\u51fd\u6570\uff0c\u8fd9\u610f\u5473\u7740<code>Pre-Depend</code>\u53ef\u4ee5\u8ddf\u968f<code>Pait</code>\u4e00\u8d77\u590d\u7528\uff0c\u8be6\u89c1Pait\u7684\u590d\u7528\u3002</li> </ul>"},{"location":"1_4_depend/#5","title":"5.\u4e0d\u8981\u5171\u4eab\u6709\u9650\u7684\u8d44\u6e90","text":"<p><code>Depend</code>\u662f\u5171\u4eab\u76f8\u540c\u903b\u8f91\u7684\u6700\u4f73\u5b9e\u73b0\uff0c\u5728\u5176\u4ed6\u7684\u7c7b\u4f3c\u529f\u80fd\u4e2d\u53ef\u80fd\u4f1a\u4ecb\u7ecd\u5982\u4f55\u5171\u4eab\u6709\u9650\u7684\u8d44\u6e90\u3002 \u4f46\u662f\u8fd9\u79cd\u884c\u4e3a\u662f\u4e0d\u63a8\u8350\u7684\uff0c\u56e0\u4e3a\u6b64\u65f6\u5171\u4eab\u7684\u8d44\u6e90\u662f\u7ed9\u6574\u4e2a\u8def\u7531\u51fd\u6570\u4f7f\u7528\u7684\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u7cfb\u7edf\u7684\u5e76\u53d1\u6570\uff0c\u6216\u8005\u62d6\u57ae\u6574\u4e2a\u7cfb\u7edf\u3002</p> <p>Note</p> <p>\u6709\u9650\u7684\u8d44\u6e90\u7684\u79cd\u7c7b\u5f88\u591a\uff0c\u5e38\u89c1\u7684\u6709\u9650\u7684\u8d44\u6e90\u6709:\u7ebf\u7a0b\u6c60\uff0c<code>MySQL</code>\u8fde\u63a5\u6c60\uff0c<code>Redis</code>\u8fde\u63a5\u6c60\u7b49\u3002</p> <p>\u7531\u4e8e\u672c\u8282\u5185\u5bb9\u4e0e<code>pait</code>\u7684\u4f7f\u7528\u65b9\u6cd5\u65e0\u5173\uff0c\u6240\u4ee5\u53ea\u662f\u4ee5<code>Flask</code>\u6846\u67b6\u4e3a\u4f8b\u5b50\uff0c\u4e3e\u4f8b\u8bf4\u660e\u5171\u4eab\u6709\u9650\u8d44\u6e90\u7684\u5371\u5bb3\u6027\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u7684\u6709\u9650\u8d44\u6e90\u662f<code>Redis</code>\u7684\u8fde\u63a5\u3002</p> <p>Note</p> <ul> <li>1.\u6700\u4f73\u7684\u793a\u8303\u7528\u4f8b\u662f<code>Mysql</code>\u7684\u8fde\u63a5\u6c60\uff0c\u4f46\u662f\u4ee3\u7801\u91cf\u4f1a\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u8fd9\u91cc\u91c7\u7528<code>Redis</code>\u8fdb\u884c\u6f14\u793a\uff0c\u7b80\u8981\u8bf4\u660e\u5171\u4eab\u6709\u9650\u8d44\u6e90\u7684\u5371\u5bb3\u3002</li> <li>2.\u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u4e0d\u4f1a\u76f4\u63a5\u53bb\u83b7\u53d6<code>Redis</code>\u7684\u5355\u4e00\u8fde\u63a5\u7684\uff0c<code>Redis</code>\u4e5f\u6ca1\u6709\u66b4\u9732\u51fa\u7c7b\u4f3c\u7684\u63a5\u53e3\uff0c\u53ea\u662f<code>execute_command</code>\u65b9\u6cd5\u662f\u5148\u83b7\u53d6\u8fde\u63a5\uff0c\u518d\u6267\u884c\u547d\u4ee4\uff0c\u6700\u540e\u91ca\u653e\u8fde\u63a5\u7684\u903b\u8f91\u6ee1\u8db3\u4e86\u83b7\u53d6\u8fde\u63a5\u7684\u903b\u8f91\uff0c\u6240\u4ee5\u4ee5\u8be5\u65b9\u6cd5\u6765\u4e3e\u4f8b\u8bf4\u660e\u3002</li> </ul> <p><code>Redis</code>\u7684\u4e00\u4e2a\u8fde\u63a5\u53ea\u80fd\u505a\u4e00\u4ef6\u4e8b\uff0c\u4f46\u662f\u5f97\u76ca\u4e8e\u672c\u8eab\u51fa\u8272\u7684\u8bbe\u8ba1\uff0c\u5ba2\u6237\u7aef\u91c7\u7528\u8fde\u63a5\u6c60\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u5e76\u53d1\uff0c\u4f46\u662f\u5982\u679c\u8def\u7531\u51fd\u6570\u7684\u903b\u8f91\u6bd4\u8f83\u590d\u6742\uff0c\u6267\u884c\u7684\u65f6\u95f4\u6bd4\u8f83\u4e45\uff0c\u90a3\u4e48\u6574\u4e2a\u670d\u52a1\u7684\u5e76\u53d1\u6570\u5c31\u4f1a\u53d7\u9650\u4e8e\u8fde\u63a5\u6c60\u7684\u6570\u91cf\uff0c\u5982\u4e0b\u4ee3\u7801: <pre><code>import time\nfrom typing import Callable\nfrom flask import Flask, Response, jsonify\nfrom redis import Redis\nfrom pait.app.flask import pait\nfrom pait import field\nredis = Redis(max_connections=100)\ndef get_redis() -&gt; Callable:\nreturn redis.execute_command\n@pait()\ndef demo(my_redis_conn: Callable = field.Depends.i(get_redis)) -&gt; Response:\n# mock redis cli\nmy_redis_conn(\"info\")\n# mock io\ntime.sleep(5)\nreturn jsonify()\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.run(port=8000)\n</code></pre> \u793a\u4f8b\u4ee3\u7801\u4e2d\u6bcf\u4e2a\u8def\u7531\u51fd\u6570\u90fd\u4f1a\u6267\u884c\u90e8\u5206\u903b\u8f91\u5bfc\u81f4\u6267\u884c\u65f6\u957f\u9700\u89815\u79d2\u949f\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4f1a\u5360\u7528\u4e00\u4e2a<code>Redis</code>\u8fde\u63a55\u79d2\uff0c\u4f46\u540c\u65f6\u6709\u8d85\u8fc7100\u4e2a\u8bf7\u6c42\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u90e8\u5206\u8bf7\u6c42\u4f1a\u83b7\u53d6\u4e0d\u5230<code>Redis</code>\u8fde\u63a5\u800c\u963b\u585e\u5728<code>get_redis</code>\u903b\u8f91\u4e2d\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u5f53\u524d\u7cfb\u7edf\u7684\u74f6\u9888\u662f<code>Redis</code>\u8fde\u63a5\u6c60\u7684\u4e0a\u9650\uff0c\u4f46\u662f\u771f\u6b63\u4f7f\u7528\u5230<code>Redis</code>\u7684\u903b\u8f91\u53ea\u6709<code>my_redis_conn(\"info\")</code>\uff0c\u8fd9\u662f\u975e\u574f\u7684\u3002</p> <p>\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u628a\u5171\u4eab\u8d44\u6e90\u53d8\u4e3a\u5171\u4eab\u83b7\u53d6\u8d44\u6e90\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u4e00\u5f00\u59cb\u5171\u4eab\u7684\u662f<code>Redis</code>\u8fde\u63a5\u8fd9\u4e00\u4e2a\u8d44\u6e90\uff0c\u73b0\u5728\u6709\u4f18\u5316\u6210\u5171\u4eab\u83b7\u53d6<code>Redis</code>\u8fde\u63a5\u7684\u903b\u8f91\uff0c\u4e5f\u5c31\u662f\u4ece\u83b7\u53d6\u771f\u6b63\u7684<code>Redis</code>\u8fde\u63a5\u53d8\u4e3a\u83b7\u53d6<code>Redis</code>\u8fde\u63a5\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u771f\u6b63\u4f7f\u7528\u65f6\u624d\u53bb\u83b7\u53d6\u8fde\u63a5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p><pre><code>import time\nfrom typing import Callable\nfrom flask import Flask, Response, jsonify\nfrom redis import Redis\nfrom pait.app.flask import pait\nfrom pait import field\nredis = Redis(max_connections=100)\ndef get_redis() -&gt; Callable:\nreturn lambda :redis.execute_command\n@pait()\ndef demo(my_redis_conn: Callable = field.Depends.i(get_redis)) -&gt; Response:\n# mock redis cli\nmy_redis_conn()(\"info\")\n# mock io\ntime.sleep(5)\nreturn jsonify()\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.run(port=8000)\n</code></pre> \u8be5\u4ee3\u7801\u4e3b\u8981\u53d8\u52a8\u6709\u4e24\u4e2a\uff0c\u7b2c\u4e00\u4e2a\u662f\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u7684<code>get_redis</code>\u51fd\u6570\u4ece\u8fd4\u56de\u4e00\u4e2a<code>Redis</code>\u8fde\u63a5\u53d8\u4e3a\u8fd4\u56de\u4e00\u4e2a\u83b7\u53d6<code>Redis</code>\u8fde\u63a5\u7684\u65b9\u6cd5\uff0c \u7b2c\u4e8c\u4e2a\u53d8\u52a8\u662f\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4ee3\u7801\uff0c\u8fd9\u91cc\u4ece\u76f4\u63a5\u8c03\u7528<code>Redis</code>\u8fde\u63a5\u53d8\u4e3a\u5148\u83b7\u53d6<code>Redis</code>\u8fde\u63a5\u518d\u8fdb\u884c\u8c03\u7528\u3002 \u8fd9\u6837\u4e00\u6765\u53ea\u6709\u4f7f\u7528\u5230\u4e86<code>Redis</code>\u624d\u4f1a\u53bb\u83b7\u53d6\u5230<code>Redis</code>\u7684\u8fde\u63a5\uff0c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u903b\u8f91\u5f71\u54cd\uff0c\u7cfb\u7edf\u7684\u5e76\u53d1\u74f6\u9888\u4e5f\u5c31\u4e0d\u4f1a\u53d7\u5230<code>Redis</code>\u8fde\u63a5\u6c60\u5f71\u54cd\u4e86\u3002</p>"},{"location":"1_5_exception/","title":"\u5f02\u5e38\u63d0\u793a","text":"<p><code>Pait</code>\u5185\u90e8\u6709\u5f88\u591a\u53c2\u6570\u6821\u9a8c\u903b\u8f91\uff0c\u51fa\u73b0\u9519\u8bef\u7684\u60c5\u51b5\u4e5f\u6709\u5f88\u591a\u79cd\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7684\u6355\u83b7\u548c\u4e86\u89e3\u5f02\u5e38\uff0c<code>Pait</code>\u62e5\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u5f02\u5e38\u673a\u5236\u3002</p> <p>\u9996\u5148\uff0c<code>Pait</code>\u7684\u5f02\u5e38\u90fd\u662f\u7ee7\u627f\u4e8e<code>PaitBaseException</code>\uff0c\u5728\u53d1\u751f\u5f02\u5e38\u65f6\u53ef\u4ee5\u901a\u8fc7: <pre><code>isinstance(exc, PaitBaseException)\n</code></pre> \u6765\u5224\u65ad\u5f02\u5e38\u662f\u5426\u5c5e\u4e8e<code>Pait</code>\u7684\u5f02\u5e38\u3002</p> <p>\u6b64\u5916\uff0c \u7531\u4e8e<code>Pait</code>\u662f\u4f7f\u7528<code>Pydantic</code>\u8fdb\u884c\u6821\u9a8c\uff0c \u6240\u4ee5\u5728\u8fd0\u884c\u65f6\u4f1a\u56e0\u4e3a\u6821\u9a8c\u4e0d\u901a\u8fc7\u800c\u629b\u51fa<code>Pydantic</code>\u76f8\u5173\u5f02\u5e38\uff0c \u53ef\u4ee5\u901a\u8fc7Error Handling\u4e86\u89e3\u5982\u4f55\u4f7f\u7528<code>Pydantic</code>\u5f02\u5e38</p>"},{"location":"1_5_exception/#1pait","title":"1.Pait\u7684\u4e0d\u540c\u5f02\u5e38\u4ecb\u7ecd","text":""},{"location":"1_5_exception/#11tipexception","title":"1.1.TipException\u5f02\u5e38","text":"<p>\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u5019\uff0c<code>Pait</code>\u4f1a\u68c0\u67e5\u53c2\u6570\u662f\u5426\u5b58\u5728\uff0c\u53c2\u6570\u662f\u5426\u5408\u6cd5\uff0c\u4ee5\u53ca\u53c2\u6570\u662f\u5426\u901a\u8fc7<code>Pydantic</code>\u7684\u6821\u9a8c\uff0c \u4e0a\u8ff0\u6761\u4ef6\u4e2d\u5982\u679c\u6709\u4e00\u4e2a\u6821\u9a8c\u4e0d\u901a\u8fc7\u90fd\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4f46\u662f\u8be5\u5f02\u5e38\u7684\u5806\u6808\u53ea\u4f1a\u5728<code>Pait</code>\u91cc\u6d41\u8f6c\uff0c\u4ece\u800c\u8ba9\u4f7f\u7528<code>Pait</code>\u7684\u5f00\u53d1\u8005\u65e0\u6cd5\u4e86\u89e3\u5f02\u5e38\u662f\u54ea\u4e2a\u8def\u7531\u51fd\u6570\u629b\u51fa\u7684\uff0c\u8fd9\u6837\u6392\u67e5\u95ee\u9898\u662f\u5341\u5206\u56f0\u96be\u7684\u3002 \u6240\u4ee5<code>Pait</code>\u4f1a\u901a\u8fc7<code>TipException</code>\u5bf9\u5f02\u5e38\u8fdb\u884c\u4e00\u4e2a\u5305\u88c5\uff0c\u5728\u629b\u9519\u4fe1\u606f\u91cc\u544a\u8bc9\u7528\u6237\u8bf4\u54ea\u4e2a\u8def\u7531\u51fd\u6570\u629b\u9519\uff0c\u629b\u9519\u7684\u4f4d\u7f6e\u5728\u54ea\u91cc\uff0c \u5982\u679c\u7528\u6237\u4f7f\u7528<code>Pycharm</code>\u7b49IDE\u5de5\u5177\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u8def\u5f84\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u5730\u65b9\uff0c\u4e00\u4e2a\u5f02\u5e38\u793a\u4f8b\u5982\u4e0b\uff1a <pre><code>Traceback (most recent call last):\n  File \"/home/so1n/github/pait/.venv/lib/python3.7/site-packages/starlette/exceptions.py\", line 71, in __call__\n    await self.app(scope, receive, sender)\nFile \"/home/so1n/github/pait/.venv/lib/python3.7/site-packages/starlette/routing.py\", line 583, in __call__\n    await route.handle(scope, receive, send)\nFile \"/home/so1n/github/pait/.venv/lib/python3.7/site-packages/starlette/routing.py\", line 243, in handle\n    await self.app(scope, receive, send)\nFile \"/home/so1n/github/pait/.venv/lib/python3.7/site-packages/starlette/routing.py\", line 54, in app\n    response = await func(request)\nFile \"/home/so1n/github/pait/pait/core.py\", line 232, in dispatch\n    return await first_plugin(*args, **kwargs)\nFile \"/home/so1n/github/pait/pait/param_handle.py\", line 448, in __call__\n    async with self:\n  File \"/home/so1n/github/pait/pait/param_handle.py\", line 456, in __aenter__\n    raise e from gen_tip_exc(self.call_next, e)\nFile \"/home/so1n/github/pait/pait/param_handle.py\", line 453, in __aenter__\n    await self._gen_param()\nFile \"/home/so1n/github/pait/pait/param_handle.py\", line 439, in _gen_param\n    self.args, self.kwargs = await self.param_handle(func_sig, func_sig.param_list)\nFile \"/home/so1n/github/pait/pait/param_handle.py\", line 396, in param_handle\n    await asyncio.gather(*[_param_handle(parameter) for parameter in param_list])\nFile \"/home/so1n/github/pait/pait/param_handle.py\", line 393, in _param_handle\n    raise gen_tip_exc(_object, closer_e, parameter)\npait.exceptions.TipException: Can not found content__type value for &lt;function raise_tip_route at 0x7f512ccdebf8&gt;   Customer Traceback:\n    File \"/home/so1n/github/pait/example/param_verify/starlette_example.py\", line 88, in raise_tip_route.\n</code></pre> \u53ef\u4ee5\u770b\u5230\u5f02\u5e38\u662f\u901a\u8fc7<code>gen_tip_exc</code>\u629b\u51fa\u6765\u7684\uff0c\u800c\u629b\u51fa\u6765\u7684\u5f02\u5e38\u4fe1\u606f\u5219\u5305\u542b\u8def\u7531\u51fd\u6570\u6240\u5728\u4f4d\u7f6e\uff0c\u548c\u5f02\u5e38\u4fe1\u606f\uff0c\u6b64\u5916\uff0c\u53ef\u4ee5\u901a\u8fc7<code>TipException.exc</code>\u83b7\u53d6\u5230\u539f\u672c\u7684\u5f02\u5e38\u3002</p>"},{"location":"1_5_exception/#12","title":"1.2.\u53c2\u6570\u5f02\u5e38","text":"<p>\u76ee\u524d<code>Pait</code>\u67093\u79cd\u53c2\u6570\u5f02\u5e38\uff0c\u5982\u4e0b:</p> \u5f02\u5e38 \u51fa\u73b0\u4f4d\u7f6e \u8bf4\u660e NotFoundFieldException \u9884\u68c0\u67e5\u9636\u6bb5 \u8be5\u5f02\u5e38\u8868\u793a\u5339\u914d\u4e0d\u5230\u5bf9\u5e94\u7684<code>Field</code>\uff0c\u6b63\u5e38\u4f7f\u7528\u65f6\uff0c\u4e0d\u4f1a\u9047\u5230\u8be5\u5f02\u5e38\u3002 NotFoundValueException \u8def\u7531\u51fd\u6570\u547d\u4e2d\u9636\u6bb5 \u8be5\u5f02\u5e38\u8868\u793a\u65e0\u6cd5\u4ece\u8bf7\u6c42\u6570\u636e\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u503c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u5f02\u5e38 FieldValueTypeException \u9884\u68c0\u67e5\u9636\u6bb5 \u8be5\u5f02\u5e38\u8868\u793a<code>Pait</code>\u53d1\u73b0<code>Field</code>\u91cc\u7684<code>default</code>\uff0c<code>example</code>\u7b49\u586b\u5199\u7684\u503c\u4e0d\u5408\u6cd5\uff0c\u4f7f\u7528\u8005\u9700\u8981\u6839\u636e\u63d0\u793a\u8fdb\u884c\u6539\u6b63\u3002 <p>\u8fd9\u4e09\u79cd\u5f02\u5e38\u90fd\u662f\u7ee7\u627f\u4e8e<code>PaitBaseParamException</code>\uff0c\u5b83\u7684\u6e90\u7801\u5982\u4e0b\uff1a <pre><code>class PaitBaseParamException(PaitBaseException):\ndef __init__(self, param: str, msg: str):\nsuper().__init__(msg)\nself.param: str = param\nself.msg: str = msg\n</code></pre> \u4ece\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa<code>PaitBaseParamException</code>\u5728\u629b\u5f02\u5e38\u65f6\u53ea\u4f1a\u629b\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u4f46\u662f\u5728\u9700\u8981\u6839\u636e\u5f02\u5e38\u8fd4\u56de\u4e00\u4e9b\u6307\u5b9a\u54cd\u5e94\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7<code>param</code>\u77e5\u9053\u662f\u54ea\u4e2a\u53c2\u6570\u51fa\u9519\u3002</p>"},{"location":"1_5_exception/#2","title":"2.\u5982\u4f55\u4f7f\u7528\u5f02\u5e38","text":""},{"location":"1_5_exception/#21","title":"2.1.\u5f02\u5e38\u7684\u4f7f\u7528","text":"<p>\u5728CRUD\u4e1a\u52a1\u4e2d\uff0c\u8def\u7531\u51fd\u6570\u53d1\u751f\u7684\u5f02\u5e38\u90fd\u8981\u88ab\u6355\u83b7\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u534f\u5b9a\u597d\u7684\u9519\u8bef\u4fe1\u606f\u4f9b\u524d\u7aef\u4f7f\u7528\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u5f02\u5e38\u6355\u83b7\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/exception/flask_with_exception_demo.py<pre><code>from typing import List\nfrom flask import Flask, Response, jsonify\nfrom pait import exceptions, field\nfrom pait.app.flask import pait\nfrom pydantic import ValidationError\ndef api_exception(exc: Exception) -&gt; Response:\nif isinstance(exc, exceptions.TipException):\nexc = exc.exc\nif isinstance(exc, exceptions.PaitBaseParamException):\nreturn jsonify({\"code\": -1, \"msg\": f\"error param:{exc.param}, {exc.msg}\"})\nelif isinstance(exc, ValidationError):\nerror_param_list: List = []\nfor i in exc.errors():\nerror_param_list.extend(i[\"loc\"])\nreturn jsonify({\"code\": -1, \"msg\": f\"check error param: {error_param_list}\"})\nelif isinstance(exc, exceptions.PaitBaseException):\nreturn jsonify({\"code\": -1, \"msg\": str(exc)})\nreturn jsonify({\"code\": -1, \"msg\": str(exc)})\n@pait()\ndef demo(demo_value: int = field.Query.i()) -&gt; Response:\nreturn jsonify({\"code\": 0, \"msg\": \"\", \"data\": demo_value})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/exception/starlette_with_exception_demo.py<pre><code>from typing import List\nimport uvicorn  # type: ignore\nfrom pait import exceptions, field\nfrom pait.app.starlette import pait\nfrom pydantic import ValidationError\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, exceptions.TipException):\nexc = exc.exc\nif isinstance(exc, exceptions.PaitBaseParamException):\nreturn JSONResponse({\"code\": -1, \"msg\": f\"error param:{exc.param}, {exc.msg}\"})\nelif isinstance(exc, ValidationError):\nerror_param_list: List = []\nfor i in exc.errors():\nerror_param_list.extend(i[\"loc\"])\nreturn JSONResponse({\"code\": -1, \"msg\": f\"check error param: {error_param_list}\"})\nelif isinstance(exc, exceptions.PaitBaseException):\nreturn JSONResponse({\"code\": -1, \"msg\": str(exc)})\nreturn JSONResponse({\"code\": -1, \"msg\": str(exc)})\n@pait()\nasync def demo(demo_value: int = field.Query.i()) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": demo_value})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/exception/sanic_with_exception_demo.py<pre><code>from typing import List\nimport uvicorn  # type: ignore\nfrom pait import exceptions, field\nfrom pait.app.sanic import pait\nfrom pydantic import ValidationError\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, exceptions.TipException):\nexc = exc.exc\nif isinstance(exc, exceptions.PaitBaseParamException):\nreturn json({\"code\": -1, \"msg\": f\"error param:{exc.param}, {exc.msg}\"})\nelif isinstance(exc, ValidationError):\nerror_param_list: List = []\nfor i in exc.errors():\nerror_param_list.extend(i[\"loc\"])\nreturn json({\"code\": -1, \"msg\": f\"check error param: {error_param_list}\"})\nelif isinstance(exc, exceptions.PaitBaseException):\nreturn json({\"code\": -1, \"msg\": str(exc)})\nreturn json({\"code\": -1, \"msg\": str(exc)})\n@pait()\nasync def demo(demo_value: int = field.Query.i()) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": demo_value})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/exception/tornado_with_exception_demo.py<pre><code>from typing import List\nfrom pait import exceptions, field\nfrom pait.app.tornado import pait\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import ValidationError\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, exceptions.TipException):\nexc = exc.exc\nif isinstance(exc, exceptions.PaitBaseParamException):\nself.write({\"code\": -1, \"msg\": f\"error param:{exc.param}, {exc.msg}\"})\nelif isinstance(exc, ValidationError):\nerror_param_list: List = []\nfor i in exc.errors():\nerror_param_list.extend(i[\"loc\"])\nself.write({\"code\": -1, \"msg\": f\"check error param: {error_param_list}\"})\nelif isinstance(exc, exceptions.PaitBaseException):\nself.write({\"code\": -1, \"msg\": str(exc)})\nself.finish()\nclass DemoHandler(_Handler):\n@pait()\nasync def get(self, demo_value: int = field.Query.i()) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": demo_value})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4ee3\u7801\u4e2d<code>api_exception</code>\u51fd\u6570\u7684\u5f02\u5e38\u5904\u7406\u662f\u6309\u7167\u4e25\u683c\u7684\u987a\u5e8f\u6392\u5217\u7684\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5efa\u8bae\u4ee5\u8fd9\u79cd\u987a\u5e8f\u5904\u7406\u5f02\u5e38\u3002 <code>api_exception</code>\u51fd\u6570\u7684\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u662f\u63d0\u53d6<code>TipException</code>\u7684\u539f\u672c\u5f02\u5e38\uff0c\u540e\u9762\u7684\u6240\u6709\u5f02\u5e38\u5904\u7406\u90fd\u662f\u9488\u5bf9\u4e8e\u539f\u672c\u7684\u5f02\u5e38\uff0c\u6240\u4ee5\u4f18\u5148\u7ea7\u6700\u9ad8\u3002 \u800c\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u662f\u5904\u7406\u6240\u6709<code>Pait</code>\u7684\u53c2\u6570\u5f02\u5e38\uff0c\u8fd9\u91cc\u4f1a\u63d0\u53d6\u53c2\u6570\u4fe1\u606f\u548c\u9519\u8bef\u4fe1\u606f\uff0c\u544a\u77e5\u7528\u6237\u54ea\u4e2a\u53c2\u6570\u53d1\u751f\u9519\u8bef\uff0c\u63a5\u7740\u7b2c\u4e09\u6bb5\u9ad8\u4eae\u4ee3\u7801\u5904\u7406\u7684\u662f<code>Pydantic</code>\u7684\u6821\u9a8c\u5f02\u5e38\uff0c\u8fd9\u91cc\u4f1a\u89e3\u6790\u5f02\u5e38\uff0c\u5e76\u8fd4\u56de\u6821\u9a8c\u5931\u8d25\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u7b2c\u56db\u6bb5\u4ee3\u7801\u5904\u7406\u7684\u662f<code>Pait</code>\u7684\u6240\u6709\u5f02\u5e38\uff0c\u901a\u5e38\u5f88\u5c11\u51fa\u73b0\uff0c\u76f4\u63a5\u8fd4\u56de\u5f02\u5e38\u4fe1\u606f\uff0c\u6700\u540e\u662f\u5904\u7406\u5176\u4ed6\u60c5\u51b5\u7684\u5f02\u5e38\uff0c\u8fd9\u91cc\u53ef\u80fd\u662f\u4e1a\u52a1\u7cfb\u7edf\u5b9a\u4e49\u7684\u5f02\u5e38\u3002</p> <p>\u5728\u4ee3\u7801\u4e2d\u7684\u6700\u540e\u4e00\u6bb5\u9ad8\u4eae\u662f\u901a\u8fc7Web\u6846\u67b6\u7684\u5f02\u5e38\u673a\u5236\uff0c\u628a\u81ea\u5b9a\u4e49\u7684<code>api_exception</code>\u51fd\u6570\u6302\u8f7d\u5230\u6846\u67b6\u7684\u5f02\u5e38\u5904\u7406\u56de\u8c03\u4e2d\uff0c \u800c<code>api_exception</code>\u51fd\u6570\u91cc\u9762\u5305\u542b\u4e86\u4f7f\u7528<code>Pait</code>\u65f6\u9047\u5230\u7684\u51e0\u79cd\u5f02\u5e38\u7684\u5904\u7406\uff0c\u7136\u540e\u6309\u7167\u534f\u8bae\u8fd4\u56de\u6570\u636e\u7ed9\u8c03\u7528\u7aef\u3002</p> <p><code>Tornado</code>\u662f\u5728<code>RequestHandler</code>\u4e2d\u5b9e\u73b0\u7684\u3002</p> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u5e76\u901a\u8fc7<code>curl</code>\u8c03\u7528\u53ef\u4ee5\u53d1\u73b0\uff1a</p> <ul> <li>\u7f3a\u5c11\u53c2\u6570\u65f6\uff0c\u4f1a\u8fd4\u56de\u627e\u4e0d\u5230\u53c2\u6570\u7684\u9519\u8bef\u4fe1\u606f     <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\"\n{\"code\":-1,\"msg\":\"error param:demo_value, Can not found demo_value value\"}\n</code></pre></li> <li>\u53c2\u6570\u6821\u9a8c\u51fa\u9519\u65f6\uff0c\u4f1a\u8fd4\u56de\u6821\u9a8c\u51fa\u9519\u7684\u53c2\u6570\u540d     <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=a\"\n{\"code\":-1,\"msg\":\"check error param: ['demo_value']\"}\n</code></pre></li> <li>\u53c2\u6570\u6b63\u5e38\u65f6\u8fd4\u56de\u6b63\u5e38\u7684\u6570\u636e     <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=3\"\n{\"code\":0,\"msg\":\"\",\"data\":3}\n</code></pre></li> </ul> <p>\u4ea4\u4e92\u534f\u8bae\u8bf4\u660e</p> <p>\u8be5\u4ee3\u7801\u7684\u54cd\u5e94\u4f7f\u7528\u4e86\u5e38\u89c1\u7684\u540e\u7aef\u8fd4\u56deJson\u6570\u636e\u534f\u8bae: <pre><code>{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {}\n}\n</code></pre> \u5176\u4e2d<code>code</code>\u4e3a0\u65f6\u4ee3\u8868\u54cd\u5e94\u6b63\u5e38\uff0c\u4e0d\u4e3a0\u5219\u4e3a\u5f02\u5e38\u4e14<code>msg</code>\u5305\u62ec\u4e86\u4e00\u4e2a\u9519\u8bef\u4fe1\u606f\u4f9b\u524d\u7aef\u5c55\u793a\uff0c\u800c<code>data</code>\u662f\u6b63\u5e38\u54cd\u5e94\u65f6\u7684\u7ed3\u6784\u4f53\u3002</p>"},{"location":"1_5_exception/#22tip","title":"2.2.\u81ea\u5b9a\u4e49Tip\u5f02\u5e38","text":"<p>\u81ea\u5b9a\u4e49Tip\u5f02\u5e38\u662f\u9ed8\u8ba4\u542f\u7528\u7684\uff0c\u5982\u679c\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u89c9\u5f97\u9519\u8bef\u63d0\u793a\u5728\u89e3\u6790\u4f1a\u6d88\u8017\u6027\u80fd\u6216\u8005\u89c9\u5f97\u9519\u8bef\u63d0\u793a\u6ca1\u5565\u4f5c\u7528\uff0c\u60f3\u53d6\u6d88\u9519\u8bef\u63d0\u793a\u3002\u90a3\u4e48\u53ea\u9700\u8981\u628a<code>ParamHandler</code>\u7684<code>tip_exception_class</code>\u5c5e\u6027\u5b9a\u4e49\u4e3a<code>None</code>\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado docs_source_code/introduction/exception/flask_with_not_tip_exception_demo.py<pre><code>from typing import List\nfrom flask import Flask, Response, jsonify\nfrom pait import exceptions, field\nfrom pait.app.flask import pait\nfrom pait.param_handle import ParamHandler\nfrom pydantic import ValidationError\nclass NotTipParamHandler(ParamHandler):\ntip_exception_class = None\ndef api_exception(exc: Exception) -&gt; Response:\nif isinstance(exc, exceptions.PaitBaseParamException):\nreturn jsonify({\"code\": -1, \"msg\": f\"error param:{exc.param}, {exc.msg}\"})\nelif isinstance(exc, ValidationError):\nerror_param_list: List = []\nfor i in exc.errors():\nerror_param_list.extend(i[\"loc\"])\nreturn jsonify({\"code\": -1, \"msg\": f\"check error param: {error_param_list}\"})\nelif isinstance(exc, exceptions.PaitBaseException):\nreturn jsonify({\"code\": -1, \"msg\": str(exc)})\nreturn jsonify({\"code\": -1, \"msg\": str(exc)})\n@pait(param_handler_plugin=NotTipParamHandler)\ndef demo(demo_value: int = field.Query.i()) -&gt; Response:\nreturn jsonify({\"code\": 0, \"msg\": \"\", \"data\": demo_value})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", view_func=demo, methods=[\"GET\"])\napp.errorhandler(Exception)(api_exception)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/exception/starlette_with_not_tip_exception_demo.py<pre><code>from typing import List\nimport uvicorn  # type: ignore\nfrom pait import exceptions, field\nfrom pait.app.starlette import pait\nfrom pait.param_handle import AsyncParamHandler\nfrom pydantic import ValidationError\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass NotTipAsyncParamHandler(AsyncParamHandler):\ntip_exception_class = None\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\nif isinstance(exc, exceptions.PaitBaseParamException):\nreturn JSONResponse({\"code\": -1, \"msg\": f\"error param:{exc.param}, {exc.msg}\"})\nelif isinstance(exc, ValidationError):\nerror_param_list: List = []\nfor i in exc.errors():\nerror_param_list.extend(i[\"loc\"])\nreturn JSONResponse({\"code\": -1, \"msg\": f\"check error param: {error_param_list}\"})\nelif isinstance(exc, exceptions.PaitBaseException):\nreturn JSONResponse({\"code\": -1, \"msg\": str(exc)})\nreturn JSONResponse({\"code\": -1, \"msg\": str(exc)})\n@pait(param_handler_plugin=NotTipAsyncParamHandler)\nasync def demo(demo_value: int = field.Query.i()) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": demo_value})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/exception/sanic_with_not_tip_exception_demo.py<pre><code>from typing import List\nimport uvicorn  # type: ignore\nfrom pait import exceptions, field\nfrom pait.app.sanic import pait\nfrom pait.param_handle import AsyncParamHandler\nfrom pydantic import ValidationError\nfrom sanic import HTTPResponse, Request, Sanic, json\nclass NotTipAsyncParamHandler(AsyncParamHandler):\ntip_exception_class = None\nasync def api_exception(request: Request, exc: Exception) -&gt; HTTPResponse:\nif isinstance(exc, exceptions.PaitBaseParamException):\nreturn json({\"code\": -1, \"msg\": f\"error param:{exc.param}, {exc.msg}\"})\nelif isinstance(exc, ValidationError):\nerror_param_list: List = []\nfor i in exc.errors():\nerror_param_list.extend(i[\"loc\"])\nreturn json({\"code\": -1, \"msg\": f\"check error param: {error_param_list}\"})\nelif isinstance(exc, exceptions.PaitBaseException):\nreturn json({\"code\": -1, \"msg\": str(exc)})\nreturn json({\"code\": -1, \"msg\": str(exc)})\n@pait(param_handler_plugin=NotTipAsyncParamHandler)\nasync def demo(demo_value: int = field.Query.i()) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": demo_value})\napp = Sanic(\"demo\")\napp.add_route(demo, \"/api/demo\", methods={\"GET\"})\napp.exception(Exception)(api_exception)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/exception/tornado_with_not_tip_exception_demo.py<pre><code>from typing import List\nfrom pait import exceptions, field\nfrom pait.app.tornado import pait\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.param_handle import AsyncParamHandler\nfrom pydantic import ValidationError\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass NotTipAsyncParamHandler(AsyncParamHandler):\ntip_exception_class = None\nclass _Handler(RequestHandler):\ndef _handle_request_exception(self, exc: BaseException) -&gt; None:\nif isinstance(exc, exceptions.PaitBaseParamException):\nself.write({\"code\": -1, \"msg\": f\"error param:{exc.param}, {exc.msg}\"})\nelif isinstance(exc, ValidationError):\nerror_param_list: List = []\nfor i in exc.errors():\nerror_param_list.extend(i[\"loc\"])\nself.write({\"code\": -1, \"msg\": f\"check error param: {error_param_list}\"})\nelif isinstance(exc, exceptions.PaitBaseException):\nself.write({\"code\": -1, \"msg\": str(exc)})\nself.finish()\nclass DemoHandler(_Handler):\n@pait(param_handler_plugin=NotTipAsyncParamHandler)\nasync def get(self, demo_value: int = field.Query.i()) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": demo_value})\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u5176\u4e2d\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4e2d\u662f\u7ee7\u627f\u4e8e<code>ParamHandler</code>\uff08\u6216\u8005<code>AsyncParamHandler</code>\uff09\uff0c\u8fd9\u4e2a\u7c7b\u4e3b\u8981\u8d1f\u8d23<code>Pait</code>\u6267\u884c\u53c2\u6570\u6821\u9a8c\u4e0e\u6ce8\u5165\u7684\u529f\u80fd\uff0c\u5b83\u6709\u4e00\u4e2a<code>tip_exception_class</code>\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49<code>TipException</code>\u7684\u884c\u4e3a\uff0c\u5f53<code>tip_exception_class</code>\u4e3a\u7a7a\u4e14\u9047\u5230\u9519\u8bef\u65f6\u4e0d\u4f1a\u4ea7\u751f\u5f02\u5e38\u63d0\u793a\uff0c\u800c\u662f\u629b\u51fa\u9ed8\u8ba4\u7684\u5f02\u5e38\u3002 \u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u5219\u662f\u79fb\u9664\u4ece<code>TipException</code>\u63d0\u53d6\u539f\u672c\u79fb\u9664\u7684\u903b\u8f91\uff0c\u56e0\u4e3a\u73b0\u5728\u4e0d\u9700\u8981\u4e86\uff0c\u7b2c\u4e09\u6bb5\u9ad8\u4eae\u5219\u662f\u4f20\u5165\u81ea\u5b9a\u4e49\u7684<code>ParamHandler</code>\uff0c\u8fd9\u6837<code>Pait</code>\u5c31\u80fd\u77e5\u9053\u5f53\u524d\u7684\u8def\u7531\u51fd\u6570\u4e0d\u9700\u8981\u751f\u6210<code>TipException</code>\u3002</p> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u5e76\u901a\u8fc7<code>curl</code>\u8c03\u7528\u53ef\u4ee5\u53d1\u73b0\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\uff0c\u5982\u4e0b\uff1a</p> <ul> <li>\u7f3a\u5c11\u53c2\u6570\u65f6\uff0c\u4f1a\u8fd4\u56de\u627e\u4e0d\u5230\u53c2\u6570\u7684\u9519\u8bef\u4fe1\u606f     <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo\"\n{\"code\":-1,\"msg\":\"error param:demo_value, Can not found demo_value value\"}\n</code></pre></li> <li>\u53c2\u6570\u6821\u9a8c\u51fa\u9519\u65f6\uff0c\u4f1a\u8fd4\u56de\u6821\u9a8c\u51fa\u9519\u7684\u53c2\u6570\u540d     <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=a\"\n{\"code\":-1,\"msg\":\"check error param: ['demo_value']\"}\n</code></pre></li> <li>\u53c2\u6570\u6b63\u5e38\u65f6\u8fd4\u56de\u6b63\u5e38\u7684\u6570\u636e     <pre><code>\u279c  ~ curl \"http://127.0.0.1:8000/api/demo?demo_value=3\"\n{\"code\":0,\"msg\":\"\",\"data\":3}\n</code></pre></li> </ul> <p>Note</p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f<code>TipException</code>\u53bb\u4fee\u6539<code>TipException</code>\u7684\u884c\u4e3a\u6765\u81ea\u5b9a\u4e49Tip\u5f02\u5e38\u63d0\u793a\u3002</p>"},{"location":"2_how_to_use_pait/","title":"\u5982\u4f55\u4f7f\u7528Pait","text":"<p>\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u4e86\u901a\u8fc7\u4f7f\u7528<code>Pait</code>\u88c5\u9970\u5668\u4ee5\u53ca\u6539\u5199\u8def\u7531\u51fd\u6570\u7684\u51fd\u6570\u7b7e\u540d\u6765\u4f7f\u7528<code>Pait</code>\u7684\u53c2\u6570\u8f6c\u6362\u4e0e\u7c7b\u578b\u6821\u9a8c\u529f\u80fd\uff0c\u4e5f\u6709\u7b80\u5355\u7684\u4ecb\u7ecd\u901a\u8fc7<code>pre_depend_list</code>\u53c2\u6570\u6765\u4f7f\u7528<code>Pait</code>\u7684Pre-Depend\u529f\u80fd\uff0c \u4ed6\u4eec\u90fd\u662f\u7b80\u5355\u7684\u4f7f\u7528<code>Pait</code>\u88c5\u9970\u5668\u6765\u88c5\u9970\u51fd\u6570\uff0c\u5e76\u901a\u8fc7\u914d\u7f6e\u4e0d\u540c\u5c5e\u6027\u7684\u503c\u6765\u542f\u7528\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u6b64\u65f6\u7684<code>Pait</code>\u88c5\u9970\u5668\u66f4\u50cf\u662f\u4e00\u4e2a\u9488\u5bf9\u8def\u7531\u51fd\u6570\u7684\u914d\u7f6e\u529f\u80fd\uff0c\u4e0d\u8fc7\u5f88\u591a\u8def\u7531\u51fd\u6570\u672c\u8eab\u90fd\u6709\u4e00\u4e9b\u5171\u6027\u5bfc\u81f4\u5b83\u4eec\u5728\u4f7f\u7528<code>Pait</code>\u65f6\u586b\u5199\u7684\u53c2\u6570\u7684\u4e00\u6837\u7684\uff0c \u6bd4\u5982\u5728\u7f16\u5199\u51e0\u4e2a\u540c\u4e2a\u529f\u80fd\u7684\u8def\u7531\u51fd\u6570\u65f6\uff0c\u53ef\u80fd\u4f1a\u8fd9\u6837\u5199\uff1a <pre><code>from pait.app import pait\nfrom pait.model.status import PaitStatus\n@pait(status=PaitStatus.test)\ndef demo1() -&gt; None:\npass\n@pait(status=PaitStatus.test)\ndef demo2() -&gt; None:\npass\n@pait(status=PaitStatus.test)\ndef demo3() -&gt; None:\npass\n</code></pre> \u8fd9\u4efd\u793a\u4f8b\u4ee3\u7801\u5171\u67093\u4e2a\u8def\u7531\u51fd\u6570\uff0c\u5b83\u4eec\u90fd\u4f7f\u7528\u76f8\u540c\u7684<code>Pait</code>\u7684<code>status</code>\u53c2\u6570--<code>PaitStatus.test</code>\uff0c\u4ee3\u8868\u73b0\u5728\u7684\u8def\u7531\u51fd\u6570\u7684\u72b6\u6001\u90fd\u5904\u4e8e\u6d4b\u8bd5\u4e2d\u3002 \u5728\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u6d4b\u8bd5\u540e\uff0c\u8def\u7531\u51fd\u6570\u901a\u8fc7\u6d4b\u8bd5\u4e86\uff0c\u6b64\u65f6\u4ed6\u4eec\u7684\u72b6\u6001\u9700\u8981\u53d8\u4e3a<code>Relese</code>\uff0c\u4e8e\u662f\u5c31\u5f97\u624b\u52a8\u7684\u628a\u6bcf\u4e2a\u63a5\u53e3\u7684\u72b6\u6001\u90fd\u5207\u6362\u4e3a<code>PaitStatus.release</code>\u3002 \u5728\u8def\u7531\u51fd\u6570\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u624b\u52a8\u7684\u5207\u6362\u72b6\u6001\u662f\u975e\u5e38\u9ebb\u70e6\u7684\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u4e00\u4e2a\u643a\u5e26\u5df2\u7ecf\u5b9a\u4e49\u597d\u6570\u636e\u7684<code>Pait</code>\u6765\u7ed9\u8fd9\u4e9b\u8def\u7531\u51fd\u6570\u4f7f\u7528\uff0c\u4f7f\u8fd9\u4e9b\u8def\u7531\u51fd\u6570\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a<code>Pait</code>\uff0c\u4ece\u800c\u5171\u4eab\u540c\u4e00\u4efd\u914d\u7f6e\u529f\u80fd\u3002</p> <p>Note</p> <ul> <li>1.\u672c\u7ae0\u8282\u53ea\u63d0\u4f9b\u7684\u793a\u4f8b\u90fd\u662f\u57fa\u4e8e<code>Starlette</code>\u6846\u67b6\uff0c\u5176\u4ed6\u6846\u67b6\u5728\u4f7f\u7528\u7684\u65f6\u5019\u9664\u4e86\u5f15\u5165<code>Pait</code>\u7c7b\u7684<code>import</code>\u8bed\u53e5\u7a0d\u6709\u4e0d\u540c\u5916\uff0c\u5176\u4ed6\u7684\u4f7f\u7528\u65b9\u6cd5\u90fd\u662f\u4e00\u81f4\u7684\u3002</li> <li>2.\u672c\u7ae0\u8282\u7740\u91cd\u63cf\u5199\u7684\u662f<code>Pait</code>\u7c7b\u7684\u7528\u6cd5\uff0c\u81f3\u4e8e\u4e0d\u540c\u5c5e\u6027\u7684\u4f5c\u7528\u4f1a\u5728\u5176\u5bf9\u5e94\u7684\u529f\u80fd\u6587\u6863\u4e2d\u63cf\u5199\u3002</li> <li>3.<code>Pait</code>\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6258\u7ba1\u6570\u636e\u7684\u5bb9\u5668\uff0c\u53ea\u8981\u4ed6\u4eec\u7684\u5c5e\u6027\u4e00\u81f4\uff0c\u90a3\u4e48\u4ed6\u4eec\u8868\u8fbe\u7684\u529f\u80fd\u662f\u4e00\u81f4\u7684\uff0c\u5373\u4f7f\u4ed6\u4eec\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002</li> </ul>"},{"location":"2_how_to_use_pait/#1pait","title":"1.\u81ea\u5b9a\u4e49Pait","text":"<p>\u5728\u524d\u6587\u5173\u4e8e<code>Pait</code>\u7684\u4ecb\u7ecd\uff0c\u90fd\u662f\u901a\u8fc7\u5982\u4e0b\u8bed\u6cd5\u53bb\u5f15\u5165\u5e76\u4f7f\u7528\u7684: <pre><code>from pait.app.flask import pait\nfrom pait.app.sanic import pait\nfrom pait.app.starlette import pait\nfrom pait.app.tornado import pait\n</code></pre></p> <p>\u8fd9\u662f\u6700\u65b9\u4fbf\u7684\u5f15\u7528<code>Pait</code>\u7684\u65b9\u6cd5\uff0c\u4e0d\u8fc7\u5b83\u672c\u8eab\u662f\u9488\u5bf9\u6bcf\u4e2aWeb\u6846\u67b6\u5b9a\u5236<code>Pait</code>\u7c7b\u7684\u5355\u4f8b\uff08\u5728\u672c\u7ae0\u6682\u4e14\u79f0\u4e3a\u6807\u51c6<code>pait</code>\u88c5\u9970\u5668\uff09\uff0c\u5728\u81ea\u5b9a\u4e49<code>Pait</code>\u65f6\uff0c\u5efa\u8bae\u901a\u8fc7Web\u6846\u67b6\u5bf9\u5e94\u7684<code>Pait</code>\u7c7b\u5165\u624b\uff0c \u5e76\u57fa\u4e8e<code>Pait</code>\u7c7b\u91cd\u65b0\u5b9e\u4f8b\u5316\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684<code>Pait</code>\u5b9e\u4f8b\uff0c\u7136\u540e\u628a\u8def\u7531\u51fd\u6570\u7684<code>Pait</code>\u88c5\u9970\u5668\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684<code>Pait</code>\u5b9e\u4f8b\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\uff1a <pre><code>from pait.app.starlette import Pait\nfrom pait.model.status import PaitStatus\nfrom starlette.responses import Response\nglobal_pait: Pait = Pait(status=PaitStatus.test)\n@global_pait()\nasync def demo() -&gt; Response:\npass\n@global_pait()\nasync def demo1() -&gt; Response:\npass\n@global_pait()\nasync def demo2() -&gt; Response:\npass\n</code></pre> \u5176\u4e2d\u7684\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u662f\u57fa\u4e8e<code>Pait</code>\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\u540d\u4e3a<code>global_pait</code>\u7684<code>Pait</code>\u5b9e\u4f8b\uff0c\u5b83\u4e0e\u4e4b\u524d\u4f7f\u7528\u7684\u6807\u51c6<code>pait</code>\u88c5\u9970\u5668\u57fa\u672c\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u5b83\u7684<code>status</code>\u5c5e\u6027\u88ab\u6307\u5b9a\u4e3a<code>PaitStatus.test</code>\uff0c \u800c\u5176\u4ed6\u9ad8\u4eae\u4ee3\u7801\u628a<code>global_pait</code>\u90fd\u5e94\u7528\u5230\u6240\u6709\u7684\u8def\u7531\u51fd\u6570\u4e2d\uff0c\u6b64\u65f6<code>global_pait</code>\u7684\u6548\u679c\u4e0e\u5982\u4e0b\u4ee3\u7801\u7684\u6548\u679c\u662f\u4e00\u81f4\u7684\uff1a <pre><code>@pait(status=PaitStatus.test)\nasync def demo() -&gt; Response:\npass\n</code></pre> \u6240\u6709\u8def\u7531\u51fd\u6570\u7684<code>status</code>\u5c5e\u6027\u90fd\u4e3a<code>PaitStatus.test</code>\uff0c \u5982\u679c\u5728\u540e\u7eed\u7684\u4ee3\u7801\u8fed\u4ee3\u5bfc\u81f4\u8fd9\u51e0\u4e2a\u8def\u7531\u51fd\u6570\u7684<code>status</code>\u5c5e\u6027\u9700\u8981\u53d8\u52a8\u65f6\uff0c\u53ea\u9700\u8981\u76f4\u63a5\u4fee<code>global_pait</code>\u7684\u5c5e\u6027\u5219\u53ef\u4ee5\u8ba9\u6240\u6709\u63a5\u53e3\u7684<code>Pait</code>\u5c5e\u6027\u90fd\u5f97\u5230\u66f4\u6539\u3002</p>"},{"location":"2_how_to_use_pait/#2pait","title":"2.\u521b\u5efa\u5b50Pait","text":"<p><code>Pait</code>\u53ef\u4ee5\u901a\u8fc7<code>create_sub_pait</code>\u65b9\u6cd5\u521b\u5efa\u81ea\u5df1\u7684\u5b50<code>Pait</code>\uff0c\u6bcf\u4e2a\u5b50<code>Pait</code>\u7684\u5c5e\u6027\u90fd\u662f\u4ece\u7236<code>Pait</code>\u514b\u9686\u7684\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff1a <pre><code>from pait.app.starlette import Pait\nfrom pait.model.status import PaitStatus\nglobal_pait: Pait = Pait(status=PaitStatus.test)\nother_pait: Pait = global_pait.create_sub_pait()\n</code></pre> \u4ee3\u7801\u4e2d<code>other_pait</code>\u662f\u901a\u8fc7<code>global_pait</code>\u521b\u5efa\u7684\uff0c\u6240\u4ee5\u5b83\u7684<code>status</code>\u5c5e\u6027\u4e5f\u8ddf<code>global_pait</code>\u7684<code>status</code>\u5c5e\u6027\u4e00\u6837\u90fd\u662f<code>PaitStatus.test</code>\u3002</p> <p>\u5982\u679c\u5b50<code>Pait</code>\u7684\u90e8\u5206\u5c5e\u6027\u4e0d\u60f3\u514b\u9686\u4e8e\u7236<code>Pait</code>\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u5728\u521b\u5efa\u7684\u65f6\u5019\u901a\u8fc7\u6307\u5b9a\u5c5e\u6027\u7684\u503c\uff0c\u4f7f\u5b50<code>Pait</code>\u7684\u5c5e\u6027\u88ab\u6307\u5b9a\u7684\u503c\u8986\u76d6\uff0c\u5982\u4e0b\u4ee3\u7801: <pre><code>from pait.app.starlette import Pait\nglobal_pait: Pait = Pait(author=(\"so1n\",), group=\"global\")\nuser_pait: Pait = global_pait.create_sub_pait(group=\"user\")\n</code></pre> \u4ee3\u7801\u4e2d<code>global_pait</code>\u4e0e<code>user_pait</code>\u7684<code>author</code>\u5c5e\u6027\u90fd\u662f<code>(\"so1n\", )</code>\uff0c\u4f46\u662f\u7531\u4e8e\u5728\u521b\u5efa<code>user_pait</code>\u65f6\u6307\u5b9a\u4e86<code>group</code>\u7684\u503c\u4e3a<code>user</code>\uff0c\u6240\u4ee5<code>global_pait</code>\u7684<code>group</code>\u5c5e\u6027\u4e3a<code>global</code>\uff0c\u800c<code>user_pait</code>\u7684<code>group</code>\u5c5e\u6027\u4e3a<code>user</code>\u3002</p>"},{"location":"2_how_to_use_pait/#3pait","title":"3.\u4f7f\u7528Pait","text":"<p>\u5b50<code>Pait</code>\u521b\u5efa\u4e4b\u540e\u7684\u7528\u6cd5\u4e0e\u6807\u51c6<code>pait</code>\u88c5\u9970\u5668\u7684\u7528\u6cd5\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u5b83\u672c\u8eab\u5df2\u7ecf\u643a\u5e26\u4e86\u90e8\u5206\u5c5e\u6027\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5728\u88c5\u9970\u8def\u7531\u4e4b\u540e\uff0c\u4f1a\u4f7f\u8def\u7531\u51fd\u6570\u62e5\u6709\u4e86\u5bf9\u5e94\u7684\u914d\u7f6e\u529f\u80fd\u3002\u5982\u4e0b\u4ee3\u7801\uff1a <pre><code>from pait.app.starlette import Pait\nfrom starlette.responses import JSONResponse\nglobal_pait: Pait = Pait(author=(\"so1n\",), group=\"global\")\nuser_pait: Pait = global_pait.create_sub_pait(group=\"user\")\n@user_pait()  # group=\"user\"\nasync def user_login() -&gt; JSONResponse:\npass\n@user_pait()  # group=\"user\"\nasync def user_logout() -&gt; JSONResponse:\npass\n@global_pait()  # group=\"global\"\nasync def get_server_timestamp() -&gt; JSONResponse:\npass\n</code></pre> \u4ee3\u7801\u4e2d\u7684\u7528\u6237\u767b\u5f55\u8def\u7531\u51fd\u6570<code>user_login</code>\u4ee5\u53ca\u7528\u6237\u6ce8\u9500\u8def\u7531\u51fd\u6570<code>user_logout</code>\u90fd\u4f7f\u7528<code>user_pait</code>\uff0c \u6240\u4ee5\u4ed6\u4eec\u7684<code>group</code>\u7684\u503c\u90fd\u4e3a<code>user</code>\uff1b\u800c\u83b7\u53d6\u670d\u52a1\u5668\u65f6\u95f4\u6233\u7684\u8def\u7531\u51fd\u6570<code>get_server_timestamp</code>\u5219\u5355\u72ec\u4f7f\u7528\u7684\u662f<code>global_pait</code>\uff0c\u5b83\u7684<code>group</code>\u7684\u503c\u662f<code>global</code>\u3002</p> <p>\u5982\u679c\u60f3\u66f4\u6539<code>user_logout</code>\u8def\u7531\u51fd\u6570\u7684<code>Pait</code>\u5c5e\u6027\uff0c \u8fd8\u53ef\u4ee5\u5728<code>user_logout</code>\u7684<code>user_pait</code>\u88c5\u9970\u5668\u586b\u5199\u5bf9\u5e94\u7684\u53c2\u6570\u6765\u8fbe\u5230\u66f4\u6539\u7684\u76ee\u7684\uff0c \u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u9ad8\u4eae\u90e8\u5206\u4f1a\u628a\u8def\u7531\u51fd\u6570<code>user_logout</code>\u7684<code>group</code>\u5c5e\u6027\u53d8\u4e3a<code>user-logout</code>\u800c\u4e0d\u662f<code>user</code>: <pre><code>from pait.app.starlette import Pait\nfrom starlette.responses import JSONResponse\nglobal_pait: Pait = Pait(author=(\"so1n\",), group=\"global\")\nuser_pait: Pait = global_pait.create_sub_pait(group=\"user\")\n@user_pait()\nasync def user_login() -&gt; JSONResponse:\npass\n@user_pait(group=\"user-logout\")\nasync def user_logout() -&gt; JSONResponse:\npass\n@global_pait()\nasync def get_server_timestamp() -&gt; JSONResponse:\npass\n</code></pre></p> <p>\u9664\u4e86\u8986\u76d6\u539f\u6709\u7684\u503c\u5916\uff0c\u90e8\u5206\u5c5e\u6027\u8fd8\u652f\u6301\u8ffd\u52a0\u503c\uff0c\u5982\u4e0b\u4ee3\u7801\uff1a <pre><code>from pait.app.starlette import Pait\nfrom starlette.responses import JSONResponse\nglobal_pait: Pait = Pait(author=(\"so1n\",), group=\"global\")\nuser_pait: Pait = global_pait.create_sub_pait(group=\"user\")\n@user_pait()  # group=\"user\"\nasync def user_login() -&gt; JSONResponse:\npass\n@user_pait(append_author=(\"Other Author\",))  # group=\"user\"; author=(\"so1n\", \"Other Author\",)\nasync def user_logout() -&gt; JSONResponse:\npass\n@global_pait()  # group=\"global\"\nasync def get_server_timestamp() -&gt; JSONResponse:\npass\n</code></pre> \u5176\u4e2d\u9ad8\u4eae\u90e8\u5206\u4f7f\u7528\u5230\u4e86<code>Pait</code>\u7684<code>append_xxx</code>\u7cfb\u5217\u7684\u53c2\u6570\u6765\u8ffd\u52a0\u503c\uff0c\u4ece\u800c\u4f7f<code>user_logout</code>\u7684<code>author</code>\u503c\u53d8\u4e3a<code>(\"so1n\", \"Other Author\")</code></p> <p>Note</p> <p>\u8ffd\u52a0\u7684\u503c\u53ea\u4f1a\u6dfb\u52a0\u90fd\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u90e8\u5206\u529f\u80fd\u5982<code>Pre-Depend</code>\u9700\u8981\u8003\u8651\u5143\u7d20\u653e\u7f6e\u7684\u987a\u5e8f\uff0c\u4f7f\u7528\u65f6\u8bf7\u7559\u610f\u8ffd\u52a0\u7684\u987a\u5e8f\u662f\u5426\u5408\u9002\u3002</p>"},{"location":"3_1_openapi/","title":"OpenAPI","text":""},{"location":"3_1_openapi/#1","title":"1.\u4ecb\u7ecd","text":"<p><code>Pait</code>\u9664\u4e86\u5b9e\u73b0\u53c2\u6570\u7c7b\u578b\u8f6c\u6362\u4e0e\u6821\u9a8c\u529f\u80fd\u5916\uff0c\u8fd8\u652f\u6301\u81ea\u52a8\u751f\u6210\u8def\u7531\u51fd\u6570\u7684OpenAPI\u6570\u636e\uff0c\u4f7f\u7528\u8005\u53ea\u9700\u8981\u7f16\u5199\u8def\u7531\u51fd\u6570\u7684\u4ee3\u7801\uff0c\u5373\u53ef\u751f\u6210\u8def\u7531\u51fd\u6570\u7684\u5bf9\u5e94OpenAPI\u6587\u6863\uff0c\u5982\u6587\u6863\u9996\u9875\u7684\u793a\u4f8b\u4ee3\u7801:</p> FlaskStarletteSanicTornado docs_source_code/introduction/flask_demo.py<pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/starlette_demo.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/sanic_demo.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/tornado_demo.py<pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u5e76\u5728\u6d4f\u89c8\u5668\u8bbf\u95ee: http://127.0.0.1:8000/swagger \u5c31\u53ef\u4ee5\u770b\u5230SwaggerUI\u7684\u9875\u9762\uff1a </p> <p>\u5176\u4e2d\u9664\u4e86\u624b\u52a8\u586b\u5199\u7684\u54cd\u5e94\u5bf9\u8c61\u5916\uff0c\u5176\u4ed6\u7684\u6570\u636e\u90fd\u662f<code>Pait</code>\u81ea\u52a8\u8bc6\u522b\u5e76\u751f\u6210\u7684\uff0c\u4f46\u662f\u6709\u4e9b\u6570\u636e\u8fd8\u662f\u9700\u8981\u4f7f\u7528\u8005\u624b\u52a8\u6807\u6ce8\u3002</p>"},{"location":"3_1_openapi/#2openapi","title":"2.\u8def\u7531\u51fd\u6570\u7684OpenAPI\u5c5e\u6027","text":"<p>\u4e3a\u8def\u7531\u51fd\u6570\u7ed1\u5b9aOpenAPI\u5c5e\u6027\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728<code>Pait</code>\u88c5\u9970\u5668\u586b\u5199\u5bf9\u5e94\u7684\u5c5e\u6027\u5373\u53ef\uff0c\u5e38\u89c1\u7684\u8def\u7531\u51fd\u6570\u5c5e\u6027\u7ed1\u5b9a\u5982\u4e0b\u4ee3\u7801\uff1a <pre><code>from pait.app import pait\nfrom pait.model.tag import Tag\ndemo_tag = Tag(\"demo tag\", desc=\"demo tag desc\")\n@pait(\ndesc=\"demo func desc\",\nname=\"demo\",\nsummary=\"demo func summary\",\ntag=(demo_tag,)\n)\ndef demo() -&gt; None:\npass\n</code></pre> \u8be5\u4ee3\u7801\u901a\u8fc7<code>Pait</code>\u7684\u5c5e\u6027\u6765\u6307\u5b9a\u8def\u7531\u51fd\u6570\u7684OpenAPI\u4fe1\u606f\uff0c\u5b83\u4eec\u7684\u5177\u4f53\u4f5c\u7528\u5982\u4e0b\uff1a</p> \u5c5e\u6027 OpenAPI\u5c5e\u6027 \u63cf\u8ff0 desc description \u63a5\u53e3\u7684\u6587\u6863\u8be6\u7ec6\u63cf\u8ff0 name operation_id \u63a5\u53e3\u7684\u540d\u79f0 summary summary \u63a5\u53e3\u7684\u7b80\u4ecb tag tag \u63a5\u53e3\u7684OpenAPI\u6807\u7b7e <p>Note</p> <ul> <li>1.\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c<code>name</code>\u5c5e\u6027\u53ea\u662f<code>operation_id</code>\u5c5e\u6027\u7684\u4e00\u90e8\u5206\uff0c<code>Pait</code>\u5e76\u4e0d\u4fdd\u8bc1<code>name</code>\u4e0e<code>operation_id</code>\u5b8c\u5168\u76f8\u7b49\u3002</li> <li>2.Tag\u7684\u58f0\u660e\u5e94\u8be5\u4fdd\u8bc1\u5168\u5c40\u552f\u4e00</li> </ul> <p>\u4e0d\u8fc7<code>name</code>\u548c<code>desc</code>\u5c5e\u6027\u5206\u522b\u53ef\u4ee5\u901a\u8fc7\u8def\u7531\u51fd\u6570\u540d\u548c\u8def\u7531\u51fd\u6570\u7684<code>__doc__</code>\u8fdb\u884c\u7ed1\u5b9a\uff0c\u6bd4\u5982\u4e0b\u9762\u4ee3\u7801\u4e2d\u8def\u7531\u51fd\u6570\u7684<code>name</code>\u548c<code>desc</code>\u5c5e\u6027\u4e0e\u4e0a\u9762\u4ee3\u7801\u4e00\u81f4\u3002 <pre><code>from pait.app import pait\nfrom pait.model.tag import Tag\ndemo_tag = Tag(\"demo tag\", desc=\"demo tag desc\")\n@pait(\nsummary=\"demo func summary\",\ntag=(demo_tag,)\n)\ndef demo() -&gt; None:\n\"\"\"demo func desc\"\"\"\npass\n</code></pre></p> <p>\u9664\u4e86\u4e0a\u9762\u51e0\u4e2a\u5c5e\u6027\u5916\uff0cOpenAPI\u63cf\u8ff0\u7684\u63a5\u53e3\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a<code>deprecated</code>\u7684\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u4e3b\u8981\u662f\u7528\u6765\u6807\u6ce8\u63a5\u53e3\u662f\u5426\u5df2\u7ecf\u88ab\u9057\u5f03\u3002 <code>Pait</code>\u6ca1\u6709\u76f4\u63a5\u652f\u6301<code>deprecated</code>\u5c5e\u6027\u7684\u6807\u6ce8\uff0c\u800c\u662f\u91c7\u7528<code>PaitStatus</code>\u6765\u5224\u65ad\u8def\u7531\u51fd\u6570\u7684<code>deprecated</code>\u662f\u5426\u4e3a<code>True</code>\uff0c <code>PaitStatus</code>\u7684\u4f7f\u7528\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\u4ee3\u7801\uff1a <pre><code>from pait.app import pait\nfrom pait.model.status import PaitStatus\n@pait(status=PaitStatus.test)\ndef demo() -&gt; None:\npass\n</code></pre> \u8be5\u4ee3\u7801\u63cf\u8ff0\u8def\u7531\u51fd\u6570\u4e3a\u6d4b\u8bd5\u4e2d\uff0c<code>deprecated</code>\u4e3a<code>False</code>\uff0c\u66f4\u591a\u7684\u63a5\u53e3\u72b6\u6001\u4ee5\u53ca\u662f\u5426<code>deprecated</code>\u89c1\u4e0b\u8868:</p> \u72b6\u6001\u503c \u9636\u6bb5 deprecated \u63cf\u8ff0 undefined \u9ed8\u8ba4 <code>False</code> \u672a\u5b9a\u4e49\uff0c\u9ed8\u8ba4\u7684\u72b6\u6001 design \u5f00\u53d1\u4e2d <code>False</code> \u8bbe\u8ba1\u4e2d dev \u5f00\u53d1\u4e2d <code>False</code> \u5f00\u53d1\u6d4b\u8bd5\u4e2d integration \u5f00\u53d1\u5b8c\u6210 <code>False</code> \u8054\u8c03 complete \u5f00\u53d1\u5b8c\u6210 <code>False</code> \u5f00\u53d1\u5b8c\u6210 test \u5f00\u53d1\u5b8c\u6210 <code>False</code> \u6d4b\u8bd5\u4e2d release \u4e0a\u7ebf <code>False</code> \u4e0a\u7ebf abnormal \u4e0b\u7ebf <code>True</code> \u51fa\u73b0\u5f02\u5e38\uff0c\u4e34\u65f6\u4e0b\u7ebf maintenance \u4e0b\u7ebf <code>True</code> \u7ef4\u62a4\u4e2d archive \u4e0b\u7ebf <code>True</code> \u5f52\u6863 abandoned \u4e0b\u7ebf <code>True</code> \u88ab\u9057\u5f03\u7684\uff0c\u540e\u7eed\u4e0d\u4f1a\u518d\u4f7f\u7528"},{"location":"3_1_openapi/#3","title":"3.\u8def\u7531\u51fd\u6570\u7684\u54cd\u5e94\u5bf9\u8c61","text":"<p>\u5728\u524d\u6587\u7684\u4ecb\u7ecd\u4e2d\uff0c\u901a\u8fc7<code>response_model_list</code>\u5b9a\u4e49\u4e86\u8def\u7531\u51fd\u6570\u7684\u54cd\u5e94\u5bf9\u8c61\u7684\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u6216\u591a\u4e2a\u54cd\u5e94\u5bf9\u8c61\u3002</p> <p>Note</p> <p>\u5efa\u8bae\u53ea\u586b\u5199\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5982\u679c\u6709\u591a\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5927\u591a\u6570\u975eOpenAPI\u529f\u80fd\uff08\u5982\u63d2\u4ef6\uff09\u4f1a\u9ed8\u8ba4\u8bfb\u53d6\u7b2c\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\u3002</p> <p><code>Pait</code>\u63d0\u4f9b\u591a\u79cd\u54cd\u5e94\u5bf9\u8c61\uff0c\u5982\u4e0b\u5217\u8868\uff1a</p> \u54cd\u5e94\u5bf9\u8c61\u540d\u79f0 \u63cf\u8ff0 JsonResponseModel \u54cd\u5e94\u683c\u5f0f\u4e3aJson\u7684\u5bf9\u8c61 XmlResponseModel \u54cd\u5e94\u683c\u5f0f\u4e3aXml\u7684\u5bf9\u8c61 TextResponseModel \u54cd\u5e94\u683c\u5f0f\u4e3a\u6587\u672c\u7684\u5bf9\u8c61 HtmlResponseModel \u54cd\u5e94\u683c\u5f0f\u4e3aHtml\u7684\u5bf9\u8c61 FileResponseModel \u54cd\u5e94\u683c\u5f0f\u4e3aFile\u7684\u5bf9\u8c61 <p>\u8fd9\u4e9b\u54cd\u5e94\u5bf9\u8c61\u63d0\u4f9b\u4e86\u67d0\u79cd\u54cd\u5e94\u683c\u5f0f\u7684\u54cd\u5e94\u5bf9\u8c61\u5c01\u88c5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u4f1a\u9009\u7528\u8fd9\u4e9b\u54cd\u5e94\u5bf9\u8c61\uff0c\u5982\u679c\u6ca1\u6709\u9002\u7528\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7<code>pait.model.response.BaseResponseModel</code>\u5b9a\u4e49\u4e00\u4e2a\u7b26\u5408\u9700\u6c42\u7684\u54cd\u5e94\u5bf9\u8c61\u3002 <code>pait.model.response.BaseResponseModel</code>\u662f\u4e00\u4e2a\u57fa\u7840\u7684\u54cd\u5e94\u5bf9\u8c61\u7c7b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5305\u542bOpenAPI\u54cd\u5e94\u5bf9\u8c61\u63cf\u8ff0\u7684\u5bb9\u5668\uff0c\u901a\u8fc7\u7ed9<code>BaseResponseModel</code>\u4e0d\u540c\u7684\u5c5e\u6027\u8d4b\u503c\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u4e2a\u7b26\u5408OpenAPI\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5c5e\u6027\u5982\u4e0b\u8868:</p> \u5c5e\u6027\u540d \u63cf\u8ff0 response_data \u5b9a\u4e49\u54cd\u5e94\u6570\u636e\u7684\u683c\u5f0f\uff0c\u5982\u679c\u662f\u5e26\u6709\u7ed3\u6784\u7684\u54cd\u5e94\u6570\u636e\uff0c\u90a3\u4e48\u586b\u5165\u7684\u5e94\u8be5\u662f<code>pydantic.BaseModel</code> media_type \u54cd\u5e94\u5bf9\u8c61\u7684<code>Media Type</code> name \u54cd\u5e94\u5bf9\u8c61\u7684\u540d\u79f0 description \u54cd\u5e94\u5bf9\u8c61\u7684\u63cf\u8ff0 header \u54cd\u5e94\u5bf9\u8c61\u7684Header,\u586b\u5165\u7684\u503c\u5e94\u8be5\u662f<code>pydantic.BaseModel</code> status_code \u54cd\u5e94\u5bf9\u8c61\u7684Http\u72b6\u6001\u7801\uff0c\u9ed8\u8ba4\u4e3a<code>(200, )</code> openapi_schema \u54cd\u5e94\u5bf9\u8c61\u7684openapi.schema <p>\u901a\u8fc7\u8fd9\u4e9b\u5c5e\u6027\u53ef\u4ee5\u5b9a\u4e49\u5927\u591a\u6570\u54cd\u5e94\u5bf9\u8c61\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b:</p> FlaskStarletteSanicTornado docs_source_code/openapi/how_to_use_openapi/flask_demo.py<pre><code>from typing import List\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Query\nfrom pait.model.response import BaseResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass MyJsonResponseModel(BaseResponseModel):\nclass ResponseModel(BaseModel):\nclass UserModel(BaseModel):\nname: str = Field(..., example=\"so1n\")\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000)\nage: int = Field(..., gt=0)\ncode: int = Field(..., ge=0)\nmsg: str = Field(...)\ndata: List[UserModel]\nclass HeaderModel(BaseModel):\nx_token: str = Field(..., alias=\"X-Token\")\ncontent_type: str = Field(..., alias=\"Content-Type\")\nresponse_data = ResponseModel\ndescription = \"demo json response\"\nmedia_type = \"application/json; charset=utf-8\"\nheader = HeaderModel\nstatus_code = (200, 201, 404)\n@pait(response_model_list=[MyJsonResponseModel])\ndef demo(\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nage: int = Query.t(description=\"age\", gt=0),\nusername: str = Query.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nresp = jsonify({\"code\": 0, \"msg\": \"\", \"data\": [{\"name\": username, \"uid\": uid, \"age\": age}]})\nresp.headers.add(\"X-Token\", \"12345\")\nresp.headers[\"Content-Type\"] = \"application/json; charset=utf-8\"\nreturn resp\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", \"demo\", demo, methods=[\"GET\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/starlette_demo.py<pre><code>from typing import List\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Query\nfrom pait.model.response import BaseResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass MyJsonResponseModel(BaseResponseModel):\nclass ResponseModel(BaseModel):\nclass UserModel(BaseModel):\nname: str = Field(..., example=\"so1n\")\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000)\nage: int = Field(..., gt=0)\ncode: int = Field(..., ge=0)\nmsg: str = Field(...)\ndata: List[UserModel]\nclass HeaderModel(BaseModel):\nx_token: str = Field(..., alias=\"X-Token\")\ncontent_type: str = Field(..., alias=\"Content-Type\")\nresponse_data = ResponseModel\ndescription = \"demo json response\"\nmedia_type = \"application/json; charset=utf-8\"\nheader = HeaderModel\nstatus_code = (200, 201, 404)\n@pait(response_model_list=[MyJsonResponseModel])\nasync def demo(\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nage: int = Query.t(description=\"age\", gt=0),\nusername: str = Query.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nresp = JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": [{\"name\": username, \"uid\": uid, \"age\": age}]})\nresp.headers.append(\"X-Token\", \"12345\")\nresp.headers[\"Content-Type\"] = \"application/json; charset=utf-8\"\nreturn resp\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/sanic_demo.py<pre><code>from typing import List\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Query\nfrom pait.model.response import BaseResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass MyJsonResponseModel(BaseResponseModel):\nclass ResponseModel(BaseModel):\nclass UserModel(BaseModel):\nname: str = Field(..., example=\"so1n\")\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000)\nage: int = Field(..., gt=0)\ncode: int = Field(..., ge=0)\nmsg: str = Field(...)\ndata: List[UserModel]\nclass HeaderModel(BaseModel):\nx_token: str = Field(..., alias=\"X-Token\")\ncontent_type: str = Field(..., alias=\"Content-Type\")\nresponse_data = ResponseModel\ndescription = \"demo json response\"\nmedia_type = \"application/json; charset=utf-8\"\nheader = HeaderModel\nstatus_code = (200, 201, 404)\n@pait(response_model_list=[MyJsonResponseModel])\nasync def demo(\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nage: int = Query.t(description=\"age\", gt=0),\nusername: str = Query.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nresp = json({\"code\": 0, \"msg\": \"\", \"data\": [{\"name\": username, \"uid\": uid, \"age\": age}]})\nresp.headers.add(\"X-Token\", \"12345\")\nresp.headers[\"Content-Type\"] = \"application/json; charset=utf-8\"\nreturn resp\napp = Sanic(name=\"demo\")\napp.add_route(demo, \"/api/demo\", methods=[\"GET\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/tornado_demo.py<pre><code>from typing import List\nfrom pait.app.tornado import pait\nfrom pait.field import Query\nfrom pait.model.response import BaseResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass MyJsonResponseModel(BaseResponseModel):\nclass ResponseModel(BaseModel):\nclass UserModel(BaseModel):\nname: str = Field(..., example=\"so1n\")\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000)\nage: int = Field(..., gt=0)\ncode: int = Field(..., ge=0)\nmsg: str = Field(...)\ndata: List[UserModel]\nclass HeaderModel(BaseModel):\nx_token: str = Field(..., alias=\"X-Token\")\ncontent_type: str = Field(..., alias=\"Content-Type\")\nresponse_data = ResponseModel\ndescription = \"demo json response\"\nmedia_type = \"application/json; charset=utf-8\"\nheader = HeaderModel\nstatus_code = (200, 201, 404)\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[MyJsonResponseModel])\ndef get(\nself,\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nage: int = Query.t(description=\"age\", gt=0),\nusername: str = Query.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": [{\"name\": username, \"uid\": uid, \"age\": age}]})\nself.add_header(\"X-Token\", \"12345\")\nself.set_header(\"Content-Type\", \"application/json; charset=utf-8\")\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8be5\u4ee3\u7801\u7684\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u662f\u5b9a\u4e49\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5b83\u8868\u793a\u7684Http\u72b6\u6001\u7801\u53ef\u80fd\u4e3a200,201,404\uff0c <code>Media Type</code>\u662f<code>application/json</code>\uff0c Header\u62e5\u6709<code>X-Token</code>\u548c<code>Content-Type</code>\u4e24\u4e2a\u5c5e\u6027\uff0c \u800c\u6700\u91cd\u8981\u7684\u662f\u5b9a\u4e49\u4e86\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u4e3a: <pre><code>{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": [\n{\n\"name\": \"so1n\",\n\"sex\": \"man\",\n\"age\": 18\n}\n]\n}\n</code></pre> \u800c\u7b2c\u4e8c\u6bb5\u4ee3\u7801\u5219\u662f\u628a\u54cd\u5e94\u5bf9\u8c61\u4e0e\u8def\u7531\u51fd\u6570\u8fdb\u884c\u7ed1\u5b9a\uff0c \u73b0\u5728\u8fd0\u884c\u4ee3\u7801\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u8bbf\u95ee127.0.0.1:8000/redoc\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u9875\u9762\u5b8c\u6574\u7684\u5c55\u793a\u51fa\u8def\u7531\u51fd\u6570\u7684OpenAPI\u6570\u636e\uff0c\u5982\u4e0b\u56fe </p> <p>Note</p> <p>\u7531\u4e8e<code>Redoc</code>\u5c55\u793a\u7684\u6570\u636e\u6bd4<code>Swagger</code>\u7b80\u7ea6\u4e86\u8bb8\u591a\uff0c\u672c\u7528\u4f8b\u91c7\u7528<code>Redoc</code>\u5c55\u793a\u6570\u636e\uff0c\u5b9e\u9645\u4e0a<code>Pait</code>\u652f\u6301\u591a\u79cdOpenAPI\u7684UI\u9875\u9762\uff0c\u8be6\u89c1OpenAPI\u8def\u7531\u3002</p>"},{"location":"3_1_openapi/#4field","title":"4.Field","text":"<p>\u4e0a\u4e00\u8282\u7684\u56fe\u4e2d\u4e0d\u4ec5\u5305\u542b\u4e86\u58f0\u660e\u7684\u54cd\u5e94\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u8fd8\u5305\u62ec\u8bf7\u6c42\u53c2\u6570\u7684\u6570\u636e\uff0c\u5982<code>uid</code>\u53c2\u6570\u88ab\u58f0\u660e\u4e3a<code>required</code>\uff0c\u4e5f\u5c31\u662f\u8be5\u53c2\u6570\u662f\u5fc5\u586b\u7684\uff0c\u540c\u65f6\u4e5f\u58f0\u660e\u4e86\u5b83\u7684\u7c7b\u578b\u662f<code>integer</code>\uff0c\u53d6\u503c\u8303\u56f4\u662f10-1000\u3002 \u800c\u8fd9\u4e00\u5207\u90fd\u662f\u901a\u8fc7\u8bf7\u6c42\u53c2\u6570\u5bf9\u5e94\u7684<code>Field</code>\u5bf9\u8c61\u7684\u5c5e\u6027\u58f0\u660e\u7684\uff0c<code>Field</code>\u9664\u4e86\u8fd9\u4e9b\u53c2\u4e0e\u6821\u9a8c\u53c8\u53c2\u4e0eOpenAPI\u5c5e\u6027\u751f\u6210\u7684\u5c5e\u6027\u5916\u8fd8\u6709\u4e00\u4e9b\u5c5e\u6027\u662f\u4e13\u95e8\u4e3a<code>OpenAPI</code>\u670d\u52a1\u7684\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5305\u62ec\uff1a</p> \u5c5e\u6027 \u4f5c\u7528 links OpenAPI like\u529f\u80fd\uff0c\u7528\u4e8e\u6307\u5b9a\u53c2\u6570\u4e0e\u67d0\u4e2a\u54cd\u5e94\u5bf9\u8c61\u6709\u5173\u8054 media_type \u5b9a\u4e49\u53c2\u6570\u7684<code>Media Type</code>\uff0c\u76ee\u524d\u53ea\u6709<code>Body</code>, <code>Json</code>, <code>File</code>, <code>Form</code>, <code>MultiForm</code>\u6709\u4f7f\u7528\uff0c\u5efa\u8bae\u4e00\u4e2a\u63a5\u53e3\u53ea\u91c7\u7528\u540c\u4e00\u79cd<code>Media Type</code> openapi_serialization \u5b9a\u4e49\u53c2\u6570\u7684<code>serialization</code>\uff0c\u5177\u4f53\u8bf7\u53c2\u8003serialization example \u5b9a\u4e49\u53c2\u6570\u7684\u793a\u4f8b\u503c\uff1b<code>Pait</code>\u652f\u6301\u5de5\u5382\u51fd\u6570\uff0c\u4f46\u662f\u8f6c\u5316\u4e3aOpenAPI\u5219\u4f1a\u53d8\u6210\u5f53\u4e0b\u751f\u6210\u7684\u56fa\u5b9a\u503c openapi_include \u5982\u679c\u503c\u4e3a<code>False</code>\uff0c\u90a3\u4e48<code>Pait</code>\u5728\u751f\u6210OpenAPI\u65f6\u4e0d\u5305\u62ec\u8be5\u53c2\u6570"},{"location":"3_1_openapi/#41links","title":"4.1.Links","text":"<p>Links\u662fOpenAPI\u5b9a\u4e49\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u7528\u4e8e\u6307\u5b9aA\u63a5\u53e3\u7684\u8bf7\u6c42\u53c2\u6570\u4e0eB\u63a5\u53e3\u7684\u54cd\u5e94\u5bf9\u8c61\u7684\u67d0\u4e2a\u6570\u636e\u6709\u5173\u8054\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a</p> FlaskStarletteSanicTornado docs_source_code/openapi/how_to_use_openapi/flask_link_demo.py<pre><code>import hashlib\nfrom typing import Type\nfrom flask import Flask\nfrom pait import field\nfrom pait.app.flask import pait\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.openapi.openapi import LinksModel\nfrom pydantic import BaseModel, Field\nclass LoginRespModel(JsonResponseModel):\nclass ResponseModel(BaseModel):  # type: ignore\nclass DataModel(BaseModel):\ntoken: str\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"login response\"\nresponse_data: Type[BaseModel] = ResponseModel\nlink_login_token_model: LinksModel = LinksModel(LoginRespModel, \"$response.body#/data/token\", desc=\"test links model\")\n@pait(response_model_list=[LoginRespModel])\ndef login_route(\nuid: str = field.Body.i(description=\"user id\"), password: str = field.Body.i(description=\"password\")\n) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": {\"token\": hashlib.sha256((uid + password).encode(\"utf-8\")).hexdigest()}}\n@pait()\ndef get_user_route(token: str = field.Header.i(\"\", description=\"token\", links=link_login_token_model)) -&gt; dict:\nif token:\nreturn {\"code\": 0, \"msg\": \"\"}\nelse:\nreturn {\"code\": 1, \"msg\": \"\"}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/login\", \"login\", login_route, methods=[\"POST\"])\napp.add_url_rule(\"/api/get-user-info\", \"get_user_info\", get_user_route, methods=[\"GET\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/starlette_link_demo.py<pre><code>import hashlib\nfrom typing import Type\nimport uvicorn\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.openapi.openapi import LinksModel\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass LoginRespModel(JsonResponseModel):\nclass ResponseModel(BaseModel):  # type: ignore\nclass DataModel(BaseModel):\ntoken: str\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"login response\"\nresponse_data: Type[BaseModel] = ResponseModel\nlink_login_token_model: LinksModel = LinksModel(LoginRespModel, \"$response.body#/data/token\", desc=\"test links model\")\n@pait(response_model_list=[LoginRespModel])\nasync def login_route(\nuid: str = field.Body.i(description=\"user id\"), password: str = field.Body.i(description=\"password\")\n) -&gt; JSONResponse:\nreturn JSONResponse(\n{\"code\": 0, \"msg\": \"\", \"data\": {\"token\": hashlib.sha256((uid + password).encode(\"utf-8\")).hexdigest()}}\n)\n@pait()\nasync def get_user_route(\ntoken: str = field.Header.i(\n\"\",\ndescription=\"token\",\nlinks=link_login_token_model,\n)\n) -&gt; JSONResponse:\nif token:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\"})\nelse:\nreturn JSONResponse({\"code\": 1, \"msg\": \"\"})\napp = Starlette(\nroutes=[\nRoute(\"/api/login\", login_route, methods=[\"POST\"]),\nRoute(\"/api/get-user-info\", get_user_route, methods=[\"GET\"]),\n]\n)\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/sanic_link_demo.py<pre><code>import hashlib\nfrom typing import Type\nimport uvicorn\nfrom pait import field\nfrom pait.app.sanic import pait\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.openapi.openapi import LinksModel\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass LoginRespModel(JsonResponseModel):\nclass ResponseModel(BaseModel):  # type: ignore\nclass DataModel(BaseModel):\ntoken: str\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"login response\"\nresponse_data: Type[BaseModel] = ResponseModel\nlink_login_token_model: LinksModel = LinksModel(LoginRespModel, \"$response.body#/data/token\", desc=\"test links model\")\n@pait(response_model_list=[LoginRespModel])\nasync def login_route(\nuid: str = field.Body.i(description=\"user id\"), password: str = field.Body.i(description=\"password\")\n) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": {\"token\": hashlib.sha256((uid + password).encode(\"utf-8\")).hexdigest()}})\n@pait()\ndef get_user_route(\ntoken: str = field.Header.i(\n\"\",\ndescription=\"token\",\nlinks=link_login_token_model,\n)\n) -&gt; HTTPResponse:\nif token:\nreturn json({\"code\": 0, \"msg\": \"\"})\nelse:\nreturn json({\"code\": 1, \"msg\": \"\"})\napp = Sanic(name=\"demo\")\napp.add_route(login_route, \"/api/login\", methods=[\"POST\"])\napp.add_route(get_user_route, \"/api/get-user-info\", methods=[\"GET\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/tornado_link_demo.py<pre><code>import hashlib\nfrom typing import Type\nfrom pait import field\nfrom pait.app.tornado import pait\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.openapi.openapi import LinksModel\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass LoginRespModel(JsonResponseModel):\nclass ResponseModel(BaseModel):  # type: ignore\nclass DataModel(BaseModel):\ntoken: str\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"login response\"\nresponse_data: Type[BaseModel] = ResponseModel\nlink_login_token_model: LinksModel = LinksModel(LoginRespModel, \"$response.body#/data/token\", desc=\"test links model\")\nclass LoginHandler(RequestHandler):\n@pait(response_model_list=[LoginRespModel])\nasync def post(\nself, uid: str = field.Json.i(description=\"user id\"), password: str = field.Json.i(description=\"password\")\n) -&gt; None:\nself.write(\n{\"code\": 0, \"msg\": \"\", \"data\": {\"token\": hashlib.sha256((uid + password).encode(\"utf-8\")).hexdigest()}}\n)\nclass GetUserHandler(RequestHandler):\n@pait()\ndef get(\nself,\ntoken: str = field.Header.i(\n\"\",\ndescription=\"token\",\nlinks=link_login_token_model,\n),\n) -&gt; None:\nif token:\nself.write({\"code\": 0, \"msg\": \"\"})\nelse:\nself.write({\"code\": 1, \"msg\": \"\"})\napp: Application = Application(\n[(r\"/api/login\", LoginHandler), (r\"/api/get-user-info\", GetUserHandler)],\n)\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5b9a\u4e49\u4e86\u4e00\u4e2a\u767b\u9646\u7684\u63a5\u53e3--<code>login_route</code>\u548c\u4e00\u4e2a\u83b7\u53d6\u7528\u6237\u8be6\u60c5\u7684\u63a5\u53e3--<code>get_user_route</code>\uff0c \u5176\u4e2d\u7528\u6237\u8be6\u60c5\u83b7\u53d6\u63a5\u53e3\u9700\u8981\u4e00\u4e2atoken\u53c2\u6570\u6765\u6821\u9a8c\u7528\u6237\u5e76\u83b7\u53d6\u7528\u6237\u7684id\uff0c\u800c\u8fd9\u4e2atoken\u53c2\u6570\u662f\u5728\u767b\u9646\u63a5\u53e3\u8fd4\u56de\u7684\uff0c\u6240\u4ee5\u7528\u6237\u8be6\u60c5\u63a5\u53e3\u7684token\u53c2\u6570\u4e0e\u767b\u9646\u63a5\u53e3\u7684\u54cd\u5e94\u6570\u636e\u4e2d\u7684token\u662f\u6709\u5173\u8054\u7684\u3002</p> <p>\u4e3a\u4e86\u80fd\u8ba9OpenAPI\u8bc6\u522b\u5230token\u53c2\u6570\u4e0e\u54cd\u5e94\u5bf9\u8c61\u4e2d\u7684token\u6709\u5173\u8054\uff0c\u9996\u5148\u9700\u8981\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u4e2d\u901a\u8fc7<code>LinksModel</code>\u58f0\u660e\u4e86<code>link_login_token_model</code>\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u4e0e<code>LoginRespModel</code>\u54cd\u5e94\u5bf9\u8c61\u7ed1\u5b9a\uff0c\u4e14\u901a\u8fc7OpenAPI\u7684\u89c4\u5219<code>\"$response.body#/data/token\"</code>\u58f0\u660e\u4e86\u672c\u6b21\u7ed1\u5b9a\u54cd\u5e94\u5bf9\u8c61\u4e2d\u7684\u54cd\u5e94\u7ed3\u6784\u4f53(body)\u4e2d\u7684<code>token</code>\u53c2\u6570\u3002 \u63a5\u7740\u5728\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4ee3\u7801\u4e2d\u628a<code>link_login_token_model</code>\u8d4b\u503c\u5230<code>get_user_route</code>\u8def\u7531\u51fd\u6570\u4e2d<code>token</code>\u7684<code>Field</code>\u7684<code>links</code>\u5c5e\u6027\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u6b21\u5173\u8054\u3002</p> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u5e76\u5728\u6d4f\u89c8\u5668\u8bbf\u95eehttp://127.0.0.1:8000/swagger\u540e\u4f1a\u51fa\u73b0\u5982\u4e0b\u9875\u9762:  \u53ef\u4ee5\u770b\u5230\u767b\u9646\u63a5\u53e3\u7684<code>Response</code>\u90a3\u4e00\u680f\u7684\u6700\u53f3\u8fb9\u5c55\u793a\u4e86<code>Links</code>\u7684\u6570\u636e\u3002</p> <p>Note</p> <p>\u76ee\u524d\u8bb8\u591aOpenAPI\u5de5\u5177\u53ea\u63d0\u4f9b\u7b80\u5355\u7684Links\u652f\u6301\uff0c\u66f4\u591a\u5173\u4e8eLinks\u7684\u4f7f\u7528\u4e0e\u8bf4\u660e\u89c1Swagger Links\uff0c\u540e\u9762<code>Pait</code>\u4f1a\u63a8\u51faLinks\u7684\u62d3\u5c55\u529f\u80fd\u3002</p>"},{"location":"3_1_openapi/#5openapi","title":"5.OpenAPI\u751f\u6210","text":"<p>\u5728OpenAPI\u751f\u6001\u4e2d\uff0c\u5b83\u7684\u6838\u5fc3\u662f\u4e00\u4efd\u7b26\u5408OpenAPI\u683c\u5f0f\u7684json\u6216\u8005yaml\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u5728Swagger\u7b49OpenAPI\u9875\u9762\u4e2d\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5bfc\u5165\u5230Postman\u7b49\u5de5\u5177\u4e2d\u4f7f\u7528\u3002 <code>Pait</code>\u4e0d\u4f1a\u76f4\u63a5\u53bb\u751f\u6210\u4e00\u4efd\u6587\u4ef6\uff0c\u800c\u662f\u59d4\u6258\u7ed9AnyAPI\u5904\u7406\u5e76\u751f\u6210\u4e00\u4e2aOpenAPI\u5bf9\u8c61\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7AnyAPI\u652f\u6301\u7684\u8f93\u51fa\u65b9\u5f0f\u8f6c\u5316\u4e3a\u5404\u79cd\u4eba\u7c7b\u6613\u8bfb\u7684\u683c\u5f0f\u6216\u8005\u9875\u9762:</p> <p>Note</p> <p>AnyAPI\u662f\u4ecePait(0.7.8)\u7248\u672c\u5206\u79bb\u51fa\u6765\u7684\uff0c\u76ee\u524d\u4ec5\u4f9b<code>Pait</code>\u4f7f\u7528\uff0c\u5728\u540e\u7eedAnyAPI\u4f1a\u65b0\u589e\u66f4\u591a\u7684\u529f\u80fd\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2aOpenAPI\u5bf9\u8c61\u751f\u6210\u4e0e\u57fa\u4e8eOpenAPI\u5bf9\u8c61\u751f\u6210\u8f93\u51fa\u5185\u5bb9\u7684\u793a\u4f8b</p> FlaskStarletteSanicTornado docs_source_code/openapi/how_to_use_openapi/flask_with_output_demo.py<pre><code>from typing import Any, Type\nfrom any_api.openapi.to.markdown import Markdown\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.g import config\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.openapi import OpenAPI\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\ndef my_serialization(content: str, **kwargs: Any) -&gt; str:\nimport json\nimport yaml  # type: ignore\nreturn yaml.dump(json.loads(json.dumps(content, cls=config.json_encoder), **kwargs))\nopenapi_model = OpenAPI(app)\nprint(\"json\", openapi_model.content())\nprint(\"yaml\", openapi_model.content(serialization_callback=my_serialization))\nfor i18n_lang in (\"zh-cn\", \"en\"):\nprint(f\"{i18n_lang} md\", Markdown(openapi_model, i18n_lang=i18n_lang).content)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/starlette_with_output_demo.py<pre><code>from typing import Any, List\nfrom any_api.openapi.to.markdown import Markdown\nfrom pait.app.starlette import pait\nfrom pait.field import Query\nfrom pait.g import config\nfrom pait.model.response import BaseResponseModel\nfrom pait.openapi.openapi import OpenAPI\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass MyJsonResponseModel(BaseResponseModel):\nclass ResponseModel(BaseModel):\nclass UserModel(BaseModel):\nname: str = Field(..., example=\"so1n\")\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000)\nage: int = Field(..., gt=0)\ncode: int = Field(..., ge=0)\nmsg: str = Field(...)\ndata: List[UserModel]\nclass HeaderModel(BaseModel):\nx_token: str = Field(..., alias=\"X-Token\")\ncontent_type: str = Field(..., alias=\"Content-Type\")\nresponse_data = ResponseModel\ndescription = \"demo json response\"\nmedia_type = \"application/json; charset=utf-8\"\nheader = HeaderModel\nstatus_code = (200, 201, 404)\n@pait(response_model_list=[MyJsonResponseModel])\nasync def demo(\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nage: int = Query.t(description=\"age\", gt=0),\nusername: str = Query.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nresp = JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": [{\"name\": username, \"uid\": uid, \"age\": age}]})\nresp.headers.append(\"X-Token\", \"12345\")\nresp.headers[\"Content-Type\"] = \"application/json; charset=utf-8\"\nreturn resp\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\ndef my_serialization(content: str, **kwargs: Any) -&gt; str:\nimport json\nimport yaml  # type: ignore\nreturn yaml.dump(json.loads(json.dumps(content, cls=config.json_encoder), **kwargs))\nopenapi_model = OpenAPI(app)\nprint(\"json\", openapi_model.content())\nprint(\"yaml\", openapi_model.content(serialization_callback=my_serialization))\nfor i18n_lang in (\"zh-cn\", \"en\"):\nprint(f\"{i18n_lang} md\", Markdown(openapi_model, i18n_lang=i18n_lang).content)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/sanic_with_output_demo.py<pre><code>from typing import Any, List\nfrom any_api.openapi.to.markdown import Markdown\nfrom pait.app.sanic import pait\nfrom pait.field import Query\nfrom pait.g import config\nfrom pait.model.response import BaseResponseModel\nfrom pait.openapi.openapi import OpenAPI\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass MyJsonResponseModel(BaseResponseModel):\nclass ResponseModel(BaseModel):\nclass UserModel(BaseModel):\nname: str = Field(..., example=\"so1n\")\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000)\nage: int = Field(..., gt=0)\ncode: int = Field(..., ge=0)\nmsg: str = Field(...)\ndata: List[UserModel]\nclass HeaderModel(BaseModel):\nx_token: str = Field(..., alias=\"X-Token\")\ncontent_type: str = Field(..., alias=\"Content-Type\")\nresponse_data = ResponseModel\ndescription = \"demo json response\"\nmedia_type = \"application/json; charset=utf-8\"\nheader = HeaderModel\nstatus_code = (200, 201, 404)\n@pait(response_model_list=[MyJsonResponseModel])\nasync def demo(\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nage: int = Query.t(description=\"age\", gt=0),\nusername: str = Query.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nresp = json({\"code\": 0, \"msg\": \"\", \"data\": [{\"name\": username, \"uid\": uid, \"age\": age}]})\nresp.headers.add(\"X-Token\", \"12345\")\nresp.headers[\"Content-Type\"] = \"application/json; charset=utf-8\"\nreturn resp\napp = Sanic(name=\"demo\")\napp.add_route(demo, \"/api/demo\", methods=[\"GET\"])\ndef my_serialization(content: str, **kwargs: Any) -&gt; str:\nimport json\nimport yaml  # type: ignore\nreturn yaml.dump(json.loads(json.dumps(content, cls=config.json_encoder), **kwargs))\nopenapi_model = OpenAPI(app)\nprint(\"json\", openapi_model.content())\nprint(\"yaml\", openapi_model.content(serialization_callback=my_serialization))\nfor i18n_lang in (\"zh-cn\", \"en\"):\nprint(f\"{i18n_lang} md\", Markdown(openapi_model, i18n_lang=i18n_lang).content)\n</code></pre> docs_source_code/openapi/how_to_use_openapi/tornado_with_output_demo.py<pre><code>from typing import Any, List\nfrom any_api.openapi.to.markdown import Markdown\nfrom pait.app.tornado import pait\nfrom pait.field import Query\nfrom pait.g import config\nfrom pait.model.response import BaseResponseModel\nfrom pait.openapi.openapi import OpenAPI\nfrom pydantic import BaseModel, Field\nfrom tornado.web import Application, RequestHandler\nclass MyJsonResponseModel(BaseResponseModel):\nclass ResponseModel(BaseModel):\nclass UserModel(BaseModel):\nname: str = Field(..., example=\"so1n\")\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000)\nage: int = Field(..., gt=0)\ncode: int = Field(..., ge=0)\nmsg: str = Field(...)\ndata: List[UserModel]\nclass HeaderModel(BaseModel):\nx_token: str = Field(..., alias=\"X-Token\")\ncontent_type: str = Field(..., alias=\"Content-Type\")\nresponse_data = ResponseModel\ndescription = \"demo json response\"\nmedia_type = \"application/json; charset=utf-8\"\nheader = HeaderModel\nstatus_code = (200, 201, 404)\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[MyJsonResponseModel])\ndef get(\nself,\nuid: int = Query.t(description=\"user id\", gt=10, lt=1000),\nage: int = Query.t(description=\"age\", gt=0),\nusername: str = Query.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": [{\"name\": username, \"uid\": uid, \"age\": age}]})\nself.add_header(\"X-Token\", \"12345\")\nself.set_header(\"Content-Type\", \"application/json; charset=utf-8\")\napp: Application = Application([(r\"/api/demo\", DemoHandler)])\ndef my_serialization(content: str, **kwargs: Any) -&gt; str:\nimport json\nimport yaml  # type: ignore\nreturn yaml.dump(json.loads(json.dumps(content, cls=config.json_encoder), **kwargs))\nopenapi_model = OpenAPI(app)\nprint(\"json\", openapi_model.content())\nprint(\"yaml\", openapi_model.content(serialization_callback=my_serialization))\nfor i18n_lang in (\"zh-cn\", \"en\"):\nprint(f\"{i18n_lang} md\", Markdown(openapi_model, i18n_lang=i18n_lang).content)\n</code></pre> <p>\u8be5\u793a\u4f8b\u4ee3\u7801\u4f1a\u5148\u751f\u6210\u4e00\u4e2aOpenAPI\u793a\u4f8b--<code>openapi_model</code>\uff0c<code>openapi_model</code>\u81ea\u5e26\u4e00\u4e2a<code>content</code>\u65b9\u6cd5\uff0c\u5b83\u7684<code>serialization_callback</code>\u9ed8\u8ba4\u503c\u4e3a<code>json.dump</code>\u6240\u4ee5\u76f4\u63a5\u8c03\u7528<code>openapi_model.content()</code>\u4f1a\u751f\u6210\u5982\u4e0bjson\u6587\u672c:</p> Json\u793a\u4f8b(\u793a\u4f8b\u6587\u672c\u8f83\u957f\uff0c\u8bf7\u6309\u9700\u6253\u5f00) <pre><code>{\n\"openapi\": \"3.0.0\",\n\"info\": {\n\"title\": \"AnyApi\",\n\"description\": \"API Documentation\",\n\"version\": \"0.0.1\"\n},\n\"servers\": [],\n\"paths\": {\n\"/api\": {\n\"options\": {\n\"tags\": [\n\"default\"\n],\n\"summary\": \"\",\n\"description\": \"\",\n\"operationId\": \"demo_options\",\n\"parameters\": [],\n\"requestBody\": {\n\"description\": \"\",\n\"required\": false,\n\"content\": {\n\"application/json\": {\n\"schema\": {\n\"$ref\": \"#/components/schemas/Demo_Post__Main___Demo_Post\"\n}\n}\n}\n},\n\"responses\": {\n\"200\": {\n\"description\": \"demo response\",\n\"content\": {\n\"application/json\": {\n\"schema\": {\n\"$ref\": \"#/components/schemas/ResponseModel\"\n}\n}\n}\n}\n},\n\"deprecated\": false,\n\"pait_info\": {\n\"group\": \"root\",\n\"status\": \"undefined\",\n\"author\": [\n\"\"\n],\n\"pait_id\": \"__main___demo_post\"\n}\n},\n\"post\": {\n\"tags\": [\n\"default\"\n],\n\"summary\": \"\",\n\"description\": \"\",\n\"operationId\": \"demo_post\",\n\"parameters\": [],\n\"requestBody\": {\n\"description\": \"\",\n\"required\": false,\n\"content\": {\n\"application/json\": {\n\"schema\": {\n\"$ref\": \"#/components/schemas/Demo_Post__Main___Demo_Post\"\n}\n}\n}\n},\n\"responses\": {\n\"200\": {\n\"description\": \"demo response\",\n\"content\": {\n\"application/json\": {\n\"schema\": {\n\"$ref\": \"#/components/schemas/ResponseModel\"\n}\n}\n}\n}\n},\n\"deprecated\": false,\n\"pait_info\": {\n\"group\": \"root\",\n\"status\": \"undefined\",\n\"author\": [\n\"\"\n],\n\"pait_id\": \"__main___demo_post\"\n}\n}\n}\n},\n\"tags\": [\n{\n\"name\": \"default\",\n\"description\": \"\"\n}\n],\n\"components\": {\n\"schemas\": {\n\"Demo_Post__Main___Demo_Post\": {\n\"title\": \"Demo_Post__Main___Demo_Post\",\n\"type\": \"object\",\n\"properties\": {\n\"uid\": {\n\"title\": \"Uid\",\n\"description\": \"user id\",\n\"exclusiveMinimum\": 10,\n\"exclusiveMaximum\": 1000,\n\"type\": \"integer\"\n},\n\"username\": {\n\"title\": \"Username\",\n\"description\": \"user name\",\n\"maxLength\": 4,\n\"minLength\": 2,\n\"type\": \"string\"\n}\n},\n\"required\": [\n\"uid\",\n\"username\"\n]\n},\n\"ResponseModel\": {\n\"title\": \"ResponseModel\",\n\"type\": \"object\",\n\"properties\": {\n\"uid\": {\n\"title\": \"Uid\",\n\"type\": \"integer\"\n},\n\"user_name\": {\n\"title\": \"User Name\",\n\"type\": \"string\"\n}\n},\n\"required\": [\n\"uid\",\n\"user_name\"\n]\n}\n}\n}\n}\n</code></pre> <p>\u6b64\u5916\uff0c\u4ee3\u7801\u4e2d\u8fd8\u81ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8f93\u51fa\u4e3ayaml\u7684\u5e8f\u5217\u5316\u51fd\u6570<code>my_serialization</code>\uff0c\u5e76\u901a\u8fc7<code>openapi_model.content(serialization_callback=my_serialization)</code>\u751f\u6210\u5982\u4e0byaml\u6587\u672c\uff1a</p> Json\u793a\u4f8b(\u793a\u4f8b\u6587\u672c\u8f83\u957f\uff0c\u8bf7\u6309\u9700\u6253\u5f00) <pre><code>components:\nschemas:\nDemo_Post__Main___Demo_Post:\nproperties:\nuid:\ndescription: user id\nexclusiveMaximum: 1000\nexclusiveMinimum: 10\ntitle: Uid\ntype: integer\nusername:\ndescription: user name\nmaxLength: 4\nminLength: 2\ntitle: Username\ntype: string\nrequired:\n- uid\n- username\ntitle: Demo_Post__Main___Demo_Post\ntype: object\nResponseModel:\nproperties:\nuid:\ntitle: Uid\ntype: integer\nuser_name:\ntitle: User Name\ntype: string\nrequired:\n- uid\n- user_name\ntitle: ResponseModel\ntype: object\ninfo:\ndescription: API Documentation\ntitle: AnyApi\nversion: 0.0.1\nopenapi: 3.0.0\npaths:\n/api:\noptions:\ndeprecated: false\ndescription: ''\noperationId: demo_options\npait_info:\nauthor:\n- ''\ngroup: root\npait_id: __main___demo_post\nstatus: undefined\nparameters: []\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/Demo_Post__Main___Demo_Post'\ndescription: ''\nrequired: false\nresponses:\n'200':\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/ResponseModel'\ndescription: demo response\nsummary: ''\ntags:\n- default\npost:\ndeprecated: false\ndescription: ''\noperationId: demo_post\npait_info:\nauthor:\n- ''\ngroup: root\npait_id: __main___demo_post\nstatus: undefined\nparameters: []\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/Demo_Post__Main___Demo_Post'\ndescription: ''\nrequired: false\nresponses:\n'200':\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/ResponseModel'\ndescription: demo response\nsummary: ''\ntags:\n- default\nservers: []\ntags:\n- description: ''\nname: default\n</code></pre> <p>\u6700\u540e\uff0c\u4ee3\u7801\u8fd8\u901a\u8fc7AnyAPI\u7684<code>Markdown</code>\u751f\u6210\u4e0d\u540c\u8bed\u8a00\u7684Markdown\u6587\u6863\uff0c\u5982\u4e0b:</p> \u4e2d\u6587Markdown\u793a\u4f8b(\u793a\u4f8b\u6587\u672c\u8f83\u957f\uff0c\u8bf7\u6309\u9700\u6253\u5f00\uff0c\u53ea\u5c55\u793a\u539f\u751f\u6570\u636e) <pre><code># AnyApi\n### \u540d\u79f0: demo.demo\n**\u6807\u7b7e**: default\n- \u8def\u5f84: /api/demo\n- \u65b9\u6cd5: get\n- \u8bf7\u6c42:\n    **query**\n     |\u540d\u79f0|\u9ed8\u8ba4|\u7c7b\u578b|\u63cf\u8ff0|\u793a\u4f8b|\u5176\u5b83|\n     |---|---|---|---|---|---|\n     |uid|`\u5fc5\u586b`|integer|user id||exclusiveMinimum:10;&lt;br&gt;exclusiveMaximum:1000|\n     |age|`\u5fc5\u586b`|integer|age||exclusiveMinimum:0|\n     |username|`\u5fc5\u586b`|string|user name||maxLength:4;&lt;br&gt;minLength:2|\n\n- \u54cd\u5e94\n**\u63cf\u8ff0**: demo json response\n*Header*\n- 200:application/json; charset=utf-8\n    **\u54cd\u5e94\u4fe1\u606f**\n         |\u540d\u79f0|\u9ed8\u8ba4|\u7c7b\u578b|\u63cf\u8ff0|\u793a\u4f8b|\u5176\u5b83|\n         |---|---|---|---|---|---|\n         |code|`\u5fc5\u586b`|integer|||minimum:0|\n         |msg|`\u5fc5\u586b`|string||||\n         |data|`\u5fc5\u586b`|array|||items:{'$ref': '#/components/schemas/UserModel'}|\n\n**\u54cd\u5e94\u793a\u4f8b**\n        ```json\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"name\": \"so1n\",\n\"uid\": 0,\n\"age\": 0\n}\n}\n        ```\n**\u63cf\u8ff0**: demo json response\n*Header*\n- 201:application/json; charset=utf-8\n    **\u54cd\u5e94\u4fe1\u606f**\n         |\u540d\u79f0|\u9ed8\u8ba4|\u7c7b\u578b|\u63cf\u8ff0|\u793a\u4f8b|\u5176\u5b83|\n         |---|---|---|---|---|---|\n         |code|`\u5fc5\u586b`|integer|||minimum:0|\n         |msg|`\u5fc5\u586b`|string||||\n         |data|`\u5fc5\u586b`|array|||items:{'$ref': '#/components/schemas/UserModel'}|\n\n**\u54cd\u5e94\u793a\u4f8b**\n        ```json\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"name\": \"so1n\",\n\"uid\": 0,\n\"age\": 0\n}\n}\n        ```\n**\u63cf\u8ff0**: demo json response\n*Header*\n- 404:application/json; charset=utf-8\n    **\u54cd\u5e94\u4fe1\u606f**\n         |\u540d\u79f0|\u9ed8\u8ba4|\u7c7b\u578b|\u63cf\u8ff0|\u793a\u4f8b|\u5176\u5b83|\n         |---|---|---|---|---|---|\n         |code|`\u5fc5\u586b`|integer|||minimum:0|\n         |msg|`\u5fc5\u586b`|string||||\n         |data|`\u5fc5\u586b`|array|||items:{'$ref': '#/components/schemas/UserModel'}|\n\n**\u54cd\u5e94\u793a\u4f8b**\n        ```json\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"name\": \"so1n\",\n\"uid\": 0,\n\"age\": 0\n}\n}\n        ```\n</code></pre> \u82f1\u6587Markdown\u793a\u4f8b(\u793a\u4f8b\u6587\u672c\u8f83\u957f\uff0c\u8bf7\u6309\u9700\u6253\u5f00\uff0c\u53ea\u5c55\u793a\u539f\u751f\u6570\u636e) <pre><code># AnyApi\n### Name: demo.demo\n**Tag**: default\n- Path: /api/demo\n- Method: get\n- Request:\n    **query**\n     |Name|Default|Type|Desc|Example|Other|\n     |---|---|---|---|---|---|\n     |uid|`Required`|integer|user id||exclusiveMinimum:10;&lt;br&gt;exclusiveMaximum:1000|\n     |age|`Required`|integer|age||exclusiveMinimum:0|\n     |username|`Required`|string|user name||maxLength:4;&lt;br&gt;minLength:2|\n\n- Response\n**Desc**: demo json response\n*Header*\n- 200:application/json; charset=utf-8\n    **Response Info**\n         |Name|Default|Type|Desc|Example|Other|\n         |---|---|---|---|---|---|\n         |code|`Required`|integer|||minimum:0|\n         |msg|`Required`|string||||\n         |data|`Required`|array|||items:{'$ref': '#/components/schemas/UserModel'}|\n\n**Response Example**\n        ```json\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"name\": \"so1n\",\n\"uid\": 0,\n\"age\": 0\n}\n}\n        ```\n**Desc**: demo json response\n*Header*\n- 201:application/json; charset=utf-8\n    **Response Info**\n         |Name|Default|Type|Desc|Example|Other|\n         |---|---|---|---|---|---|\n         |code|`Required`|integer|||minimum:0|\n         |msg|`Required`|string||||\n         |data|`Required`|array|||items:{'$ref': '#/components/schemas/UserModel'}|\n\n**Response Example**\n        ```json\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"name\": \"so1n\",\n\"uid\": 0,\n\"age\": 0\n}\n}\n        ```\n**Desc**: demo json response\n*Header*\n- 404:application/json; charset=utf-8\n    **Response Info**\n         |Name|Default|Type|Desc|Example|Other|\n         |---|---|---|---|---|---|\n         |code|`Required`|integer|||minimum:0|\n         |msg|`Required`|string||||\n         |data|`Required`|array|||items:{'$ref': '#/components/schemas/UserModel'}|\n\n**Response Example**\n        ```json\n{\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"name\": \"so1n\",\n\"uid\": 0,\n\"age\": 0\n}\n}\n        ```\n</code></pre>"},{"location":"3_2_openapi_route/","title":"OpenAPI\u8def\u7531","text":"<p><code>Pait</code>\u9664\u4e86\u652f\u6301OpenAPI\u7684\u6587\u4ef6\u8f93\u51fa\u5916\uff0c\u8fd8\u652f\u6301OpenAPI\u8def\u7531\u7ed1\u5b9a\uff0c\u6bd4\u5982\u6587\u6863\u9996\u9875\u7684\u793a\u4f8b:</p> FlaskStarletteSanicTornado docs_source_code/introduction/flask_demo.py<pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/introduction/starlette_demo.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/sanic_demo.py<pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/introduction/tornado_demo.py<pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8be5\u793a\u4f8b\u4ee3\u7801\u901a\u8fc7<code>AddDocRoute</code>\u5373\u53ef\u4e3a<code>app</code>\u5b9e\u4f8b\u7ed1\u5b9a\u5982\u4e0b\u8def\u7531\uff1a</p> \u8def\u7531url \u63cf\u8ff0 \u7279\u70b9 /openapi.json \u83b7\u53d6OpenAPI\u7684json\u54cd\u5e94 /redoc \u4f7f\u7528Redoc\u5c55\u793a\u63a5\u53e3\u6587\u6863\u6570\u636e UI\u6f02\u4eae\u7b80\u5355\uff0c\u4f46\u662f\u4e0d\u652f\u6301\u8bf7\u6c42\u8c03\u7528 /swagger \u4f7f\u7528Swagger\u5c55\u793a\u63a5\u53e3\u6587\u6863\u6570\u636e \u901a\u7528\u7684OpenAPI\u5c55\u793aUI\uff0c\u529f\u80fd\u9f50\u5168 /rapidoc \u4f7f\u7528RapiDoc\u5c55\u793a\u63a5\u53e3\u6587\u6863\u6570\u636e \u529f\u80fd\u9f50\u5168\uff1bUI\u73b0\u4ee3\u5316\uff1b\u652f\u6301\u81ea\u5b9a\u4e49\u7684UI /rapipdf \u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u4e0b\u8f7dRapiDocpdf\u6587\u6863\u7684\u9875\u9762 \u5bf9\u975e\u82f1\u6587\u7684\u652f\u6301\u6bd4\u8f83\u5dee"},{"location":"3_2_openapi_route/#1openapi","title":"1.OpenAPI\u8def\u7531\u7684\u4f7f\u7528","text":"<p><code>AddDocRoute</code>\u53ef\u4ee5\u65b9\u4fbf\u7684\u4e3a<code>app</code>\u5b9e\u4f8b\u7ed1\u5b9aOpenAPI\u8def\u7531\uff0c\u540c\u65f6<code>AddDocRoute</code>\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53c2\u6570\u65b9\u4fbf\u5f00\u53d1\u8005\u81ea\u5b9a\u4e49\u8def\u7531\u6269\u5c55\u4ee5\u53ca\u89e3\u51b3\u751f\u4ea7\u73af\u5883\u7684\u590d\u6742\u5316\u3002 \u76ee\u524d<code>AddDocRoute</code>\u63d0\u4f9b\u7684\u53c2\u6570\u6709:</p> \u53c2\u6570 \u63cf\u8ff0 scheme HTTP Schema\uff0c\u5982http\u6216\u8005https openapi_json_url_only_path \u751f\u6210\u7684\u5185\u90e8url\u662f\u5426\u53ea\u751f\u6210path\u90e8\u5206(\u8be5\u53c2\u6570\u751f\u6548\u65f6\uff0cscheme\u4f1a\u5931\u6548) prefix \u8def\u7531URL\u524d\u7f00 pin_code \u4e00\u79cd\u7b80\u5355\u7684\u5b89\u5168\u6821\u9a8c\u673a\u5236 title \u5b9a\u4e49OpenAPI\u8def\u7531\u7684Title,\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8c03\u7528\u591a\u6b21<code>AddDocRoute</code>\u65f6\uff0cTitle\u5e94\u8be5\u4e0d\u540c doc_fn_dict OpenAPI\u8def\u7531\u4e2dui\u9875\u9762\u7684\u5b9e\u73b0 openapi <code>Pait</code>\u7684OpenAPI\u5bf9\u8c61 pait <code>Pait</code>\uff0cOpenAPI\u4f1a\u57fa\u4e8e\u4f20\u9012\u7684<code>pait</code>\u53bb\u521b\u5efa\u5b50<code>pait</code>\u5e76\u4f7f\u7528\u3002\u8be6\u89c1\u5982\u4f55\u4f7f\u7528Pait add_multi_simple_route \u7ed1\u5b9a\u8def\u7531\u7684\u65b9\u6cd5\uff0c\u8be6\u89c1<code>SimpleRoute</code>\u7ae0\u8282 not_found_exc pin_code\u9519\u8bef\u7684\u5f02\u5e38"},{"location":"3_2_openapi_route/#11scheme","title":"1.1.scheme","text":"<p>\u901a\u8fc7scheme\u53c2\u6570\u53ef\u4ee5\u663e\u793a\u7684\u6307\u5b9aOpenAPI\u8def\u7531\u7684HTTP Schema\uff0c\u6bd4\u5982HTTP\u548cHTTPS\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cHTTP Schema\u5e76\u4e0d\u662f\u6307\u4ee3\u5f53\u524d\u670d\u52a1\u4f7f\u7528\u7684HTTP Schema\uff0c\u800c\u662f\u7528\u4e8e\u8bbf\u95ee\u8005\u65f6\u4f7f\u7528\u7684HTTP Schema\u3002</p> <p>\u6bd4\u5982\u5f53\u524d\u670d\u52a1\u6307\u5b9a\u7684\u662fHTTP\u65b9\u6cd5\uff0c\u5e76\u4e0d\u652f\u6301HTTPS\uff0c\u5982\u679c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u90a3\u4e48\u7528\u6237\u4f1a\u901a\u8fc7<code>http://127.0.0.1/openapi.json</code> \u8bbf\u95ee\u3002 \u4e0d\u8fc7\u4e3a\u4e86\u589e\u5f3a\u670d\u52a1\u5b89\u5168\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u90fd\u4f1a\u5728\u670d\u52a1\u524d\u52a0\u4e0a\u4e00\u5c42\u4ee3\u7406\u4ee5\u652f\u6301HTTPS\uff0c\u5982\u4f7f\u7528Nginx\uff0c\u8fd9\u65f6\u7528\u6237\u53ea\u80fd\u901a\u8fc7<code>https://127.0.0.1/openapi.json</code> \u8bbf\u95ee\uff0c \u4e3a\u4e86\u652f\u6301\u8fd9\u79cd\u8bbf\u95ee\u65b9\u6cd5\uff0c\u5728\u7ed1\u5b9aOpenAPI\u8def\u7531\u65f6\u5e94\u8be5\u586b\u5199<code>scheme=\"https\"</code>\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5:</p> FlaskStarletteSanicTornado <pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app, scheme=\"http\")\napp.run(port=8000)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app, scheme=\"http\")\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app, scheme=\"http\")\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app, scheme=\"http\")\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre>"},{"location":"3_2_openapi_route/#12openapi_json_url_only_path","title":"1.2.openapi_json_url_only_path","text":"<p>openapi_json_url_only_path\u9ed8\u8ba4\u4e3a<code>False</code>\u65f6\uff0c\u751f\u6210\u7684OpenAPI Json url\u4e3a<code>http://127.0.0.1/openapi.json</code> \uff0c \u5f53openapi_json_url_only_path\u4e3a<code>True</code>\u7684\u65f6\u5019\uff0c\u751f\u6210\u7684OpenAPI Json url\u4e3a<code>/openapi.json</code>\u3002</p> <p>Note</p> <ul> <li>1.\u76ee\u524d\u7684OpenAPI UI\u90fd\u652f\u6301<code>/openapi.json</code>\u7c7b\u578b\u7684URL\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u540e\u7eed\u7684OpenAPI UI\u90fd\u80fd\u652f\u6301\u3002</li> <li>2.\u4f7f\u7528<code>openapi_json_url_only_path</code>\u65f6\uff0c<code>schema</code>\u53c2\u6570\u4f1a\u5931\u6548</li> </ul> <p>\u4f7f\u7528\u65b9\u6cd5:</p> FlaskStarletteSanicTornado <pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app, openapi_json_url_only_path=True)\napp.run(port=8000)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app, openapi_json_url_only_path=True)\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app, openapi_json_url_only_path=True)\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app, openapi_json_url_only_path=True)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre>"},{"location":"3_2_openapi_route/#13prefix","title":"1.3.prefix","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b<code>AddDocRoute</code>\u4f1a\u6309\u5982\u4e0bURL\u5c06\u8def\u7531\u7ed1\u5b9a\u5230app\u5b9e\u4f8b\u4e2d:</p> <ul> <li>/openapi.json</li> <li>/redoc</li> <li>/swagger</li> <li>/rapidoc</li> <li>/rapipdf</li> </ul> <p>\u4e0d\u8fc7\u91c7\u7528\u9ed8\u8ba4\u7684<code>/</code>\u524d\u7f00\u662f\u4e00\u79cd\u4e0d\u592a\u597d\u7684\u884c\u4e3a\uff0c\u5efa\u8bae\u5728\u4f7f\u7528\u7684\u65f6\u5019\u901a\u8fc7<code>prefix</code>\u6307\u5b9a\u4e00\u4e2a\u7b26\u5408\u81ea\u5df1\u4e60\u60ef\u7684\uff0c\u6bd4\u5982<code>/api-doc</code>\uff0c\u90a3\u4e48<code>AddDocRoute</code>\u4f1a\u4ee5\u5982\u4e0bURL\u7ed1\u5b9a\u5230\u8def\u7531\uff1a</p> <ul> <li>/api-doc/openapi.json</li> <li>/api-doc/redoc</li> <li>/api-doc/swagger</li> <li>/api-doc/rapidoc</li> <li>/api-doc/rapipdf</li> </ul> <p>\u4f7f\u7528\u65b9\u6cd5:</p> FlaskStarletteSanicTornado <pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app, prefix=\"/api-doc\")\napp.run(port=8000)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app, prefix=\"/api-doc\")\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app, prefix=\"/api-doc\")\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app, prefix=\"/api-doc\")\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre>"},{"location":"3_2_openapi_route/#14pin_code","title":"1.4.pin_code","text":"<p><code>pin_code</code>\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u5b89\u5168\u673a\u5236\uff0c\u9632\u6b62\u88ab\u4ed6\u4eba\u9519\u8bef\u7684\u8bbf\u95ee\u5230OpenAPI\u8def\u7531\uff0c\u5b83\u7684\u7528\u6cd5\u5982\u4e0b:</p> FlaskStarletteSanicTornado <pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app, pin_code=\"6666\")\napp.run(port=8000)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app, pin_code=\"6666\")\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app, pin_code=\"6666\")\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app, pin_code=\"6666\")\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u6b64\u65f6\u5982\u679c\u5728\u6d4f\u89c8\u5668\u8bbf\u95ee<code>http://127.0.0.1:8000/swagger</code> \u4f1a\u53d1\u73b0\u9875\u9762\u4f1a\u5c55\u793a\u5f02\u5e38\uff0c\u4f46\u662f\u6539\u7528<code>http://127.0.0.1:8000/swagger/pin_code=6666</code> \u8bbf\u95ee\u540e\uff0c\u53d1\u73b0\u9875\u9762\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee</p> <p>Note</p> <ul> <li>1.\u901a\u5e38\u60c5\u51b5\u4e0bOpenAPI\u8def\u7531\u4e0d\u5e94\u8be5\u66b4\u9732\u7ed9\u5916\u90e8\u4eba\u5458\u4f7f\u7528\uff0c\u9700\u8981\u901a\u8fc7Nginx\u7b49\u5de5\u5177\u6765\u589e\u5f3a\u5b89\u5168\u6027(\u5982IP\u767d\u540d\u5355\u9650\u5236)\uff0c\u8fd9\u79cd\u673a\u5236\u7684\u5b89\u5168\u6027\u662f\u8fdc\u8fdc\u9ad8\u4e8e<code>pin_code</code>\u7684\u3002</li> <li>2.\u5982\u679c\u8bbf\u95ee\u65f6\u643a\u5e26\u7684pin code\u6821\u9a8c\u4e0d\u901a\u8fc7\uff0c\u90a3\u4e48\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u8fd4\u56de404\u5f02\u5e38\uff0c\u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7not_found_exc\u5b9a\u5236\u3002</li> </ul>"},{"location":"3_2_openapi_route/#15title","title":"1.5.title","text":"<p>Title\u53c2\u6570\u6709\u4e24\u4e2a\u4f5c\u7528\uff0c\u4e00\u4e2a\u662f\u7528\u4e8e\u5b9a\u4e49OpenAPI\u5bf9\u8c61\u7684Title\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u6307\u5b9a\u5f53\u524d\u7ed1\u5b9a\u7684\u8fd9\u7ec4OpenAPI\u8def\u7531\u7684\u7ec4\u540d\u662f\u4ec0\u4e48\uff0c\u6240\u4ee5\u5982\u679c\u5bf9\u4e8e\u540c\u4e00\u4e2aapp\u5b9e\u4f8b\u8c03\u7528\u591a\u6b21<code>AddDocRoute</code>\u65f6\uff0c\u9700\u8981\u786e\u4fddTitle\u53c2\u6570\u662f\u4e0d\u4e00\u6837\u7684\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b:</p> FlaskStarletteSanicTornado <pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app, title=\"Api Doc\")\napp.run(port=8000)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app, title=\"Api Doc\")\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app, title=\"Api Doc\")\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app, title=\"Api Doc\")\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre>"},{"location":"3_2_openapi_route/#16doc_fn_dict","title":"1.6.doc_fn_dict","text":"<p><code>doc_fn_dict</code>\u662f\u4e00\u4e2a\u4ee5OpenAPI UI \u540d\u4e3aKey,\u751f\u6210OpenAPI Html\u5185\u5bb9\u51fd\u6570\u4e3aValue\u7684\u5b57\u5178\u3002\u5982\u679c\u6ca1\u6709\u4f20\u9012\u8be5\u53c2\u6570\uff0c\u90a3\u4e48\u9ed8\u8ba4\u60c5\u51b5\u4e0b<code>AddDocRoute</code>\u4f1a\u91c7\u7eb3\u5982\u4e0b\u7684\u5b57\u5178: <pre><code>from any_api.openapi.web_ui.elements import get_elements_html\nfrom any_api.openapi.web_ui.rapidoc import get_rapidoc_html, get_rapipdf_html\nfrom any_api.openapi.web_ui.redoc import get_redoc_html\nfrom any_api.openapi.web_ui.swagger import get_swagger_ui_html\ndefault_doc_fn_dict = {\n\"elements\": get_elements_html,\n\"rapidoc\": get_rapidoc_html,\n\"rapipdf\": get_rapipdf_html,\n\"redoc\": get_redoc_html,\n\"swagger\": get_swagger_ui_html,\n}\n</code></pre></p> <p>\u5176\u4e2d\uff0c<code>doc_fn_dict</code>\u89c4\u5b9a\u7684Key\u4e3a\u5b57\u7b26\u4e32\uff0cValue\u4e3a\u5982\u4e0b\u7684\u51fd\u6570: <pre><code>def demo(url: str, title: str = \"\") -&gt; str:\npass\n</code></pre> \u8be5\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u63a5\u53d7\u7684\u503c\u662fURL\uff0c\u800c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a5\u53d7\u7684\u503c\u662fTitle\uff0c\u4e4b\u540e\u5728\u751f\u6210\u8def\u7531\u7684\u65f6\u5019\u4f1a\u901a\u8fc7<code>doc_fn_dict</code>\u4ee5Key\u4e3aurl\uff0cvalue\u4e3a\u8def\u7531\u51fd\u6570\u7ed1\u5b9a\u5230app\u5b9e\u4f8b\u4e2d\u3002</p> <p>\u4ee5\u4e0b\u662f\u65b0\u589e\u4e00\u4e2a\u81ea\u5b9a\u4e49OpenAPI UI\u7684\u793a\u4f8b\uff1a</p> FlaskStarletteSanicTornado <pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\ndef demo(url: str, title: str = \"\") -&gt; str:\npass\nfrom pait.openapi.doc_route import default_doc_fn_dict\nfrom copy import deepcopy\ndefault_doc_fn_dict = deepcopy(default_doc_fn_dict)\ndefault_doc_fn_dict[\"demo\"] = demo\nAddDocRoute(app, doc_fn_dict=default_doc_fn_dict)\napp.run(port=8000)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\ndef demo(url: str, title: str = \"\") -&gt; str:\npass\nfrom pait.openapi.doc_route import default_doc_fn_dict\nfrom copy import deepcopy\ndefault_doc_fn_dict = deepcopy(default_doc_fn_dict)\ndefault_doc_fn_dict[\"demo\"] = demo\nAddDocRoute(app, doc_fn_dict=default_doc_fn_dict)\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\ndef demo(url: str, title: str = \"\") -&gt; str:\npass\nfrom pait.openapi.doc_route import default_doc_fn_dict\nfrom copy import deepcopy\ndefault_doc_fn_dict = deepcopy(default_doc_fn_dict)\ndefault_doc_fn_dict[\"demo\"] = demo\nAddDocRoute(app, doc_fn_dict=default_doc_fn_dict)\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\ndef demo(url: str, title: str = \"\") -&gt; str:\npass\nfrom pait.openapi.doc_route import default_doc_fn_dict\nfrom copy import deepcopy\ndefault_doc_fn_dict = deepcopy(default_doc_fn_dict)\ndefault_doc_fn_dict[\"demo\"] = demo\nAddDocRoute(app, doc_fn_dict=default_doc_fn_dict)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8be5\u793a\u4f8b\u4f1a\u5148\u521b\u5efa\u4e00\u4e2a\u7b26\u5408\u89c4\u8303\u7684<code>demo</code>\u51fd\u6570\uff0c\u7136\u540e\u65b0\u589e\u5230\u9ed8\u8ba4\u7684<code>default_doc_fn_dict</code>\u4e2d\uff0c\u6700\u540e\u518d\u901a\u8fc7<code>AddDocRoute</code>\u4e0eapp\u5b9e\u4f8b\u7ed1\u5b9a\u3002</p>"},{"location":"3_2_openapi_route/#17openapi","title":"1.7.openapi","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>AddDocRoute</code>\u4f1a\u5728<code>openapi.json</code>\u8def\u7531\u4e2d\u901a\u8fc7OpenAPI\u5bf9\u8c61\u521b\u5efa\u5de5\u5382\u5148\u521b\u5efa\u4e00\u4e2aOpenAPI\u5bf9\u8c61\uff0c\u5e76\u6839\u636eOpenAPI\u5bf9\u8c61\u751f\u6210json\u5185\u5bb9\u518d\u8fd4\u56de\u3002</p> <p>Note</p> <p><code>openapi.json</code>\u8def\u7531\u4e2d\u521b\u5efa\u7684OpenAPI\u5bf9\u8c61\u7684Title\u4f1a\u88ab<code>AddDocRoute</code>\u6307\u5b9a\u7684<code>title</code>\u53c2\u6570\u8986\u76d6\uff0c\u5e76\u5728<code>Server List</code>\u8ffd\u52a0\u5f53\u524dAPP\u5b9e\u4f8b\u7684\u5730\u5740\u3002</p> <p>\u4e0d\u8fc7<code>AddDocRoute</code>\u4e5f\u652f\u6301\u901a\u8fc7<code>openapi</code>\u53c2\u6570\u6765\u4f20\u9012\u5b9a\u4e49\u597d\u7684OpenAPI\u5bf9\u8c61\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado <pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; Response:\nreturn jsonify({\"uid\": uid, \"user_name\": username})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nfrom pait.util import partial_wrapper\nfrom pait.openapi.openapi import OpenAPI, InfoModel\nopenapi = partial_wrapper(OpenAPI, openapi_info_model=InfoModel(version=\"1.0.0\", description=\"Demo Doc\"))\nAddDocRoute(flask_app, openapi=openapi)  # type: ignore\napp.run(port=8000)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nfrom pait.util import partial_wrapper\nfrom pait.openapi.openapi import OpenAPI, InfoModel\nopenapi = partial_wrapper(OpenAPI, openapi_info_model=InfoModel(version=\"1.0.0\", description=\"Demo Doc\"))\nAddDocRoute(flask_app, openapi=openapi)  # type: ignore\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; HTTPResponse:\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nfrom pait.util import partial_wrapper\nfrom pait.openapi.openapi import OpenAPI, InfoModel\nopenapi = partial_wrapper(OpenAPI, openapi_info_model=InfoModel(version=\"1.0.0\", description=\"Demo Doc\"))\nAddDocRoute(flask_app, openapi=openapi)  # type: ignore\nuvicorn.run(app)\n</code></pre> <pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\n) -&gt; None:\nself.write({\"uid\": uid, \"username\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\nfrom pait.util import partial_wrapper\nfrom pait.openapi.openapi import OpenAPI, InfoModel\nopenapi = partial_wrapper(OpenAPI, openapi_info_model=InfoModel(version=\"1.0.0\", description=\"Demo Doc\"))\nAddDocRoute(flask_app, openapi=openapi)  # type: ignore\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4e4b\u540e\u8fd0\u884c\u4ee3\u7801\u5e76\u8bbf\u95eehttp://127.0.0.1:8000/swagger\u53ef\u4ee5\u770b\u5230\u9875\u9762\u5de6\u4e0a\u89d2\u7684\u6587\u6863\u63cf\u8ff0\u548c\u7248\u672c\u53f7\u90fd\u53d1\u751f\u4e86\u66f4\u6539\u3002</p>"},{"location":"3_2_openapi_route/#2openapi","title":"2.OpenAPI\u8def\u7531\u7684\u6a21\u677f\u53d8\u91cf","text":"<p>\u5728\u7f16\u5199API\u63a5\u53e3\u65f6\uff0c\u5927\u90e8\u5206\u63a5\u53e3\u90fd\u662f\u9700\u8981\u767b\u5f55\u7684\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5e26\u4e0aToken\u53c2\u6570\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u662f\u4ece\u6570\u636e\u5e93\u67e5\u51fa\u5bf9\u5e94\u7684Token\u518d\u7c98\u8d34\u4f1a\u975e\u5e38\u7684\u9ebb\u70e6\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u53d8\u91cf\uff0c\u8ba9<code>Pait</code>\u5e2e\u52a9\u7528\u6237\u81ea\u52a8\u586b\u5199\u53d8\u91cf\u7684\u503c\uff0c\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u4e3a\u4f8b\u5b50\uff0c\u4e3a\u5176\u4e2d\u7684uid\u5f15\u5165\u5bf9\u5e94\u7684\u6a21\u677f\u53d8\u91cf\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado docs_source_code/openapi/openapi_route/flask_demo.py<pre><code>from flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.template import TemplateVar\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nclass UserModel(BaseModel):\nuid: int = Field(description=\"user id\", gt=10, lt=1000, example=TemplateVar(\"uid\"))\nuser_name: str = Field(description=\"user name\", min_length=2, max_length=4)\n@pait()\ndef demo_post(model: UserModel = Body.i()) -&gt; Response:\nreturn jsonify({\"result\": model.dict()})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/openapi/openapi_route/starlette_demo.py<pre><code>import uvicorn\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.template import TemplateVar\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass UserModel(BaseModel):\nuid: int = Field(description=\"user id\", gt=10, lt=1000, example=TemplateVar(\"uid\"))\nuser_name: str = Field(description=\"user name\", min_length=2, max_length=4)\n@pait()\nasync def demo_post(model: UserModel = Body.i()) -&gt; JSONResponse:\nreturn JSONResponse({\"result\": model.dict()})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/openapi_route/sanic_demo.py<pre><code>import uvicorn\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.template import TemplateVar\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic import HTTPResponse, Sanic, json\nclass UserModel(BaseModel):\nuid: int = Field(description=\"user id\", gt=10, lt=1000, example=TemplateVar(\"uid\"))\nuser_name: str = Field(description=\"user name\", min_length=2, max_length=4)\n@pait()\nasync def demo_post(model: UserModel = Body.i()) -&gt; HTTPResponse:\nreturn json({\"result\": model.dict()})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/openapi_route/tornado_demo.py<pre><code>from pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.template import TemplateVar\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass UserModel(BaseModel):\nuid: int = Field(description=\"user id\", gt=10, lt=1000, example=TemplateVar(\"uid\"))\nuser_name: str = Field(description=\"user name\", min_length=2, max_length=4)\nclass DemoHandler(RequestHandler):\n@pait()\nasync def post(self, model: UserModel = Body.i()) -&gt; None:\nself.write({\"result\": model.dict()})\napp: Application = Application([(r\"/api\", DemoHandler)])\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u901a\u8fc7\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u5f15\u5165\u4e86\u4e00\u4e2a<code>TemplateVar</code>\u7c7b\uff0c\u63a5\u7740\u5728\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4e2d\uff0cuid\u7684Field\u7684example\u5c5e\u6027\u88ab\u586b\u5199<code>TemplateVar(\"uid\")</code>\uff0c\u4e4b\u540e\u5728\u8fd0\u884c\u7684\u65f6\u5019<code>Pait</code>\u5c31\u77e5\u9053\u53c2\u6570<code>uid</code>\u7684\u6a21\u677f\u53d8\u91cf\u4e3a<code>uid</code>\u3002</p> <p>\u73b0\u5728\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u8f93\u5165<code>http://127.0.0.1:8000/swagger?template-uid=123</code> \uff0c\u6253\u5f00\u540e\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u56fe: </p> <p>\u901a\u8fc7\u56fe\u53ef\u4ee5\u53d1\u73b0\u8f93\u5165\u7684123\u88ab\u8bbe\u7f6e\u5230\u5bf9\u5e94\u7684\u53c2\u6570\u4e2d\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u76840\u4e86\u3002<code>Pait</code>\u4e4b\u6240\u4ee5\u80fd\u628a\u7528\u6237\u7684\u503c\u8bbe\u7f6e\u5230\u5bf9\u5e94\u7684\u53c2\u6570\u4e2d\u662f\u56e0\u4e3a\u8fd9\u4e2aurl\u591a\u4e86\u4e00\u6bb5\u5b57\u7b26\u4e32<code>template-uid=123</code>\uff0c\u8fd9\u6837\u4e00\u6765OpenAPI\u8def\u7531\u5728\u6536\u5230\u5bf9\u5e94\u7684\u8bf7\u6c42\u65f6\u4f1a\u53d1\u73b0\u8bf7\u6c42\u643a\u5e26\u4e86\u4e00\u4e2a\u4ee5<code>template-</code>\u5f00\u5934\u7684\u53d8\u91cf\uff0c\u77e5\u9053\u8fd9\u662f\u7528\u6237\u4e3a\u6a21\u677f\u53d8\u91cf<code>uid</code>\u6307\u5b9a\u4e86\u5bf9\u5e94\u7684\u503c\uff0c\u4e8e\u662f\u5728\u751f\u6210OpenAPI\u6570\u636e\u65f6\uff0c\u4f1a\u81ea\u52a8\u5e2e\u6a21\u677f\u53d8\u91cf\u4e3auid\u7684\u53c2\u6570\u9644\u4e0a\u7528\u6237\u6307\u5b9a\u7684\u503c\u3002</p>"},{"location":"3_3_security/","title":"Security","text":"<p>OpenAPI\u901a\u8fc7<code>security</code>\u63d0\u4f9b\u4e86\u5bf9HTTP\u57fa\u672c\u8eab\u4efd\u9a8c\u8bc1\u7684\u63cf\u8ff0\uff0c\u4f46\u662f\u4e0d\u540c\u7684Web\u6846\u67b6\u5bf9HTTP\u57fa\u672c\u8eab\u4efd\u9a8c\u8bc1\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\uff0c \u56e0\u6b64<code>Pait</code>\u901a\u8fc7<code>Depends</code>\u5bf9OpenAPI\u7684security\u63d0\u4f9b\u4e86\u7b80\u5355\u652f\u6301(<code>api key</code>, <code>http</code>, <code>oauth2</code>)\uff0c\u4ece\u800c\u7b80\u5316Security\u5728\u4e0d\u540c\u7684Web\u6846\u67b6\u4f7f\u7528\u3002</p> <p>Note</p> <p>JWT\u7b49\u9ad8\u7ea7\u8eab\u4efd\u9a8c\u8bc1\u65b9\u6cd5\u5c06\u4f1a\u5728\u672a\u6765\u901a\u8fc7\u62d3\u5c55\u5305\u63d0\u4f9b\u652f\u6301\u3002</p>"},{"location":"3_3_security/#1apikey","title":"1.APIKey","text":"<p><code>API Key</code>\u662fSecurity\u4e2d\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u4e5f\u6b63\u56e0\u4e3a\u7b80\u5355\uff0c\u5b83\u7684\u4f7f\u7528\u573a\u666f\u4e5f\u662f\u6700\u591a\u7684\u3002<code>Pait</code>\u63d0\u4f9b<code>APIKey</code>\u7c7b\u6765\u652f\u6301<code>API Key</code>\u7684\u4f7f\u7528\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado docs_source_code/openapi/security/flask_with_apikey_demo.py<pre><code>from flask import Flask\nfrom pait.app.flask import pait\nfrom pait.app.flask.security import api_key\nfrom pait.field import Cookie, Depends, Header, Query\nfrom pait.openapi.doc_route import AddDocRoute\ntoken_cookie_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Cookie(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-cookie-api-key\",\n)\ntoken_header_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Header(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-header-api-key\",\n)\ntoken_query_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Query(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-query-api-key\",\n)\n@pait()\ndef api_key_cookie_route(token: str = Depends.i(token_cookie_api_key)) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": token}\n@pait()\ndef api_key_header_route(token: str = Depends.i(token_header_api_key)) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": token}\n@pait()\ndef api_key_query_route(token: str = Depends.i(token_query_api_key)) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": token}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/api-cookie-key\", view_func=api_key_cookie_route, methods=[\"GET\"])\napp.add_url_rule(\"/api/api-header-key\", view_func=api_key_header_route, methods=[\"GET\"])\napp.add_url_rule(\"/api/api-query-key\", view_func=api_key_query_route, methods=[\"GET\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/openapi/security/starlette_with_apikey_demo.py<pre><code>import uvicorn\nfrom pait.app.starlette import pait\nfrom pait.app.starlette.security import api_key\nfrom pait.field import Cookie, Depends, Header, Query\nfrom pait.openapi.doc_route import AddDocRoute\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\ntoken_cookie_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Cookie(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-cookie-api-key\",\n)\ntoken_header_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Header(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-header-api-key\",\n)\ntoken_query_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Query(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-query-api-key\",\n)\n@pait()\nasync def api_key_cookie_route(token: str = Depends.i(token_cookie_api_key)) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": token})\n@pait()\nasync def api_key_header_route(token: str = Depends.i(token_header_api_key)) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": token})\n@pait()\nasync def api_key_query_route(token: str = Depends.i(token_query_api_key)) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": token})\napp = Starlette(\nroutes=[\nRoute(\"/api/api-cookie-key\", api_key_cookie_route, methods=[\"GET\"]),\nRoute(\"/api/api-header-key\", api_key_header_route, methods=[\"GET\"]),\nRoute(\"/api/api-query-key\", api_key_query_route, methods=[\"GET\"]),\n]\n)\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/security/sanic_with_apikey_demo.py<pre><code>import uvicorn\nfrom pait.app.sanic import pait\nfrom pait.app.sanic.security import api_key\nfrom pait.field import Cookie, Depends, Header, Query\nfrom pait.openapi.doc_route import AddDocRoute\nfrom sanic import HTTPResponse, Sanic, json\ntoken_cookie_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Cookie(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-cookie-api-key\",\n)\ntoken_header_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Header(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-header-api-key\",\n)\ntoken_query_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Query(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-query-api-key\",\n)\n@pait()\nasync def api_key_cookie_route(token: str = Depends.i(token_cookie_api_key)) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": token})\n@pait()\nasync def api_key_header_route(token: str = Depends.i(token_header_api_key)) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": token})\n@pait()\nasync def api_key_query_route(token: str = Depends.i(token_query_api_key)) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": token})\napp = Sanic(name=\"demo\")\napp.add_route(api_key_cookie_route, \"/api/api-cookie-key\", methods=[\"GET\"])\napp.add_route(api_key_header_route, \"/api/api-header-key\", methods=[\"GET\"])\napp.add_route(api_key_query_route, \"/api/api-query-key\", methods=[\"GET\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/security/tornado_with_apikey_demo.py<pre><code>from pait.app.tornado import pait\nfrom pait.app.tornado.security import api_key\nfrom pait.field import Cookie, Depends, Header, Query\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\ntoken_cookie_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Cookie(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-cookie-api-key\",\n)\ntoken_header_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Header(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-header-api-key\",\n)\ntoken_query_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Query(openapi_include=False),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-query-api-key\",\n)\nclass APIKeyCookieHandler(RequestHandler):\n@pait()\nasync def get(self, token: str = Depends.i(token_cookie_api_key)) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": token})\nclass APIKeyHeaderHandler(RequestHandler):\n@pait()\nasync def get(self, token: str = Depends.i(token_header_api_key)) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": token})\nclass APIKeyQueryHandler(RequestHandler):\n@pait()\nasync def get(self, token: str = Depends.i(token_query_api_key)) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": token})\napp: Application = Application(\n[\n(r\"/api/security/api-cookie-key\", APIKeyCookieHandler),\n(r\"/api/security/api-header-key\", APIKeyHeaderHandler),\n(r\"/api/security/api-query-key\", APIKeyQueryHandler),\n],\n)\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4ee3\u7801\u4e2d\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u662f\u9488\u5bf9\u4e0d\u540c\u7684<code>APIKey</code>\u5b57\u6bb5\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5b83\u4eec\u4f7f\u7528\u7684\u53c2\u6570\u7565\u6709\u4e0d\u540c\uff0c\u5177\u4f53\u7684\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a</p> \u53c2\u6570 \u63cf\u8ff0 name <code>APIKey</code>\u5b57\u6bb5\u7684\u540d\u5b57 field <code>APIKey</code>\u5b57\u6bb5\u5bf9\u5e94<code>Pait</code>\u4e2d\u7684Field\u7c7b\uff0c<code>API Key</code>\u53ea\u652f\u6301Query\uff0cHeader\u548cCookie\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u53ea\u5141\u8bb8\u4f7f\u7528<code>field.Query</code>\uff0c<code>field.Header</code>\uff0c<code>field.Cookie</code> verify_api_key_callable \u63a5\u53d7\u4e00\u4e2a\u6821\u9a8c<code>APIKey</code>\u7684\u51fd\u6570\uff0c<code>Pait</code>\u4ece\u8bf7\u6c42\u4f53\u4e2d\u63d0\u53d6<code>APIKey</code>\u503c\u540e\u4f1a\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u4ea4\u7531\u51fd\u6570\u5904\u7406\uff0c\u5982\u679c\u51fd\u6570\u8fd4\u56de<code>True</code>\u5219\u4ee3\u8868\u6821\u9a8c\u901a\u8fc7\uff0c\u53cd\u4e4b\u5219\u6821\u9a8c\u4e0d\u901a\u8fc7\u3002 security_name \u6307\u5b9aSecurity\u7684\u540d\u79f0\uff0c\u4e0d\u540c\u4f5c\u7528\u7684<code>APIKey</code>\u7684\u540d\u79f0\u5fc5\u987b\u662f\u4e0d\u540c\u7684\uff0c\u9ed8\u8ba4\u503c\u4e3aAPIKey\u7684\u7c7b\u540d\u3002 <p>Note</p> <p>\u4e3a\u4e86\u80fd\u5728OpenAPI\u5de5\u5177\u4e2d\u6b63\u5e38\u4f7f\u7528APIKey\uff0c\u4f20\u9012\u7684<code>Field</code>\u5728\u521d\u59cb\u5316\u65f6\u5fc5\u987b\u6307\u5b9a<code>openapi_include</code>\u4e3aFalse\u3002</p> <p>\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u7684\u4ee3\u7801\u5219\u662f\u901a\u8fc7<code>Depend</code>\u8fde\u63a5\u4e86APIKey\u548c\u8def\u7531\u51fd\u6570\uff0c\u5176\u4e2d<code>Depend</code>\u7684\u53c2\u6570\u4e3a<code>APIKey</code>\u7684\u5b9e\u4f8b\u3002</p> <p>\u5f53\u8def\u7531\u51fd\u6570\u6536\u5230\u8bf7\u6c42\u65f6<code>Pait</code>\u4f1a\u81ea\u52a8\u4ece\u8bf7\u6c42\u4f53\u4e2d\u63d0\u53d6<code>APIKey</code>\u7684\u503c\uff0c\u7136\u540e\u4ea4\u7531<code>APIKey</code>\u7684<code>verify_api_key_callable</code>\u51fd\u6570\u8fdb\u884c\u6821\u9a8c\uff0c\u5982\u679c\u6821\u9a8c\u901a\u8fc7\u5219\u628a\u503c\u901a\u8fc7<code>Depend</code>\u4f20\u9012\u7ed9\u8def\u7531\u51fd\u6570\u6267\u884c\uff0c\u53cd\u4e4b\u5219\u8fd4\u56de<code>401</code>\u3002</p> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230<code>APIKey</code>\u7684\u6267\u884c\u6548\u679c\uff1a <pre><code># Success Result\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/api-cookie-key' \\\n-H 'accept: */*' \\\n-H 'Cookie: token=token'\n{\"code\":0,\"msg\":\"\",\"data\":\"token\"}\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/api-header-key' \\\n-H 'accept: */*' \\\n-H 'token: token'\n{\"code\":0,\"msg\":\"\",\"data\":\"token\"}\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/api-query-key?token=token' \\\n-H 'accept: */*'\n{\"code\":0,\"msg\":\"\",\"data\":\"token\"}\n# Fail Result\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/api-cookie-key' \\\n-H 'accept: */*' \\\n-H 'Cookie: token='\nNot authenticated\n\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/api-header-key' \\\n-H 'accept: */*' \\\n-H 'token: '\nNot authenticated\n\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/api-query-key?token=' \\\n-H 'accept: */*'\nNot authenticated\n</code></pre></p>"},{"location":"3_3_security/#11apikeylinks","title":"1.1.APIKey\u4e0eLinks\u7684\u7ed3\u5408","text":"<p>\u5927\u90e8\u5206\u4f7f\u7528APIKey\u7684\u63a5\u53e3\u6240\u9700\u8981\u7684\u53c2\u6570(\u5982Token)\u90fd\u662f\u901a\u8fc7\u5176\u4ed6\u63a5\u53e3\u83b7\u53d6\u7684\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528<code>Field</code>\u4e2d\u7684<code>Links</code>\u6765\u63cf\u8ff0\u8be5\u63a5\u53e3\u4e0e\u5176\u4ed6\u63a5\u53e3\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u8fd9\u4e2a\u573a\u666f\uff0c\u5b83\u7684Token\u662f\u901a\u8fc7\u767b\u9646\u63a5\u53e3\u4e2d\u83b7\u53d6\u7684\uff1a</p> FlaskStarletteSanicTornado docs_source_code/openapi/security/flask_with_apikey_and_link_demo.py<pre><code>import hashlib\nfrom typing import Type\nfrom flask import Flask\nfrom pait.app.flask import pait\nfrom pait.app.flask.security import api_key\nfrom pait.field import Body, Depends, Query\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.openapi.openapi import LinksModel\nfrom pydantic import BaseModel, Field\nclass LoginRespModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nclass DataModel(BaseModel):\ntoken: str\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"login response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[LoginRespModel])\ndef login_route(uid: str = Body.i(description=\"user id\"), password: str = Body.i(description=\"password\")) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": {\"token\": hashlib.sha256((uid + password).encode(\"utf-8\")).hexdigest()}}\nlink_login_token_model: LinksModel = LinksModel(LoginRespModel, \"$response.body#/data/token\", desc=\"test links model\")\ntoken_query_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Query(links=link_login_token_model),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-query-api-key\",\n)\n@pait()\ndef api_key_query_route(token: str = Depends.i(token_query_api_key)) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": token}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/login\", \"login\", login_route, methods=[\"POST\"])\napp.add_url_rule(\"/api/api-query-key\", view_func=api_key_query_route, methods=[\"GET\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/openapi/security/starlette_with_apikey_and_link_demo.py<pre><code>import hashlib\nfrom typing import Type\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.app.starlette.security import api_key\nfrom pait.field import Body, Depends, Query\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.openapi.openapi import LinksModel\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass LoginRespModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nclass DataModel(BaseModel):\ntoken: str\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"login response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[LoginRespModel])\nasync def login_route(\nuid: str = Body.i(description=\"user id\"), password: str = Body.i(description=\"password\")\n) -&gt; JSONResponse:\nreturn JSONResponse(\n{\"code\": 0, \"msg\": \"\", \"data\": {\"token\": hashlib.sha256((uid + password).encode(\"utf-8\")).hexdigest()}}\n)\nlink_login_token_model: LinksModel = LinksModel(LoginRespModel, \"$response.body#/data/token\", desc=\"test links model\")\ntoken_query_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Query(links=link_login_token_model),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-query-api-key\",\n)\n@pait()\nasync def api_key_query_route(token: str = Depends.i(token_query_api_key)) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": token})\napp = Starlette(\nroutes=[\nRoute(\"/api/login\", login_route, methods=[\"POST\"]),\nRoute(\"/api/api-query-key\", api_key_query_route, methods=[\"GET\"]),\n]\n)\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/security/sanic_with_apikey_and_link_demo.py<pre><code>import hashlib\nfrom typing import Type\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.app.sanic.security import api_key\nfrom pait.field import Body, Depends, Query\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.openapi.openapi import LinksModel\nfrom pydantic import BaseModel, Field\nfrom sanic import HTTPResponse, Sanic, json\nclass LoginRespModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nclass DataModel(BaseModel):\ntoken: str\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"login response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[LoginRespModel])\nasync def login_route(\nuid: str = Body.i(description=\"user id\"), password: str = Body.i(description=\"password\")\n) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": {\"token\": hashlib.sha256((uid + password).encode(\"utf-8\")).hexdigest()}})\nlink_login_token_model: LinksModel = LinksModel(LoginRespModel, \"$response.body#/data/token\", desc=\"test links model\")\ntoken_query_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Query(links=link_login_token_model),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-query-api-key\",\n)\n@pait()\nasync def api_key_query_route(token: str = Depends.i(token_query_api_key)) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": token})\napp = Sanic(name=\"demo\")\napp.add_route(login_route, \"/api/login\", methods=[\"POST\"])\napp.add_route(api_key_query_route, \"/api/api-query-key\", methods=[\"GET\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/security/tornado_with_apikey_and_link_demo.py<pre><code>import hashlib\nfrom typing import Type\nfrom pait.app.tornado import pait\nfrom pait.app.tornado.security import api_key\nfrom pait.field import Body, Depends, Query\nfrom pait.model.response import JsonResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pait.openapi.openapi import LinksModel\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass LoginRespModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nclass DataModel(BaseModel):\ntoken: str\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"login response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass LoginHandler(RequestHandler):\n@pait(response_model_list=[LoginRespModel])\nasync def post(\nself, uid: str = Body.i(description=\"user id\"), password: str = Body.i(description=\"password\")\n) -&gt; None:\nself.write(\n{\"code\": 0, \"msg\": \"\", \"data\": {\"token\": hashlib.sha256((uid + password).encode(\"utf-8\")).hexdigest()}}\n)\nlink_login_token_model: LinksModel = LinksModel(LoginRespModel, \"$response.body#/data/token\", desc=\"test links model\")\ntoken_query_api_key: api_key.APIKey = api_key.APIKey(\nname=\"token\",\nfield=Query(links=link_login_token_model),\nverify_api_key_callable=lambda x: \"token\" in x,\nsecurity_name=\"token-query-api-key\",\n)\nclass APIKeyQueryHandler(RequestHandler):\n@pait()\nasync def get(self, token: str = Depends.i(token_query_api_key)) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": token})\napp: Application = Application(\n[\n(r\"/api/login\", LoginHandler),\n(r\"/api/security/api-query-key\", APIKeyQueryHandler),\n],\n)\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u6765\u81ea\u4e8eField-Links\uff0c\u800c\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u4ee3\u7801\u4e2d\u7684<code>Query</code>\u8bbe\u7f6e\u4e86<code>links</code>\u5c5e\u6027\u4e3a<code>link_login_token_model</code>\uff0c\u8fd9\u6837\u4e00\u6765<code>Pait</code>\u751f\u6210OpenAPI\u65f6\u4f1a\u628a<code>login_route</code>\u4e0e<code>api_key_query_route</code>\u901a\u8fc7Link\u7ed1\u5b9a\u5728\u4e00\u8d77\u3002</p> <p>Note</p> <ul> <li>Links\u7684\u4f7f\u7528\u65b9\u6cd5\u8be6\u89c1Field-Links</li> <li>\u4f7f\u7528<code>openapi_include=False</code>\u4f1a\u5bfc\u81f4<code>Swggaer</code>\u65e0\u6cd5\u5c55\u793aLink\u7684\u6570\u636e</li> </ul>"},{"location":"3_3_security/#2http","title":"2.HTTP","text":"<p>HTTP\u57fa\u672c\u8eab\u4efd\u6821\u9a8c\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f<code>HTTPBasic</code>\uff0c\u53e6\u4e00\u79cd\u662f<code>HTTPBearer</code>\u6216<code>HTTPDIgest</code>\uff0c \u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e<code>HTTPBasic</code>\u9700\u8981\u5728\u8bf7\u6c42\u5934\u4e2d\u4f20\u9012<code>username</code>\u548c<code>password</code>\u8fdb\u884c\u6821\u9a8c\uff0c\u5982\u679c\u6821\u9a8c\u6210\u529f\u5219\u4ee3\u8868\u9a8c\u8bc1\u6210\u529f\uff0c \u5982\u679c\u6821\u9a8c\u9519\u8bef\u4f1a\u8fd4\u56de<code>401</code>\u54cd\u5e94\uff0c\u6d4f\u89c8\u5668\u5728\u6536\u5230<code>401</code>\u54cd\u5e94\u540e\u4f1a\u5f39\u51fa\u4e00\u4e2a\u7a97\u53e3\u8ba9\u7528\u6237\u8f93\u5165<code>username</code>\u548c<code>password</code>\uff0c \u800c<code>HTTPBearer</code>\u6216<code>HTTPDIgest</code>\u5219\u53ea\u9700\u8981\u5728\u8bf7\u6c42\u5934\u4e2d\u6309\u8981\u6c42\u4f20\u9012<code>token</code>\u3002</p> <p><code>Pait</code>\u4e3aHTTP\u57fa\u672c\u6821\u9a8c\u7684\u4e09\u4e2a\u65b9\u5f0f\u5206\u522b\u5c01\u88c5\u4e86<code>HTTPBasic</code>\uff0c<code>HTTPBearer</code>\u548c<code>HTTPDigest</code>\u4e09\u4e2a\u7c7b\uff0c \u540c\u6837\u7684\uff0c\u5b83\u4eec\u4e5f\u9700\u8981\u901a\u8fc7<code>Depend</code>\u4e0e\u8def\u7531\u51fd\u6570\u7ed1\u5b9a\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado docs_source_code/openapi/security/flask_with_http_demo.py<pre><code>from typing import Optional\nfrom flask import Flask\nfrom pait.app.flask import pait\nfrom pait.app.flask.security import http\nfrom pait.field import Depends\nfrom pait.openapi.doc_route import AddDocRoute\n##############\n# HTTP Basic #\n##############\nhttp_basic: http.HTTPBasic = http.HTTPBasic()\ndef get_user_name(credentials: Optional[http.HTTPBasicCredentials] = Depends.i(http_basic)) -&gt; str:\nif not credentials or credentials.username != credentials.password:\nraise http_basic.not_authorization_exc\nreturn credentials.username\n@pait()\ndef get_user_name_by_http_basic_credentials(user_name: str = Depends.t(get_user_name)) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": user_name}\n#############\n# HTTP Bear #\n#############\nhttp_bear: http.HTTPBearer = http.HTTPBearer(verify_callable=lambda x: \"http\" in x)\n@pait()\ndef get_user_name_by_http_bearer(credentials: Optional[str] = Depends.i(http_bear)) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": credentials}\n###############\n# HTTP Digest #\n###############\nhttp_digest: http.HTTPDigest = http.HTTPDigest(verify_callable=lambda x: \"http\" in x)\n@pait()\ndef get_user_name_by_http_digest(credentials: Optional[str] = Depends.i(http_digest)) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": credentials}\napp = Flask(\"demo\")\napp.add_url_rule(\n\"/api/user-name-by-http-basic-credentials\",\nview_func=get_user_name_by_http_basic_credentials,\nmethods=[\"GET\"],\n)\napp.add_url_rule(\"/api/user-name-by-http-bearer\", view_func=get_user_name_by_http_bearer, methods=[\"GET\"])\napp.add_url_rule(\"/api/user-name-by-http-digest\", view_func=get_user_name_by_http_digest, methods=[\"GET\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/openapi/security/starlette_with_http_demo.py<pre><code>from typing import Optional\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.app.starlette.security import http\nfrom pait.field import Depends\nfrom pait.openapi.doc_route import AddDocRoute\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\n##############\n# HTTP Basic #\n##############\nhttp_basic: http.HTTPBasic = http.HTTPBasic()\ndef get_user_name(credentials: Optional[http.HTTPBasicCredentials] = Depends.t(http_basic)) -&gt; str:\nif not credentials or credentials.username != credentials.password:\nraise http_basic.not_authorization_exc\nreturn credentials.username\n@pait()\nasync def get_user_name_by_http_basic_credentials(user_name: str = Depends.t(get_user_name)) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": user_name})\n#############\n# HTTP Bear #\n#############\nhttp_bear: http.HTTPBearer = http.HTTPBearer(verify_callable=lambda x: \"http\" in x)\n@pait()\nasync def get_user_name_by_http_bearer(credentials: Optional[str] = Depends.t(http_bear)) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": credentials})\n###############\n# HTTP Digest #\n###############\nhttp_digest: http.HTTPDigest = http.HTTPDigest(verify_callable=lambda x: \"http\" in x)\n@pait()\nasync def get_user_name_by_http_digest(credentials: Optional[str] = Depends.t(http_digest)) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": credentials})\napp = Starlette(\nroutes=[\nRoute(\"/api/user-name-by-http-basic-credentials\", get_user_name_by_http_basic_credentials, methods=[\"GET\"]),\nRoute(\"/api/user-name-by-http-bearer\", get_user_name_by_http_bearer, methods=[\"GET\"]),\nRoute(\"/api/user-name-by-http-digest\", get_user_name_by_http_digest, methods=[\"GET\"]),\n]\n)\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/security/sanic_with_http_demo.py<pre><code>from typing import Optional\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.app.sanic.security import http\nfrom pait.field import Depends\nfrom pait.openapi.doc_route import AddDocRoute\nfrom sanic import Sanic, response\n##############\n# HTTP Basic #\n##############\nhttp_basic: http.HTTPBasic = http.HTTPBasic()\ndef get_user_name(credentials: Optional[http.HTTPBasicCredentials] = Depends.t(http_basic)) -&gt; str:\nif not credentials or credentials.username != credentials.password:\nraise http_basic.not_authorization_exc\nreturn credentials.username\n@pait()\nasync def get_user_name_by_http_basic_credentials(user_name: str = Depends.t(get_user_name)) -&gt; response.HTTPResponse:\nreturn response.json({\"code\": 0, \"msg\": \"\", \"data\": user_name})\n#############\n# HTTP Bear #\n#############\nhttp_bear: http.HTTPBearer = http.HTTPBearer(verify_callable=lambda x: \"http\" in x)\n@pait()\nasync def get_user_name_by_http_bearer(credentials: Optional[str] = Depends.t(http_bear)) -&gt; response.HTTPResponse:\nreturn response.json({\"code\": 0, \"msg\": \"\", \"data\": credentials})\n###############\n# HTTP Digest #\n###############\nhttp_digest: http.HTTPDigest = http.HTTPDigest(verify_callable=lambda x: \"http\" in x)\n@pait()\nasync def get_user_name_by_http_digest(credentials: Optional[str] = Depends.t(http_digest)) -&gt; response.HTTPResponse:\nreturn response.json({\"code\": 0, \"msg\": \"\", \"data\": credentials})\napp = Sanic(name=\"demo\")\napp.add_route(get_user_name_by_http_basic_credentials, \"/api/user-name-by-http-basic-credentials\", methods={\"GET\"})\napp.add_route(get_user_name_by_http_bearer, \"/api/user-name-by-http-bearer\", methods={\"GET\"})\napp.add_route(get_user_name_by_http_digest, \"/api/user-name-by-http-digest\", methods={\"GET\"})\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/security/tornado_with_http_demo.py<pre><code>from typing import Optional\nfrom pait.app.tornado import pait\nfrom pait.app.tornado.security import http\nfrom pait.field import Depends\nfrom pait.openapi.doc_route import AddDocRoute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nhttp_basic: http.HTTPBasic = http.HTTPBasic()\ndef get_user_name(credentials: Optional[http.HTTPBasicCredentials] = Depends.t(http_basic)) -&gt; str:\nif not credentials or credentials.username != credentials.password:\nraise http_basic.not_authorization_exc\nreturn credentials.username\nclass UserNameByHttpBasicCredentialsHandler(RequestHandler):\n@pait()\nasync def get(self, user_name: str = Depends.t(get_user_name)) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": user_name})\n#############\n# HTTP Bear #\n#############\nhttp_bear: http.HTTPBearer = http.HTTPBearer(verify_callable=lambda x: \"http\" in x)\nclass UserNameByHttpBearerHandler(RequestHandler):\n@pait()\nasync def get(self, credentials: Optional[str] = Depends.t(http_bear)) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": credentials})\n###############\n# HTTP Digest #\n###############\nhttp_digest: http.HTTPDigest = http.HTTPDigest(verify_callable=lambda x: \"http\" in x)\nclass UserNameByHttpDigestHandler(RequestHandler):\n@pait()\nasync def get(self, credentials: Optional[str] = Depends.t(http_digest)) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": credentials})\napp: Application = Application(\n[\n(r\"/api/security/user-name-by-http-basic-credentials\", UserNameByHttpBasicCredentialsHandler),\n(r\"/api/security/user-name-by-http-bearer\", UserNameByHttpBearerHandler),\n(r\"/api/security/user-name-by-http-digest\", UserNameByHttpDigestHandler),\n],\n)\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4ee3\u7801\u5206\u6210\u4e09\u90e8\u5206\uff0c\u5b83\u4eec\u90fd\u662f\u5148\u521d\u59cb\u5316\u5bf9\u5e94\u7684\u57fa\u672c\u8eab\u4efd\u9a8c\u8bc1\u7c7b\uff0c\u7136\u540e\u901a\u8fc7<code>Depend</code>\u4e0e\u8def\u7531\u51fd\u6570\u7ed1\u5b9a\uff0c\u6700\u540e\u5728\u8def\u7531\u51fd\u6570\u4e2d\u4f7f\u7528<code>Depend</code>\u83b7\u53d6\u8eab\u4efd\u9a8c\u8bc1\u7c7b\u7684\u5b9e\u4f8b\u3002</p> <p>\u4e0d\u8fc7<code>HTTPBasic</code>\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e\u5176\u4ed6\u4e24\u4e2a\u7565\u6709\u4e0d\u540c\uff0c\u9996\u5148<code>HTTPBasic</code>\u7684\u521d\u59cb\u5316\u53c2\u6570\u5c31\u7565\u6709\u4e0d\u540c\uff0c\u5982\u4e0b:</p> \u53c2\u6570 \u63cf\u8ff0 security_model \u5173\u4e8eHTTPBasic\u7684OpenAPI\u63cf\u8ff0Model\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u7684HTTPBasicModel\uff0c\u5982\u6709\u5b9a\u5236\u9700\u6c42\u8bf7\u8bbf\u95eeOpenAPI\u7684securitySchemeObject\u4e86\u89e3 security_name \u6307\u5b9aSecurity\u7684\u540d\u79f0\uff0c\u4e0d\u540c\u4f5c\u7528\u7684\u57fa\u672c\u8eab\u4efd\u6821\u9a8c\u5b9e\u4f8b\u7684\u540d\u79f0\u5fc5\u987b\u662f\u4e0d\u540c\u7684\uff0c\u9ed8\u8ba4\u503c\u4e3aA\u7c7b\u540d\u3002 header_field <code>Pait</code>\u7684Header Field\u5b9e\u4f8b realm HTTP\u57fa\u672c\u8eab\u4efd\u6821\u9a8c\u7684realm\u53c2\u6570 <p>\u5176\u6b21\uff0c\u5b83\u4e0d\u4f1a\u76f4\u63a5\u7528\u4e8e\u8def\u7531\u51fd\u6570\u4e2d\uff0c\u800c\u662f\u5b58\u5728\u4e8e<code>get_user_name</code>\u51fd\u6570\u4e2d\uff0c<code>get_user_name</code>\u51fd\u6570\u8d1f\u8d23\u8fdb\u884c\u8eab\u4efd\u6821\u9a8c\uff0c\u5982\u679c\u8eab\u4efd\u6821\u9a8c\u6210\u529f\u5219\u8fd4\u56de\u7528\u6237\u540d\u5230\u8def\u7531\u51fd\u6570\u4e2d\uff0c\u5426\u5219\u8fd4\u56de<code>401</code>\u54cd\u5e94\u3002</p> <p>\u800c<code>HTTPBearer</code>\u548c<code>HTTPDigest</code>\u4f7f\u7528\u65b9\u6cd5\u4e0e<code>APIKey</code>\u7c7b\u4f3c\uff0c\u9700\u8981\u6309\u8981\u6c42\u521d\u59cb\u5316\uff0c\u5e76\u901a\u8fc7<code>Depend</code>\u4e0e\u8def\u7531\u51fd\u6570\u7ed1\u5b9a\u5373\u53ef\uff0c\u5b83\u4eec\u7684\u53c2\u6570\u8bf4\u660e\u5982\u4e0b:</p> \u53c2\u6570 \u63cf\u8ff0 security_model \u5173\u4e8e\u57fa\u672c\u8eab\u4efd\u6821\u9a8c\u7684OpenAPI\u63cf\u8ff0Model\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u7684HTTPBasicModel\uff0c\u5982\u6709\u5b9a\u5236\u9700\u6c42\u8bf7\u8bbf\u95eeOpenAPI\u7684securitySchemeObject\u4e86\u89e3 security_name \u6307\u5b9aSecurity\u7684\u540d\u79f0\uff0c\u4e0d\u540c\u4f5c\u7528\u7684\u57fa\u672c\u8eab\u4efd\u6821\u9a8c\u5b9e\u4f8b\u7684\u540d\u79f0\u5fc5\u987b\u662f\u4e0d\u540c\u7684\uff0c\u9ed8\u8ba4\u503c\u4e3aA\u7c7b\u540d\u3002 header_field <code>Pait</code>\u7684Header Field\u5b9e\u4f8b is_raise \u5f53\u8bbe\u7f6e\u4e3a<code>True</code>\u65f6\uff0c<code>Pait</code>\u5728\u89e3\u6790\u5931\u8d25\u540e\u629b\u51fa\u6807\u51c6\u7684\u9519\u8bef\uff0c\u4e3a<code>False</code>\u65f6\u5728\u89e3\u6790\u5931\u8d25\u540e\u6094\u8fd4\u56de<code>None</code>\uff0c \u9ed8\u8ba4\u503c\u4e3a<code>True</code> verify_callable \u63a5\u53d7\u4e00\u4e2a\u6821\u9a8c\u51fd\u6570\uff0c<code>Pait</code>\u4ece\u8bf7\u6c42\u4f53\u4e2d\u63d0\u53d6\u503c\u540e\u4f1a\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u4ea4\u7531\u51fd\u6570\u5904\u7406\uff0c\u5982\u679c\u51fd\u6570\u8fd4\u56de<code>True</code>\u5219\u4ee3\u8868\u6821\u9a8c\u901a\u8fc7\uff0c\u53cd\u4e4b\u5219\u6821\u9a8c\u4e0d\u901a\u8fc7\u3002 <p>\u5728\u8fd0\u884c\u4ee3\u7801\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u7684\u6267\u884c\u6548\u679c\u5982\u4e0b\uff1a <pre><code># Success Result\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/user-name-by-http-basic-credentials' \\\n-H 'accept: */*' \\\n-H 'Authorization: Basic c28xbjpzbzFu'\n{\"code\":0,\"data\":\"so1n\",\"msg\":\"\"}\n\u279c   curl -X 'GET' \\\n'http://127.0.0.1:8000/api/user-name-by-http-bearer' \\\n-H 'accept: */*' \\\n-H 'Authorization: Bearer http'\n{\"code\":0,\"data\":\"http\",\"msg\":\"\"}\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/user-name-by-http-digest' \\\n-H 'accept: */*' \\\n-H 'Authorization: Digest http'\n{\"code\":0,\"data\":\"http\",\"msg\":\"\"}\n# Fail Result\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/user-name-by-http-digest' \\\n-H 'accept: */*' \\\n-H 'Authorization: Digest '\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;\n&lt;title&gt;403 Forbidden&lt;/title&gt;\n&lt;h1&gt;Forbidden&lt;/h1&gt;\n&lt;p&gt;Not authenticated&lt;/p&gt;\n\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/user-name-by-http-bearer' \\\n-H 'accept: */*' \\\n-H 'Authorization: Bearer '\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;\n&lt;title&gt;403 Forbidden&lt;/title&gt;\n&lt;h1&gt;Forbidden&lt;/h1&gt;\n&lt;p&gt;Not authenticated&lt;/p&gt;\n</code></pre></p> <p>Note</p> <p><code>HTTPDigest</code>\u7c7b\u53ea\u63d0\u4f9b\u7b80\u5355\u7684<code>HTTODigest</code>\u8eab\u4efd\u6821\u9a8c\u652f\u6301\uff0c\u5728\u4f7f\u7528\u65f6\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u8fdb\u884c\u4fee\u6539\u3002</p>"},{"location":"3_3_security/#3oauth2","title":"3.Oauth2","text":"<p>OAuth 2.0\u662f\u4e00\u79cd\u6388\u6743\u534f\u8bae\uff0c\u4e3a API \u5ba2\u6237\u7aef\u63d0\u4f9b\u5bf9 Web \u670d\u52a1\u5668\u4e0a\u7684\u7528\u6237\u6570\u636e\u7684\u6709\u9650\u8bbf\u95ee\u6743\u9650\uff0c\u5b83\u9664\u4e86\u63d0\u4f9b\u8eab\u4efd\u6821\u9a8c\u7684\u529f\u80fd\u5916\uff0c\u8fd8\u652f\u6301\u6743\u9650\u6821\u9a8c\u3002 <code>Pait</code>\u7684<code>Oauth2</code>\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado docs_source_code/openapi/security/flask_with_oauth2_demo.py<pre><code>import random\nimport string\nfrom typing import TYPE_CHECKING, Callable, Dict, List, Optional\nfrom flask import Flask\nfrom pait.app.flask import pait\nfrom pait.app.flask.security import oauth2\nfrom pait.field import Depends\nfrom pait.model import Http400RespModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom werkzeug.exceptions import BadRequest\nif TYPE_CHECKING:\nfrom pait.app.base.security.oauth2 import BaseOAuth2PasswordBearerProxy\nclass User(BaseModel):\nuid: str = Field(..., description=\"user id\")\nname: str = Field(..., description=\"user name\")\nage: int = Field(..., description=\"user age\")\nsex: str = Field(..., description=\"user sex\")\nscopes: List[str] = Field(..., description=\"user scopes\")\ntemp_token_dict: Dict[str, User] = {}\n@pait(\nresponse_model_list=[Http400RespModel, oauth2.OAuth2PasswordBearerJsonRespModel],\n)\ndef oauth2_login(form_data: oauth2.OAuth2PasswordRequestFrom) -&gt; dict:\nif form_data.username != form_data.password:\nraise BadRequest()\ntoken: str = \"\".join(random.choice(string.ascii_letters + string.digits) for _ in range(10))\ntemp_token_dict[token] = User(uid=\"123\", name=form_data.username, age=23, sex=\"M\", scopes=form_data.scope)\nreturn oauth2.OAuth2PasswordBearerJsonRespModel.response_data(access_token=token).dict()\noauth2_pb: oauth2.OAuth2PasswordBearer = oauth2.OAuth2PasswordBearer(\nroute=oauth2_login,\nscopes={\n\"user-info\": \"get all user info\",\n\"user-name\": \"only get user name\",\n},\n)\ndef get_current_user(_oauth2_pb: \"BaseOAuth2PasswordBearerProxy\") -&gt; Callable[[str], User]:\ndef _check_scope(token: str = Depends.i(_oauth2_pb)) -&gt; User:\nuser_model: Optional[User] = temp_token_dict.get(token, None)\nif not user_model:\nraise _oauth2_pb.security.not_authenticated_exc\nif not _oauth2_pb.is_allow(user_model.scopes):\nraise _oauth2_pb.security.not_authenticated_exc\nreturn user_model\nreturn _check_scope\n@pait()\ndef oauth2_user_name(user_model: User = Depends.t(get_current_user(oauth2_pb.get_depend([\"user-name\"])))) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": user_model.name}\n@pait()\ndef oauth2_user_info(user_model: User = Depends.t(get_current_user(oauth2_pb.get_depend([\"user-info\"])))) -&gt; dict:\nreturn {\"code\": 0, \"msg\": \"\", \"data\": user_model.dict()}\napp = Flask(\"demo\")\napp.add_url_rule(\"/api/oauth2-login\", view_func=oauth2_login, methods=[\"POST\"])\napp.add_url_rule(\"/api/oauth2-user-name\", view_func=oauth2_user_name, methods=[\"GET\"])\napp.add_url_rule(\"/api/oauth2-user-info\", view_func=oauth2_user_info, methods=[\"GET\"])\nAddDocRoute(app)\napp.run(port=8000)\n</code></pre> docs_source_code/openapi/security/starlette_with_oauth2_demo.py<pre><code>import random\nimport string\nfrom typing import TYPE_CHECKING, Callable, Dict, List, Optional\nimport uvicorn\nfrom pait.app.starlette import pait\nfrom pait.app.starlette.security import oauth2\nfrom pait.field import Depends\nfrom pait.model import Http400RespModel\nfrom pait.model.response import TextResponseModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.exceptions import HTTPException\nfrom starlette.responses import JSONResponse\nif TYPE_CHECKING:\nfrom pait.app.base.security.oauth2 import BaseOAuth2PasswordBearerProxy\nclass User(BaseModel):\nuid: str = Field(..., description=\"user id\")\nname: str = Field(..., description=\"user name\")\nage: int = Field(..., description=\"user age\")\nsex: str = Field(..., description=\"user sex\")\nscopes: List[str] = Field(..., description=\"user scopes\")\ntemp_token_dict: Dict[str, User] = {}\n@pait(\nresponse_model_list=[\noauth2.OAuth2PasswordBearerJsonRespModel,\nHttp400RespModel.clone(resp_model=TextResponseModel),\n],\n)\nasync def oauth2_login(form_data: oauth2.OAuth2PasswordRequestFrom) -&gt; JSONResponse:\nif form_data.username != form_data.password:\nraise HTTPException(400)\ntoken: str = \"\".join(random.choice(string.ascii_letters + string.digits) for _ in range(10))\ntemp_token_dict[token] = User(uid=\"123\", name=form_data.username, age=23, sex=\"M\", scopes=form_data.scope)\nreturn JSONResponse(oauth2.OAuth2PasswordBearerJsonRespModel.response_data(access_token=token).dict())\noauth2_pb: oauth2.OAuth2PasswordBearer = oauth2.OAuth2PasswordBearer(\nroute=oauth2_login,\nscopes={\n\"user-info\": \"get all user info\",\n\"user-name\": \"only get user name\",\n},\n)\ndef get_current_user(_oauth2_pb: \"BaseOAuth2PasswordBearerProxy\") -&gt; Callable[[str], User]:\ndef _check_scope(token: str = Depends.i(_oauth2_pb)) -&gt; User:\nuser_model: Optional[User] = temp_token_dict.get(token, None)\nif not user_model:\nraise _oauth2_pb.security.not_authenticated_exc\nif not _oauth2_pb.is_allow(user_model.scopes):\nraise _oauth2_pb.security.not_authenticated_exc\nreturn user_model\nreturn _check_scope\n@pait()\ndef oauth2_user_name(\nuser_model: User = Depends.t(get_current_user(oauth2_pb.get_depend([\"user-name\"]))),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": user_model.name})\n@pait()\ndef oauth2_user_info(\nuser_model: User = Depends.t(get_current_user(oauth2_pb.get_depend([\"user-info\"]))),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"code\": 0, \"msg\": \"\", \"data\": user_model.dict()})\napp = Starlette()\napp.add_route(\"/api/oauth2-login\", oauth2_login, methods=[\"POST\"])\napp.add_route(\"/api/oauth2-user-name\", oauth2_user_name, methods=[\"GET\"])\napp.add_route(\"/api/oauth2-user-info\", oauth2_user_name, methods=[\"GET\"])\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/security/sanic_with_oauth2_demo.py<pre><code>import random\nimport string\nfrom typing import TYPE_CHECKING, Callable, Dict, List, Optional\nimport uvicorn\nfrom pait.app.sanic import pait\nfrom pait.app.sanic.security import oauth2\nfrom pait.field import Depends\nfrom pait.model import Http400RespModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom sanic import HTTPResponse, Sanic, json\nfrom sanic.exceptions import InvalidUsage\nif TYPE_CHECKING:\nfrom pait.app.base.security.oauth2 import BaseOAuth2PasswordBearerProxy\nclass User(BaseModel):\nuid: str = Field(..., description=\"user id\")\nname: str = Field(..., description=\"user name\")\nage: int = Field(..., description=\"user age\")\nsex: str = Field(..., description=\"user sex\")\nscopes: List[str] = Field(..., description=\"user scopes\")\ntemp_token_dict: Dict[str, User] = {}\n@pait(\nresponse_model_list=[Http400RespModel, oauth2.OAuth2PasswordBearerJsonRespModel],\n)\nasync def oauth2_login(form_data: oauth2.OAuth2PasswordRequestFrom) -&gt; HTTPResponse:\nif form_data.username != form_data.password:\nraise InvalidUsage(\"Bad Request\")\ntoken: str = \"\".join(random.choice(string.ascii_letters + string.digits) for _ in range(10))\ntemp_token_dict[token] = User(uid=\"123\", name=form_data.username, age=23, sex=\"M\", scopes=form_data.scope)\nreturn json(oauth2.OAuth2PasswordBearerJsonRespModel.response_data(access_token=token).dict())\noauth2_pb: oauth2.OAuth2PasswordBearer = oauth2.OAuth2PasswordBearer(\nroute=oauth2_login,\nscopes={\n\"user-info\": \"get all user info\",\n\"user-name\": \"only get user name\",\n},\n)\ndef get_current_user(_oauth2_pb: \"BaseOAuth2PasswordBearerProxy\") -&gt; Callable[[str], User]:\ndef _check_scope(token: str = Depends.i(_oauth2_pb)) -&gt; User:\nuser_model: Optional[User] = temp_token_dict.get(token, None)\nif not user_model:\nraise _oauth2_pb.security.not_authenticated_exc\nif not _oauth2_pb.is_allow(user_model.scopes):\nraise _oauth2_pb.security.not_authenticated_exc\nreturn user_model\nreturn _check_scope\n@pait()\ndef oauth2_user_name(\nuser_model: User = Depends.t(get_current_user(oauth2_pb.get_depend([\"user-name\"]))),\n) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": user_model.name})\n@pait()\nasync def oauth2_user_info(\nuser_model: User = Depends.t(get_current_user(oauth2_pb.get_depend([\"user-info\"]))),\n) -&gt; HTTPResponse:\nreturn json({\"code\": 0, \"msg\": \"\", \"data\": user_model.dict()})\napp = Sanic(name=\"demo\")\napp.add_route(oauth2_login, \"/api/oauth2-login\", methods={\"POST\"})\napp.add_route(oauth2_user_name, \"/api/oauth2-user-name\", methods={\"GET\"})\napp.add_route(oauth2_user_info, \"/api/oauth2-user-info\", methods={\"GET\"})\nAddDocRoute(app)\nuvicorn.run(app)\n</code></pre> docs_source_code/openapi/security/tornado_with_oauth2_demo.py<pre><code>import random\nimport string\nfrom typing import TYPE_CHECKING, Callable, Dict, List, Optional\nfrom pait.app.tornado import pait\nfrom pait.app.tornado.security import oauth2\nfrom pait.field import Depends\nfrom pait.model import Http400RespModel\nfrom pait.openapi.doc_route import AddDocRoute\nfrom pydantic import BaseModel, Field\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, HTTPError, RequestHandler\nif TYPE_CHECKING:\nfrom pait.app.base.security.oauth2 import BaseOAuth2PasswordBearerProxy\nclass User(BaseModel):\nuid: str = Field(..., description=\"user id\")\nname: str = Field(..., description=\"user name\")\nage: int = Field(..., description=\"user age\")\nsex: str = Field(..., description=\"user sex\")\nscopes: List[str] = Field(..., description=\"user scopes\")\ntemp_token_dict: Dict[str, User] = {}\nclass OAuth2LoginHandler(RequestHandler):\n@pait(\nresponse_model_list=[oauth2.OAuth2PasswordBearerJsonRespModel, Http400RespModel],\n)\nasync def post(self, form_data: oauth2.OAuth2PasswordRequestFrom) -&gt; None:\nif form_data.username != form_data.password:\nraise HTTPError(400)\ntoken: str = \"\".join(random.choice(string.ascii_letters + string.digits) for _ in range(10))\ntemp_token_dict[token] = User(uid=\"123\", name=form_data.username, age=23, sex=\"M\", scopes=form_data.scope)\nself.write(oauth2.OAuth2PasswordBearerJsonRespModel.response_data(access_token=token).dict())\noauth2_pb: oauth2.OAuth2PasswordBearer = oauth2.OAuth2PasswordBearer(\nroute=OAuth2LoginHandler.post,\nscopes={\n\"user-info\": \"get all user info\",\n\"user-name\": \"only get user name\",\n},\n)\ndef get_current_user(_oauth2_pb: \"BaseOAuth2PasswordBearerProxy\") -&gt; Callable[[str], User]:\ndef _check_scope(token: str = Depends.i(_oauth2_pb)) -&gt; User:\nuser_model: Optional[User] = temp_token_dict.get(token, None)\nif not user_model:\nraise _oauth2_pb.security.not_authenticated_exc\nif not _oauth2_pb.is_allow(user_model.scopes):\nraise _oauth2_pb.security.not_authenticated_exc\nreturn user_model\nreturn _check_scope\nclass OAuth2UserNameHandler(RequestHandler):\n@pait()\ndef get(self, user_model: User = Depends.t(get_current_user(oauth2_pb.get_depend([\"user-name\"])))) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": user_model.name})\nclass OAuth2UserInfoHandler(RequestHandler):\n@pait()\ndef get(self, user_model: User = Depends.t(get_current_user(oauth2_pb.get_depend([\"user-info\"])))) -&gt; None:\nself.write({\"code\": 0, \"msg\": \"\", \"data\": user_model.dict()})\napp: Application = Application(\n[\n(r\"/api/security/oauth2-login\", OAuth2LoginHandler),\n(r\"/api/security/oauth2-user-name\", OAuth2UserNameHandler),\n(r\"/api/security/oauth2-user-info\", OAuth2UserInfoHandler),\n],\n)\nAddDocRoute(app)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4ee3\u7801\u4e2d\u7b2c\u4e00\u90e8\u5206\u662f\u521b\u5efa\u4e00\u4e2a\u5173\u4e8e\u7528\u6237\u6570\u636e\u7684Model--<code>User</code>\uff0c\u548c\u4e00\u4e2a<code>key</code>\u4e3atoken\uff0c<code>value</code>\u4e3a<code>User</code>\u7684<code>temp_token_dict</code>\u7528\u4e8e\u6a21\u62df\u6570\u636e\u5e93\u5b58\u50a8\u3002</p> <p>\u7b2c\u4e8c\u90e8\u5206\u662f\u7f16\u5199\u4e00\u4e2a\u6807\u51c6\u7684\u767b\u9646\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u63a5\u53d7\u7684\u53c2\u6570\u7c7b\u578b\u662f<code>OAuth2PasswordRequestFrom</code>\uff0c\u8fd9\u662f<code>Pait</code>\u9488\u5bf9<code>Oauth2</code>\u7684\u767b\u9646\u53c2\u6570\u5c01\u88c5\u7684\uff0c\u5b83\u7684\u6e90\u7801\u5982\u4e0b\uff0c <pre><code>from pydantic import BaseModel\nfrom pait.field import Form\nclass BaseOAuth2PasswordRequestFrom(BaseModel):\nusername: str = Form()\npassword: str = Form()\nscope: ScopeType = Form(\"\")\nclient_id: Optional[str] = Form(None)\nclient_secret: Optional[str] = Form(None)\nclass OAuth2PasswordRequestFrom(BaseOAuth2PasswordRequestFrom):\ngrant_type: Optional[str] = Form(None, regex=\"password\")\n</code></pre> \u53ef\u4ee5\u770b\u5230<code>OAuth2PasswordRequestFrom</code>\u7ee7\u627f\u4e86<code>BaseModel</code>\uff0c\u5e76\u4e14\u6240\u6709\u53c2\u6570\u7684<code>Field</code>\u90fd\u4f7f\u7528<code>Form</code>\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u53c2\u6570\u662f\u4ece\u8bf7\u6c42\u4f53\u4e2d\u7684\u8868\u5355\u83b7\u53d6\u6570\u636e\u3002</p> <p>\u767b\u9646\u63a5\u53e3\u5728\u63a5\u6536<code>form_data</code>\u53c2\u6570\u540e\u4f1a\u8fdb\u884c\u6821\u9a8c\uff0c\u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u7684\u6821\u9a8c\u4e86\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u9519\u8bef\u5219\u8fd4\u56de400\u54cd\u5e94\uff0c\u6b63\u786e\u5219\u751f\u6210\u4e00\u4e2a<code>token</code>\uff0c\u5e76\u5c06<code>token</code>\u548c<code>User</code>\u5b58\u50a8\u5230<code>temp_token_dict</code>\u4e2d\uff0c\u6700\u540e\u901a\u8fc7<code>oauth2.OAuth2PasswordBearerJsonRespModel</code>\u8fd4\u56deOauth2\u6807\u51c6\u7684\u54cd\u5e94\u683c\u5f0f\u3002</p> <p>\u7b2c\u4e09\u90e8\u5206\u5148\u662f\u901a\u8fc7<code>oauth2.OAuth2PasswordBearer</code>\u521b\u5efa<code>oauth2_pb</code>\u5b9e\u4f8b\uff0c\u5176\u4e2d<code>route</code>\u53c2\u6570\u4e3a\u767b\u9646\u8def\u7531\u51fd\u6570\uff0c<code>oauth2_pb</code>\u4f1a\u5728\u8def\u7531\u51fd\u6570\u6ce8\u518c\u5230Web\u6846\u67b6\u65f6\u628a\u8def\u7531\u51fd\u6570\u7684URL\u5199\u5165\u5230<code>tokenUrl</code>\u5c5e\u6027\u4e2d\uff0c\u800c<code>scopes</code>\u5219\u662f\u5bf9\u6743\u9650\u7684\u63cf\u8ff0\uff0c\u8fd9\u91cc\u521b\u5efa\u4e86<code>oauth2_pb</code>\u548c<code>user-name</code>\u4e24\u4e2a<code>scope</code>\u3002</p> <p>\u7136\u540e\u662f\u7f16\u5199\u83b7\u53d6\u7528\u6237\u7684\u51fd\u6570--<code>get_current_user</code>\uff0c <code>get_current_user</code>\u51fd\u6570\u4f1a\u901a\u8fc7Token\u83b7\u53d6\u5230\u5f53\u524d\u4f7f\u7528\u63a5\u53e3\u7684\u7528\u6237\uff0c\u7136\u540e\u518d\u901a\u8fc7<code>is_allow</code>\u65b9\u6cd5\u5224\u65ad\u5f53\u524d\u7528\u6237\u662f\u5426\u6709\u6743\u9650\u8bbf\u95ee\u8be5\u63a5\u53e3\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56de403\u54cd\u5e94\uff0c\u5982\u679c\u6709\u5219\u8fd4\u56de<code>User</code> Model\u3002 \u6b64\u5916\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u7684\u503c\u4e3a<code>oauth2.OAuth2PasswordBearer</code>\u7684\u4ee3\u7406\u7c7b\uff0c\u8fd9\u4e2a\u4ee3\u7406\u7c7b\u5df2\u7ecf\u660e\u786e\u4e86\u53ea\u5141\u8bb8\u4e86\u54ea\u4e9b\u6743\u9650\uff0c\u540c\u65f6 \u8be5\u7c7b\u6709\u4e24\u4e2a\u529f\u80fd\uff0c\u4e00\u4e2a\u662f\u901a\u8fc7<code>Depend</code>\u628a\u8bf7\u6c42\u7684\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u63d0\u4f9b<code>is_allow</code>\u65b9\u6cd5\u7528\u4e8e\u5224\u65ad\u7528\u6237\u662f\u5426\u6709\u6743\u9650\u8bbf\u95ee\u8be5\u63a5\u53e3\u3002</p> <p>\u7b2c\u56db\u90e8\u5206\u5219\u662f\u8def\u7531\u51fd\u6570\uff0c\u5b83\u4eec\u4f7f\u7528\u4e86\u7b2c\u4e09\u90e8\u5206\u521b\u5efa\u7684<code>get_current_user</code>\uff0c\u5176\u4e2d\u4f20\u9012\u7684\u53c2\u6570<code>oauth2_pb.get_depend([\"user-name\"])</code>\u7684\u4f5c\u7528\u662f\u901a\u8fc7<code>oauth2.OAuth2PasswordBearer</code>\u521b\u5efa\u4e86\u4e00\u4e2a\u4ee3\u7406\u5b9e\u4f8b\uff0c\u5176\u4e2d<code>user-name</code>\u8868\u793a\u5f53\u524d\u7684\u8def\u7531\u51fd\u6570\u53ea\u62e5\u6709<code>user-name</code>\u4e00\u4e2a\u6743\u9650\u3002</p> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u7684\u6267\u884c\u6548\u679c\u5982\u4e0b\uff1a <pre><code>\u279c  curl 'http://127.0.0.1:8000/api/oauth2-login' \\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\n--data-raw 'grant_type=password&amp;scope=user-info&amp;username=so1n&amp;password=so1n' \\\n{\"access_token\":\"pomeG4jCDh\",\"token_type\":\"bearer\"}\n\u279c  curl 'http://127.0.0.1:8000/api/oauth2-login' \\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\n--data-raw 'grant_type=password&amp;scope=user-name&amp;username=so1n1&amp;password=so1n1' \\\n{\"access_token\":\"G8ckqKGkDO\",\"token_type\":\"bearer\"}\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/oauth2-user-info' \\\n-H 'accept: */*' \\\n-H 'Authorization: Bearer pomeG4jCDh'\n{\"code\":0,\"data\":{\"age\":23,\"name\":\"so1n\",\"scopes\":[\"user-info\"],\"sex\":\"M\",\"uid\":\"123\"},\"msg\":\"\"}\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/oauth2-user-info' \\\n-H 'accept: */*' \\\n-H 'Authorization: Bearer G8ckqKGkDO'\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;\n&lt;title&gt;401 Unauthorized&lt;/title&gt;\n&lt;h1&gt;Unauthorized&lt;/h1&gt;\n&lt;p&gt;Not authenticated&lt;/p&gt;\n\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/oauth2-user-name' \\\n-H 'accept: */*' \\\n-H 'Authorization: Bearer pomeG4jCDh'\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;\n&lt;title&gt;401 Unauthorized&lt;/title&gt;\n&lt;h1&gt;Unauthorized&lt;/h1&gt;\n&lt;p&gt;Not authenticated&lt;/p&gt;\n\n\u279c  curl -X 'GET' \\\n'http://127.0.0.1:8000/api/oauth2-user-name' \\\n-H 'accept: */*' \\\n-H 'Authorization: Bearer G8ckqKGkDO'\n{\"code\":0,\"data\":\"so1n1\",\"msg\":\"\"}\n</code></pre> \u901a\u8fc7\u54cd\u5e94\u7ed3\u679c\u53ef\u4ee5\u770b\u5230\u6743\u9650\u4e3a<code>user-info</code>\u7684\u7528\u6237\u53ea\u80fd\u8bbf\u95ee<code>/api/oauth2-user-info</code>\u63a5\u53e3\uff0c\u800c\u6743\u9650\u4e3a<code>user-name</code>\u7684\u7528\u6237\u53ea\u80fd\u8bbf\u95ee<code>/api/oauth2-user-name</code>\u63a5\u53e3\u3002</p> <p>Note</p> <p>\u5f53\u524d\u7248\u672c\u5c1a\u672a\u652f\u6301<code>refreshUrl</code></p>"},{"location":"4_unit_test_helper/","title":"\u5355\u5143\u6d4b\u8bd5\u652f\u6301","text":"<p>\u76ee\u524d\uff0c<code>Pait</code>\u901a\u8fc7<code>TestHelper</code>\u5bf9\u5355\u5143\u6d4b\u8bd5\u63d0\u4f9b\u4e00\u4e2a\u4e86\u7b80\u5355\u7684\u652f\u6301\uff0c<code>TestHelper</code>\u5728\u6267\u884c\u65f6\u4f1a\u901a\u8fc7\u8def\u7531\u51fd\u6570\u81ea\u52a8\u8865\u5145URL\uff0cHTTP\u65b9\u6cd5\u7b49\u53c2\u6570\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5e76\u5728\u83b7\u5f97\u7ed3\u679c\u65f6\u4f1a\u4ece<code>response_modle_list</code>\u4e2d\u83b7\u53d6\u4e0e\u6d4b\u8bd5\u7ed3\u679c\u6700\u5339\u914d\u7684\u54cd\u5e94\u6a21\u578b\u8fdb\u884c\u7b80\u5355\u7684\u6821\u9a8c\uff0c\u4ece\u800c\u51cf\u5c11\u5f00\u53d1\u8005\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u7684\u4ee3\u7801\u91cf\u3002</p> <p>Note</p> <p>\u81ea\u52a8\u6d4b\u8bd5\uff0c\u6df7\u6c8c\u6d4b\u8bd5\u7b49\u5176\u4ed6\u6d4b\u8bd5\u529f\u80fd\u6b63\u5728\u5f00\u53d1\u4e2d\uff0c\u656c\u8bf7\u671f\u5f85\u3002</p>"},{"location":"4_unit_test_helper/#1testhelper","title":"1.TestHelper\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u672c\u6b21\u4f7f\u7528\u7684\u793a\u4f8b\u4ee3\u7801\u662f\u4ee5\u9996\u9875\u7684\u793a\u4f8b\u4ee3\u7801\u8fdb\u884c\u62d3\u5c55\uff0c\u4e3b\u8981\u53d8\u52a8\u662f\u5728\u8def\u7531\u51fd\u6570\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a<code>return_error_resp</code>\u7684\u53c2\u6570\uff0c\u5f53<code>return_error_resp</code>\u4e3a<code>True</code>\u65f6\u4f1a\u8fd4\u56de\u4e0d\u7b26\u5408\u54cd\u5e94\u6a21\u578b\u7684\u54cd\u5e94\uff0c\u4ee3\u7801\u5982\u4e0b:</p> FlaskStarletteSanicTornado docs_source_code/unit_test_helper/flask_test_helper_demo.py<pre><code>from typing import Type\nfrom flask import Flask, Response, jsonify\nfrom pait.app.flask import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pydantic import BaseModel, Field\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\ndef demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\nreturn_error_resp: bool = Body.i(description=\"return error resp\", default=False),\n) -&gt; Response:\nif return_error_resp:\nreturn jsonify()\nreturn jsonify({\"uid\": uid, \"user_name\": username, \"a\": 123})\napp = Flask(\"demo\")\napp.add_url_rule(\"/api\", \"demo\", demo_post, methods=[\"POST\"])\napp.run(port=8000)\n</code></pre> docs_source_code/unit_test_helper/starlette_test_helper_demo.py<pre><code>from typing import Type\nfrom pait.app.starlette import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pydantic import BaseModel, Field\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\nreturn_error_resp: bool = Body.i(description=\"return error resp\", default=False),\n) -&gt; JSONResponse:\nif return_error_resp:\nreturn JSONResponse({})\nreturn JSONResponse({\"uid\": uid, \"user_name\": username})\napp = Starlette(routes=[Route(\"/api\", demo_post, methods=[\"POST\"])])\nimport uvicorn\nuvicorn.run(app)\n</code></pre> docs_source_code/unit_test_helper/sanic_test_helper_demo.py<pre><code>from typing import Type\nfrom pait.app.sanic import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pydantic import BaseModel, Field\nfrom sanic.app import Sanic\nfrom sanic.response import HTTPResponse, json\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(response_model_list=[DemoResponseModel])\nasync def demo_post(\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\nreturn_error_resp: bool = Body.i(description=\"return error resp\", default=False),\n) -&gt; HTTPResponse:\nif return_error_resp:\nreturn json({})\nreturn json({\"uid\": uid, \"user_name\": username})\napp = Sanic(name=\"demo\")\napp.add_route(demo_post, \"/api\", methods=[\"POST\"])\nimport uvicorn\nuvicorn.run(app)\n</code></pre> docs_source_code/unit_test_helper/tornado_test_helper_demo.py<pre><code>from typing import Type\nfrom pait.app.tornado import pait\nfrom pait.field import Body\nfrom pait.model.response import JsonResponseModel\nfrom pydantic import BaseModel, Field\nfrom tornado.web import Application, RequestHandler\nclass DemoResponseModel(JsonResponseModel):\nclass ResponseModel(BaseModel):\nuid: int = Field()\nuser_name: str = Field()\ndescription: str = \"demo response\"\nresponse_data: Type[BaseModel] = ResponseModel\nclass DemoHandler(RequestHandler):\n@pait(response_model_list=[DemoResponseModel])\ndef post(\nself,\nuid: int = Body.t(description=\"user id\", gt=10, lt=1000),\nusername: str = Body.t(description=\"user name\", min_length=2, max_length=4),\nreturn_error_resp: bool = Body.i(description=\"return error resp\", default=False),\n) -&gt; None:\nif return_error_resp:\nself.write({})\nelse:\nself.write({\"uid\": uid, \"user_name\": username})\napp: Application = Application([(r\"/api\", DemoHandler)])\napp.listen(8000)\nfrom tornado.ioloop import IOLoop\nIOLoop.instance().start()\n</code></pre> <p>\u63a5\u7740\u5c31\u53ef\u4ee5\u901a\u8fc7<code>TestHelper</code>\u6765\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u4e86\uff0c\u9996\u5148\u9700\u8981\u5bfc\u5165<code>TestHelper</code>\u4ee5\u53ca\u5bf9\u5e94Web\u6846\u67b6\u7684\u6d4b\u8bd5\u5ba2\u6237\u7aef\uff0c\u540c\u65f6\u8fd8\u8981\u8fdb\u884c\u6d4b\u8bd5\u6846\u67b6\u7684\u521d\u59cb\u5316:</p> FlaskStarletteSanicTornado <p>Note</p> <p>\u7531\u4e8e<code>Flask</code>\u5728\u6ce8\u518c\u8def\u7531\u9009\u5b9a<code>POST</code>\u65f6\u4f1a\u81ea\u52a8\u6ce8\u518c\u4e00\u4e2a<code>OPTIONS</code>\u65b9\u6cd5\uff0c\u4f1a\u5e72\u6270<code>TestHelper</code>\u7684HTTP\u65b9\u6cd5\u81ea\u52a8\u53d1\u73b0\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7<code>apply_block_http_method_set</code>\u5c4f\u853d<code>OPTIONS</code>\u65b9\u6cd5\u3002</p> docs_source_code/unit_test_helper/flask_test_helper_demo.py<pre><code>###########################################################\n# Block the OPTIONS method that Flask automatically adds  #\n###########################################################\nfrom pait.g import config\nfrom pait.extra.config import apply_block_http_method_set\nconfig.init_config(apply_func_list=[apply_block_http_method_set({\"OPTIONS\"})])\n#############\n# unit test #\n#############\nfrom typing import Generator\nimport pytest\nfrom flask.ctx import AppContext\nfrom flask.testing import FlaskClient\nfrom pait.app.flask import FlaskTestHelper\n@pytest.fixture\ndef client() -&gt; Generator[FlaskClient, None, None]:\n# Flask provides a way to test your application by exposing the Werkzeug test Client\n# and handling the context locals for you.\nclient: FlaskClient = app.test_client()\n# Establish an application context before running the tests.\nctx: AppContext = app.app_context()\nctx.push()\nyield client  # this is where the testing happens!\nctx.pop()\n</code></pre> <p>Note</p> <p>\u5728\u4f7f\u7528<code>with TestClient(app) as client</code>\u65f6\uff0c<code>Starlette</code>\u4f1a\u81ea\u52a8\u8c03\u7528app\u7684<code>startup</code>\u548c<code>shutdown</code>\u65b9\u6cd5\uff0c\u867d\u7136\u672c\u6b21\u6d4b\u8bd5\u7528\u4f8b\u5e76\u6ca1\u6709\u7528\u5230\uff0c\u4f46\u662f\u4f7f\u7528<code>with TestClient(app) as client</code>\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002</p> docs_source_code/unit_test_helper/starlette_test_helper_demo.py<pre><code>import pytest\nfrom typing import Generator\nfrom pait.app.starlette import StarletteTestHelper\nfrom starlette.testclient import TestClient\n@pytest.fixture\ndef client() -&gt; Generator[TestClient, None, None]:\nwith TestClient(app) as client:\nyield client\n</code></pre> docs_source_code/unit_test_helper/sanic_test_helper_demo.py<pre><code>from typing import Generator\nfrom pait.app.sanic import SanicTestHelper\nfrom sanic_testing.testing import SanicTestClient\n@pytest.fixture\ndef client() -&gt; Generator[SanicTestClient, None, None]:\nyield app.test_client\n</code></pre> <p>Note</p> <p>\u76ee\u524d\u6211\u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u901a\u8fc7<code>Pytest</code>\u6267\u884c<code>Tornado</code>\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86<code>Tornado</code>\u7684<code>AsyncHTTPTestCase</code>\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5982\u679c\u4f60\u77e5\u9053\u5982\u4f55\u901a\u8fc7<code>Pytest</code>\u6267\u884c<code>Tornado</code>\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6b22\u8fce\u901a\u8fc7issue\u53cd\u9988\u3002</p> docs_source_code/unit_test_helper/tornado_test_helper_demo.py<pre><code>from pait.app.tornado import TornadoTestHelper\nfrom tornado.testing import AsyncHTTPTestCase\nclass TestTornado(AsyncHTTPTestCase):\ndef get_app(self) -&gt; Application:\nreturn app\ndef get_url(self, path: str) -&gt; str:\n\"\"\"Returns an absolute url for the given path on the test server.\"\"\"\nreturn \"%s://localhost:%s%s\" % (self.get_protocol(), self.get_http_port(), path)\n</code></pre> <p>\u5728\u7f16\u5199\u5b8c\u6d4b\u8bd5\u7528\u4f8b\u7684\u521d\u59cb\u5316\u4ee3\u7801\u540e\uff0c\u5c31\u53ef\u4ee5\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u4ee3\u7801\u4e86\uff0c\u9996\u5148\u5c06\u6f14\u793a\u5982\u4f55\u901a\u8fc7<code>TestHelper</code>\u6765\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado docs_source_code/unit_test_helper/flask_test_helper_demo.py<pre><code>def test_demo_post_route_by_call_json(client: FlaskClient) -&gt; None:\ntest_helper = FlaskTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nassert test_helper.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/starlette_test_helper_demo.py<pre><code>def test_demo_post_route_by_call_json(client: TestClient) -&gt; None:\ntest_helper = StarletteTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nassert test_helper.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/sanic_test_helper_demo.py<pre><code>    test_helper = SanicTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nassert test_helper.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/tornado_test_helper_demo.py<pre><code>class TestTornado(AsyncHTTPTestCase):\n...\ndef test_demo_post_route_by_call_json(self) -&gt; None:\ntest_helper = TornadoTestHelper(\nclient=self,\nfunc=DemoHandler.post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nassert test_helper.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c \u4f1a\u5bf9<code>TestHelper</code>\u8fdb\u884c\u521d\u59cb\u5316\uff0c<code>TestHelper</code>\u7684\u521d\u59cb\u5316\u9700\u8981Web\u6846\u67b6\u5bf9\u5e94\u7684\u6d4b\u8bd5\u5ba2\u6237\u7aef\u3001\u8def\u7531\u51fd\u6570\uff0c\u4ee5\u53ca\u8def\u7531\u51fd\u6570\u7684\u4e00\u4e9b\u8bf7\u6c42\u53c2\u6570\uff0c \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7<code>TestHelper</code>\u83b7\u5f97\u8bf7\u6c42\u54cd\u5e94\u4e86\u3002</p> <p>\u5728\u6267\u884c\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c<code>TestHelper</code>\u4f1a\u901a\u8fc7\u8def\u7531\u51fd\u6570\u81ea\u52a8\u53d1\u73b0\u4e86\u8def\u7531\u51fd\u6570\u7684<code>URL</code>\u548cHTTP\u65b9\u6cd5\uff0c\u6240\u4ee5\u8c03\u7528<code>json</code>\u65b9\u6cd5\u7684\u65f6\u5019<code>TestHelper</code>\u4f1a\u81ea\u52a8\u53d1\u8d77\u4e86<code>post</code>\u8bf7\u6c42\uff0c\u5e76\u901a\u8fc7<code>post</code>\u8bf7\u6c42\u83b7\u5f97\u54cd\u5e94\u7ed3\u679c\uff0c \u7136\u540e\u628a\u54cd\u5e94Body\u5e8f\u5217\u5316\u4e3a<code>Python</code>\u7684<code>dict</code>\u5bf9\u8c61\u5e76\u8fd4\u56de\uff0c \u4f46\u662f\u5f53\u8be5\u8def\u7531\u51fd\u6570\u7ed1\u5b9a\u4e86\u591a\u4e2a\u8bf7\u6c42\u65b9\u6cd5\u65f6\uff0c<code>TestHelper</code>\u5219\u65e0\u6cd5\u81ea\u52a8\u6267\u884c\uff0c\u9700\u8981\u5728\u8c03\u7528<code>json</code>\u65b9\u6cd5\u65f6\u6307\u5b9a\u5bf9\u5e94\u7684HTTP\u65b9\u6cd5\uff0c \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b:</p> FlaskStarletteSanicTornado docs_source_code/unit_test_helper/flask_test_helper_demo.py<pre><code>def test_demo_post_route_by_use_method(client: FlaskClient) -&gt; None:\ntest_helper = FlaskTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nassert test_helper.json(method=\"POST\") == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/starlette_test_helper_demo.py<pre><code>def test_demo_post_route_by_use_method(client: TestClient) -&gt; None:\ntest_helper = StarletteTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nassert test_helper.json(method=\"POST\") == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/sanic_test_helper_demo.py<pre><code>    test_helper = SanicTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nassert test_helper.json(method=\"POST\") == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/tornado_test_helper_demo.py<pre><code>class TestTornado(AsyncHTTPTestCase):\n...\ndef test_demo_post_route_by_use_method(self) -&gt; None:\ntest_helper = TornadoTestHelper(\nclient=self,\nfunc=DemoHandler.post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nassert test_helper.json(method=\"POST\") == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> <p>\u6b64\u5916\uff0c\u5728\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u83b7\u5f97\u5230\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u54cd\u5e94\u6570\u636e\uff0c\u4ee5\u4fbf\u5bf9\u72b6\u6001\u7801\uff0c<code>Header</code>\u4e4b\u7c7b\u7684\u6570\u636e\u8fdb\u884c\u6821\u9a8c\u3002 \u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7<code>TestHelper</code>\u7684HTTP\u65b9\u6cd5\u8fdb\u884c\u8c03\u7528\u5e76\u83b7\u5f97Web\u6846\u67b6\u5bf9\u5e94\u6d4b\u8bd5\u5ba2\u6237\u7aef\u7684\u54cd\u5e94\u5bf9\u8c61<code>Response</code>\uff0c\u5982\u4e0b\u4ee3\u7801\u5c31\u4f1a\u901a\u8fc7<code>post</code>\u65b9\u6cd5\u5bf9\u8def\u7531\u51fd\u6570\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u8fd4\u56deWeb\u6846\u67b6\u6d4b\u8bd5\u5ba2\u6237\u7aef\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u54cd\u5e94\u5bf9\u8c61\u8fdb\u884c\u65ad\u8a00:</p> FlaskStarletteSanicTornado docs_source_code/unit_test_helper/flask_test_helper_demo.py<pre><code>def test_demo_post_route_by_raw_web_framework_response(client: FlaskClient) -&gt; None:\ntest_helper = FlaskTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nresp = test_helper.post()\nassert resp.status_code == 200\nassert resp.json == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/starlette_test_helper_demo.py<pre><code>def test_demo_post_route_by_raw_web_framework_response(client: TestClient) -&gt; None:\ntest_helper = StarletteTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nresp = test_helper.post()\nassert resp.status_code == 200\nassert resp.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/sanic_test_helper_demo.py<pre><code>    test_helper = SanicTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nresp = test_helper.post()\nassert resp.status_code == 200\nassert resp.json == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/tornado_test_helper_demo.py<pre><code>class TestTornado(AsyncHTTPTestCase):\n...\ndef test_demo_post_route_by_raw_web_framework_response(self) -&gt; None:\ntest_helper = TornadoTestHelper(\nclient=self,\nfunc=DemoHandler.post,\nbody_dict={\"uid\": 11, \"username\": \"test\"},\n)\nresp = test_helper.post()\nassert resp.code == 200\nassert resp.body.decode() == '{\"uid\": 11, \"user_name\": \"test\"}'\n</code></pre> <p>\u867d\u7136\u8fd9\u79cd\u60c5\u51b5\u4e0b<code>TestHelper</code>\u4e0e\u4f7f\u7528Web\u6846\u67b6\u5bf9\u5e94\u7684\u6d4b\u8bd5\u5ba2\u6237\u7aef\u7684\u4f7f\u7528\u65b9\u5f0f\u6ca1\u6709\u592a\u5927\u7684\u5dee\u522b\uff0c\u4f46\u662f<code>TestHelper</code>\u5728\u83b7\u53d6\u5230\u8def\u7531\u51fd\u6570\u7684\u54cd\u5e94\u540e\uff0c \u4f1a\u6839\u636e\u8def\u7531\u54cd\u5e94\u4ece\u8def\u7531\u51fd\u6570\u7684<code>response_model_list</code>\u6311\u9009\u4e00\u4e2a\u6700\u5339\u914d\u7684\u54cd\u5e94\u6a21\u578b\u8fdb\u884c\u6821\u9a8c\uff0c\u5982\u679c\u68c0\u67e5\u5230\u54cd\u5e94\u5bf9\u8c61\u7684HTTP\u72b6\u6001\u7801\uff0cHeader\u4e0e\u54cd\u5e94\u6570\u636e\u4e09\u8005\u4e2d\u6709\u4e00\u4e2a\u4e0d\u7b26\u5408\u54cd\u5e94\u6a21\u578b\u7684\u6761\u4ef6\u5c31\u4f1a\u629b\u51fa\u9519\u8bef\u5e76\u4e2d\u65ad\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5982\u4e0b\u4f8b\u5b50\uff1a</p> FlaskStarletteSanicTornado docs_source_code/unit_test_helper/flask_test_helper_demo.py<pre><code>def test_demo_post_route_by_test_helper_check_response_error(client: FlaskClient) -&gt; None:\ntest_helper = FlaskTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\", \"return_error_resp\": True},\n)\nassert test_helper.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/starlette_test_helper_demo.py<pre><code>def test_demo_post_route_by_test_helper_check_response_error(client: TestClient) -&gt; None:\ntest_helper = StarletteTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\", \"return_error_resp\": True},\n)\nassert test_helper.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/sanic_test_helper_demo.py<pre><code>def test_demo_post_route_by_test_helper_check_response_error(client: SanicTestClient) -&gt; None:\ntest_helper = SanicTestHelper(\nclient=client,\nfunc=demo_post,\nbody_dict={\"uid\": 11, \"username\": \"test\", \"return_error_resp\": True},\n)\nassert test_helper.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> docs_source_code/unit_test_helper/tornado_test_helper_demo.py<pre><code>class TestTornado(AsyncHTTPTestCase):\n...\ndef test_demo_post_route_by_test_helper_check_response_error(self) -&gt; None:\ntest_helper = TornadoTestHelper(\nclient=self,\nfunc=DemoHandler.post,\nbody_dict={\"uid\": 11, \"username\": \"test\", \"return_error_resp\": True},\n)\nassert test_helper.json() == {\"uid\": 11, \"user_name\": \"test\"}\n</code></pre> <p>\u5728\u6267\u884c\u5b8c\u6d4b\u8bd5\u7528\u4f8b\u540e\uff0c<code>TestHelper</code>\u4f1a\u53d1\u73b0\u8def\u7531\u51fd\u6570\u7684\u54cd\u5e94\u7ed3\u679c\u4e0e\u8def\u7531\u51fd\u6570\u5b9a\u4e49\u7684\u54cd\u5e94\u6a21\u578b\u4e0d\u5339\u914d\uff0c\u6b64\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4e2d\u65ad\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b: <pre><code>&gt;               raise exc\nE               pait.app.base.test_helper.CheckResponseException: maybe error result:\nE               &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nE               check json content error, exec: 2 validation errors for ResponseModel\nE               uid\nE                 field required (type=value_error.missing)\nE               user_name\nE                 field required (type=value_error.missing)\nE\nE               &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nE               by response model:&lt;class 'docs_source_code.unit_test_helper.flask_test_helper_demo.DemoResponseModel'&gt;\n</code></pre> \u901a\u8fc7\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u629b\u51fa\u7684\u5f02\u5e38\u4e3a<code>CheckResponseException</code>\uff0c\u5e76\u6839\u636e\u5f02\u5e38\u4fe1\u606f\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u672c\u6b21\u53c2\u4e0e\u6821\u9a8c\u7684\u54cd\u5e94\u6a21\u578b\u662f<code>DemoResponseModel</code>\uff0c\u5b83\u53d1\u73b0\u54cd\u5e94\u6570\u636e\u7f3a\u5c11\u4e86<code>uid</code>\u5b57\u6bb5\u548c<code>user_name</code>\u5b57\u6bb5\u3002</p>"},{"location":"4_unit_test_helper/#2","title":"2.\u53c2\u6570\u4ecb\u7ecd","text":"<p><code>TestHelper</code>\u7684\u53c2\u6570\u5206\u4e3a\u521d\u59cb\u5316\u5fc5\u586b\u53c2\u6570\uff0c\u8bf7\u6c42\u76f8\u5173\u7684\u53c2\u6570\uff0c\u54cd\u5e94\u76f8\u5173\u7684\u7ed3\u679c\u53c2\u6570\u51713\u79cd\u3002\u5176\u4e2d\uff0c\u521d\u59cb\u5316\u53c2\u6570\u7684\u63cf\u8ff0\u5982\u4e0b\uff1a</p> \u53c2\u6570 \u63cf\u8ff0 client Web\u6846\u67b6\u7684\u6d4b\u8bd5\u5ba2\u6237\u7aef func \u8981\u8fdb\u884c\u6d4b\u8bd5\u7684\u8def\u7531\u51fd\u6570 <p>\u800c\u8bf7\u6c42\u53c2\u6570\u6709\u591a\u4e2a\uff0c\u5bf9\u4e8e\u5927\u90e8\u5206Web\u6846\u67b6\u6765\u8bf4\u53ea\u662f\u5c01\u88c5\u4e86\u4e00\u5c42\u8c03\u7528\uff0c\u4f46\u5bf9\u4e8e\u4f7f\u7528<code>Tornado</code>\u4e4b\u7c7b\u7684\u6ca1\u5bf9\u6d4b\u8bd5\u5ba2\u6237\u7aef\u505a\u8fc7\u591a\u5c01\u88c5\u7684\u6846\u67b6\u7684\u5219\u80fd\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4fbf\u5229\uff0c\u8fd9\u4e9b\u53c2\u6570\u6709:</p> <ul> <li>body_dict: \u53d1\u8d77\u8bf7\u6c42\u65f6\u7684Json\u6570\u636e\u3002</li> <li>cookie_dict: \u53d1\u8d77\u8bf7\u6c42\u65f6\u7684cookie\u6570\u636e\u3002</li> <li>file_dict: \u53d1\u8d77\u8bf7\u6c42\u65f6\u7684file\u6570\u636e\u3002</li> <li>form_dict: \u53d1\u8d77\u8bf7\u6c42\u65f6\u7684form\u6570\u636e\u3002</li> <li>header_dict: \u53d1\u8d77\u8bf7\u6c42\u65f6\u7684header\u6570\u636e\u3002</li> <li>path_dict: \u53d1\u8d77\u8bf7\u6c42\u65f6\u7684path\u6570\u636e\u3002</li> <li>query_dict: \u53d1\u8d77\u8bf7\u6c42\u65f6\u7684query\u6570\u636e\u3002</li> </ul> <p>\u9664\u6b64\u4e4b\u5916\uff0c<code>TestHelper</code>\u8fd8\u6709\u51e0\u4e2a\u4e0e\u54cd\u5e94\u7ed3\u679c\u6821\u9a8c\u76f8\u5173\u7684\u53c2\u6570\uff0c\u6bd4\u5982<code>strict_inspection_check_json_content</code>\u53c2\u6570\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>strict_inspection_check_json_content</code>\u53c2\u6570\u7684\u503c\u4e3aTrue\uff0c\u8fd9\u4f1a\u8ba9<code>TestHelper</code>\u5bf9\u54cd\u5e94\u7ed3\u679c\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4e25\u683c\u6821\u9a8c\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50: <pre><code>a = {\n\"a\": 1,\n\"b\": {\n\"c\": 3\n}\n}\nb = {\n\"a\": 2,\n\"b\": {\n\"c\": 3,\n\"d\": 4\n}\n}\n</code></pre> \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>a</code>\u4e0e<code>b</code>\u7684\u6570\u636e\u7ed3\u6784\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5176\u4e2da\u53d8\u91cf\u4ee3\u6307\u54cd\u5e94\u6a21\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0cb\u53d8\u91cf\u5219\u662f\u54cd\u5e94\u4f53\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f53<code>TestHelper</code>\u8fdb\u884c\u6821\u9a8c\u65f6\uff0c \u4f1a\u56e0\u4e3a\u68c0\u6d4b\u5230b\u53d8\u91cf\u591a\u51fa\u6765\u4e00\u4e2a\u7ed3\u6784<code>b['b']['d']</code>\u800c\u76f4\u63a5\u629b\u51fa\u9519\u8bef\uff0c \u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e\u53c2\u6570<code>strict_inspection_check_json_content</code>\u7684\u503c\u4e3a<code>False</code>\uff0c\u8fd9\u6837<code>TestHelper</code>\u53ea\u4f1a\u6821\u9a8c\u51fa\u73b0\u5728\u54cd\u5e94\u6a21\u578b\u4e2d\u51fa\u73b0\u7684\u5b57\u6bb5\uff0c\u800c\u4e0d\u4f1a\u68c0\u67e5\u54cd\u5e94\u6a21\u578b\u4e4b\u5916\u7684\u5b57\u6bb5\u3002</p> <p>\u9664\u4e86\u53c2\u6570<code>strict_inspection_check_json_content</code>\u5916\uff0c<code>TestHelper</code>\u8fd8\u6709\u53e6\u5916\u51e0\u4e2a\u53c2\u6570\uff0c\u5982\u4e0b:</p> \u53c2\u6570 \u63cf\u8ff0 target_pait_response_class \u5982\u679c\u503c\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48<code>TestHelper</code>\u4f1a\u901a\u8fc7<code>target_pait_response_class</code>\u4ece<code>response_model_list</code>\u4e2d\u7b5b\u9009\u51fa\u4e00\u6279\u7b26\u5408\u6761\u4ef6\u7684<code>response_model</code>\u6765\u8fdb\u884c\u6821\u9a8c\u3002\u8be5\u503c\u901a\u5e38\u662f\u54cd\u5e94\u6a21\u578b\u7684\u7236\u7c7b\uff0c\u9ed8\u8ba4\u503c\u4e3a<code>None</code>\u4ee3\u8868\u4e0d\u5339\u914d\u3002 enable_assert_response \u8868\u793a<code>TestHelper</code>\u662f\u5426\u4f1a\u5bf9\u54cd\u5e94\u7ed3\u679c\u8fdb\u884c\u65ad\u8a00\uff0c\u9ed8\u8ba4\u503c\u4e3aTrue\u3002"},{"location":"5_1_introduction/","title":"\u4ecb\u7ecd","text":"<p><code>Pait</code>\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u8fd9\u4e2a\u88c5\u9970\u5668\u53ea\u505a\u88ab\u88c5\u9970\u51fd\u6570\u7684\u5904\u7406\u548c\u63d2\u4ef6\u7684\u521d\u59cb\u5316\uff0c\u771f\u6b63\u8d1f\u8d23\u529f\u80fd\u5b9e\u73b0\u7684\u90fd\u662f\u8fd9\u4e9b\u88ab\u88c5\u9970\u5668\u521d\u59cb\u5316\u7684\u63d2\u4ef6\uff0c\u5176\u4e2d<code>Pait</code>\u7684\u7c7b\u578b\u8f6c\u6362\u4e0e\u53c2\u6570\u6821\u9a8c\u529f\u80fd\u662f<code>Pait</code>\u7684\u4e00\u4e2a\u6838\u5fc3\u63d2\u4ef6\u3002</p>"},{"location":"5_1_introduction/#_1","title":"\u7b80\u5355\u4ecb\u7ecd","text":"<p>\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7<code>Pait</code>\u4f20\u5165\u9700\u8981\u7684\u63d2\u4ef6\uff0c\u7136\u540e\u7a0b\u5e8f\u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u4ee5\u62e6\u622a\u5668\u7684\u5f62\u5f0f\u628a\u63d2\u4ef6\u6309\u7167\u987a\u5e8f\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5982\u679c\u8be5\u63d2\u4ef6\u662f\u524d\u7f6e\u5f62\u63d2\u4ef6\uff0c\u90a3\u4e48\u5b83\u4f1a\u88ab\u653e\u7f6e\u5728\u7c7b\u578b\u8f6c\u6362\u4e0e\u53c2\u6570\u6821\u9a8c\u63d2\u4ef6\u4e4b\u524d\uff0c\u5426\u5219\u5c31\u4f1a\u653e\u5728\u540e\u9762\u3002 \u524d\u7f6e\u63d2\u4ef6\u4e0e\u540e\u7f6e\u63d2\u4ef6\u9664\u4e86\u4ed6\u4eec\u81ea\u8eab\u7684<code>is_pre_core</code>\u5c5e\u6027\u4e0d\u540c\u5916\uff0c\u5b83\u4eec\u7684\u6700\u4e3b\u8981\u7684\u533a\u522b\u662f\u83b7\u5f97\u5230\u7684\u53c2\u6570\u4e0d\u540c\uff0c\u524d\u7f6e\u63d2\u4ef6\u83b7\u5f97\u7684\u662fWeb\u6846\u67b6\u4f20\u9012\u8fc7\u6765\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u53ef\u4ee5\u628a\u5b83\u5f53\u6210\u4e00\u4e2a\u7b80\u5355\u7248\u7684\u4e2d\u95f4\u4ef6\uff0c\u800c\u540e\u7f6e\u5f62\u63d2\u4ef6\u8bfb\u5230\u7684\u662f<code>Pait</code>\u6838\u5fc3\u63d2\u4ef6\u8f6c\u6362\u540e\u7684\u8bf7\u6c42\u6570\u636e\uff0c\u4ee5\u4e0b\u9762\u7684\u51fd\u6570\u4e3a\u4f8b\u5b50\uff1a <pre><code>import uvicorn  # type: ignore\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nfrom pait.app.starlette import pait\nfrom pait import field\n@pait()\nasync def demo(\nuid: str = field.Query.i(),\nuser_name: str = field.Query.i(),\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": user_name})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\nuvicorn.run(app)\n</code></pre> \u5047\u8bbe\u4ee3\u7801\u4e2d\u7684<code>app</code>\u5df2\u7ecf\u88c5\u8f7d\u4e86\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u548c\u5bf9\u5e94\u7684<code>Pait</code>\u63d2\u4ef6\uff0c\u5728\u6536\u5230\u4e00\u4e2a\u8bf7\u6c42\u65f6\uff0c\u5b83\u7684\u5904\u7406\u903b\u8f91\u4f1a\u53d8\u4e3a\u5982\u4e0b\u56fe: </p> <p>\u5f53\u8bf7\u6c42\u8fdb\u6765\u540e\u4f1a\u5148\u7531Web\u6846\u67b6\u7684\u4e2d\u95f4\u4ef6\u5904\u7406\uff0c\u7136\u540eWeb\u6846\u67b6\u4f1a\u6267\u884c\u67e5\u627e\u8def\u7531\u7684\u529f\u80fd\uff0c\u5f53\u627e\u4e0d\u5230\u8def\u7531\u65f6\u5c31\u4f1a\u8fd4\u56de<code>Not Found</code>\u7684\u54cd\u5e94\u7ed9\u5ba2\u6237\u7aef\uff0c\u5982\u679c\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u8def\u7531\uff0c\u5c31\u4f1a\u628a\u8bf7\u6c42\u4f20\u5165\u5230\u5230<code>Pait</code>\u7684\u5904\u7406\u903b\u8f91\u3002\u5728<code>Pait</code>\u7684\u5904\u7406\u903b\u8f91\u4e2d\u8bf7\u6c42\u4f1a\u5148\u88ab\u524d\u7f6e\u63d2\u4ef6\u5904\u7406\uff0c \u8fd9\u65f6\u5019\u524d\u7f6e\u63d2\u4ef6\u53ea\u80fd\u5f97\u5230\u6846\u67b6\u5bf9\u5e94\u7684<code>request</code>\u53c2\u6570(\u5982\u679c\u662f<code>flask</code>\u6846\u67b6\uff0c\u5219\u6ca1\u6709)\uff0c\u5f53\u524d\u7f6e\u63d2\u4ef6\u5904\u7406\u5b8c\u6bd5\u540e\u5c31\u4f1a\u628a\u8bf7\u6c42\u4f20\u5165\u5230\u6838\u5fc3\u63d2\u4ef6\u8fdb\u884c\u53c2\u6570\u63d0\u53d6\u548c\u6821\u9a8c\u8f6c\u6362\uff0c\u7ecf\u6838\u5fc3\u63d2\u4ef6\u5904\u7406\u5b8c\u540e\u4f1a\u628a\u63d0\u53d6\u7684\u53c2\u6570\u4f20\u9012\u7ed9\u540e\u7f6e\u63d2\u4ef6\uff0c\u4ea4\u7531\u540e\u7f6e\u63d2\u4ef6\u8fdb\u884c\u5904\u7406\uff0c \u6700\u540e\u624d\u7ecf\u7531\u540e\u7f6e\u63d2\u4ef6\u628a\u53c2\u6570\u4ea4\u7ed9\u771f\u6b63\u7684\u8def\u7531\u51fd\u6570\u5904\u7406\u751f\u6210\u54cd\u5e94\u5e76\u4e00\u4e00\u8fd4\u56de\u3002</p>"},{"location":"5_1_introduction/#_2","title":"\u5982\u4f55\u4f7f\u7528","text":"<p>\u76ee\u524d<code>Pait</code>\u63d0\u4f9b<code>plugin_list</code>\u548c<code>post_plugin_list</code>\u6765\u4f9b\u5f00\u53d1\u8005\u4f20\u5165\u524d\u7f6e\u63d2\u4ef6\u548c\u540e\u7f6e\u63d2\u4ef6\uff0c\u5982\u4e0b\uff1a <pre><code>from pait.plugin.required import RequiredPlugin\n@pait(post_plugin_list=[RequiredPlugin.build(required_dict={\"email\": [\"username\"]})])\n</code></pre> \u8fd9\u6bb5\u4ee3\u7801\u4f7f\u7528\u5230\u7684\u662f\u4e00\u4e2a\u540d\u4e3a<code>RequiredPlugin</code>\u7684\u63d2\u4ef6\uff0c\u8fd9\u4e2a\u63d2\u4ef6\u5c5e\u4e8e\u540e\u7f6e\u5f62\u63d2\u4ef6\uff0c\u6240\u4ee5\u662f\u4ee5<code>post_plugin_list</code>\u6765\u4f20\u5165\u63d2\u4ef6\u3002\u540c\u65f6\uff0c\u7531\u4e8e\u63d2\u4ef6\u662f\u5728\u6536\u5230\u8bf7\u6c42\u7684\u65f6\u5019\u624d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4e3a\u4e86\u9632\u6b62\u591a\u4e2a\u8bf7\u6c42\u5171\u4eab\u5230\u76f8\u540c\u7684\u63d2\u4ef6\u53d8\u91cf\uff0c<code>Pait</code>\u4e0d\u652f\u6301\u76f4\u63a5\u521d\u59cb\u5316\u63d2\u4ef6\uff0c\u800c\u662f\u4f7f\u7528<code>build</code>\u65b9\u6cd5\u6765\u4f7f\u7528\u63d2\u4ef6(\u6240\u4ee5\u4e0d\u4e3a<code>__init__</code>\u65b9\u6cd5\u63d0\u4f9b\u51c6\u786e\u7684\u51fd\u6570\u7b7e\u540d)\u3002</p> <p>\u5982\u679c\u8003\u8651\u5230\u63d2\u4ef6\u7684\u590d\u7528\uff0c\u63a8\u8350\u4f7f\u7528<code>create_factory</code>\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u652f\u6301PEP-612\uff0c\u652f\u6301IDE\u63d0\u9192\u548c\u7c7b\u578b\u68c0\u67e5\uff0c<code>create_factory</code>\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a <pre><code>from pait.util import create_factory\n# \u9996\u5148\u4f20\u5165\u63d2\u4ef6\u7684build\u65b9\u6cd5\uff0c\u5e76\u628abuild\u9700\u8981\u7684\u53c2\u6570\u4f20\u8fdb\u53bb\n# \u7136\u540e\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u65b9\u6cd5\nrequired_plugin = create_factory(RequiredPlugin.build)(required_dict={\"email\": [\"username\"]})\n# \u76f4\u63a5\u8c03\u7528create_factory\u7684\u8fd4\u56de\uff0c\u8fd9\u65f6\u5019\u63d2\u4ef6\u4f1a\u6ce8\u5165\u5230\u8def\u7531\u51fd\u6570\u4e2d\u5e76\u8fdb\u884c\u4e00\u4e9b\u521d\u59cb\u5316\uff0c\u540c\u65f6\u4e5f\u4e0d\u5f71\u54cd\u5176\u5b83\u8def\u7531\u51fd\u6570\u7684\u4f7f\u7528\n@pait(post_plugin_list=[required_plugin()])\ndef demo_1():\npass\n@pait(post_plugin_list=[required_plugin()])\ndef demo_2():\npass\n</code></pre></p>"},{"location":"5_1_introduction/#_3","title":"\u5173\u95ed\u9884\u68c0\u67e5","text":"<p><code>Pait</code>\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u7528\u6765\u88c5\u9970\u8def\u7531\u51fd\u6570\uff0c\u6240\u4ee5\u5728\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u76f4\u63a5\u8fd0\u884c\uff0c\u88c5\u586b\u5404\u79cd\u53c2\u6570\u3002\u4e0d\u8fc7\u5728\u628a\u63d2\u4ef6\u88c5\u586b\u5230\u8def\u7531\u51fd\u6570\u65f6\u4f1a\u8c03\u7528\u5230\u63d2\u4ef6\u7684<code>pre_check</code>\u65b9\u6cd5\uff0c\u5bf9\u7528\u6237\u4f7f\u7528\u63d2\u4ef6\u662f\u5426\u6b63\u786e\u8fdb\u884c\u6821\u9a8c\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801: <pre><code>@pait()\ndef demo(\nuid: str = Body.i(default=None)\n)\n</code></pre> \u5728\u542f\u52a8\u7684\u65f6\u5019\u6838\u5fc3\u63d2\u4ef6\u4f1a\u6821\u9a8c\u5230\u7528\u6237\u586b\u5199\u7684<code>default</code>\u503c\u5e76\u4e0d\u5c5e\u4e8e<code>str</code>\u7c7b\u578b\uff0c\u6240\u4ee5\u4f1a\u629b\u51fa\u9519\u8bef\u3002\u4e0d\u8fc7\u8fd9\u7c7b\u68c0\u67e5\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u7a0b\u5e8f\u7684\u542f\u52a8\u65f6\u95f4\uff0c\u6240\u4ee5\u5efa\u8bae\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u624d\u901a\u8fc7<code>pre_check</code>\u8fdb\u884c\u68c0\u67e5\uff0c\u800c\u5728\u751f\u4ea7\u73af\u5883\u5219\u5173\u95ed\uff0c\u800c\u5173\u95ed\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf<code>PAIT_IGNORE_PRE_CHECK</code>\u4e3aTrue\u5373\u53ef\u5173\u95ed\u68c0\u67e5\u3002</p>"},{"location":"5_2_param_check_plugin/","title":"\u53c2\u6570\u68c0\u67e5\u63d2\u4ef6","text":"<p><code>Pait</code>\u57fa\u4e8e<code>Pydantic</code>\u5b9e\u73b0\u4e86\u5f88\u591a\u53c2\u6570\u6821\u9a8c\u548c\u8f6c\u6362\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5728\u5f00\u53d1API\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f80\u5f80\u8fd8\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u4f9d\u8d56\u76f8\u5173\u7684\u6821\u9a8c\u529f\u80fd\uff0c \u5728<code>Pait</code>\u4e2d\u901a\u8fc7\u540e\u7f6e\u63d2\u4ef6<code>Required</code>\u548c<code>AtMostOneOf</code>\u63d0\u4f9b\u4e24\u79cd\u53c2\u6570\u4f9d\u8d56\u6821\u9a8c\u529f\u80fd\u3002</p>"},{"location":"5_2_param_check_plugin/#required","title":"Required\u63d2\u4ef6","text":"<p>\u5728\u7f16\u5199API\u63a5\u53e3\u65f6\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u4e00\u79cd\u60c5\u51b5\uff0c\u6bd4\u5982\u67d0\u4e2a\u63a5\u53e3\u5b58\u5728\u8bf7\u6c42\u53c2\u6570A\uff0cB\uff0cC\uff0c\u4e00\u822c\u60c5\u51b5\u4e0bB\u548cC\u90fd\u662f\u9009\u586b\uff0c\u4f46\u662f\u53c2\u6570C\u4f9d\u8d56\u4e8e\u53c2\u6570B\uff0c\u4e5f\u5c31\u662f\u53c2\u6570B\u5b58\u5728\u65f6\uff0cC\u624d\u53ef\u4ee5\u5b58\u5728\uff0c \u8fd9\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528<code>Required</code>\u63d2\u4ef6\u914d\u7f6e\u89c4\u5219\u6765\u6ee1\u8db3\u8fd9\u4e00\u4e2a\u6761\u4ef6\uff0c\u5982\u4e0b\u4ee3\u7801\uff1a <pre><code>from typing import Optional\nimport uvicorn  # type: ignore\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nfrom pait.exceptions import TipException\nfrom pait.plugin.required import RequiredPlugin\nfrom pait.app.starlette import pait\nfrom pait import field\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\n\"\"\"\u63d0\u53d6\u5f02\u5e38\u4fe1\u606f\uff0c \u5e76\u4ee5\u54cd\u5e94\u8fd4\u56de\"\"\"\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\n@pait(\npost_plugin_list=[\nRequiredPlugin.build(required_dict={\"email\": [\"user_name\"]})\n]\n)\nasync def demo(\nuid: str = field.Query.i(),\nuser_name: Optional[str] = field.Query.i(default=None),\nemail: Optional[str] = field.Query.i(default=None)\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": user_name, \"email\": email})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> \u8fd9\u4e2a\u51fd\u6570\u672c\u610f\u4e0a\u8981\u6c42\u7684\u662f\u53c2\u6570<code>uid</code>\u4e3a\u5fc5\u586b\u53c2\u6570\uff0c\u800c\u53c2\u6570<code>user_name</code>\u548c<code>email</code>\u662f\u9009\u586b\u53c2\u6570\uff0c\u4f46\u662f\u901a\u8fc7\u4f7f\u7528<code>ReuiredPlugin</code>\u63d2\u4ef6\u540e\u5c31\u4f1a\u65b0\u589e\u4e00\u4e2a\u6821\u9a8c\u903b\u8f91\uff0c \u8fd9\u4e2a\u6821\u9a8c\u903b\u8f91\u662f\u7531\u53c2\u6570<code>required_dict</code>\u5b9a\u4e49\u7684\uff0c\u5b83\u8868\u793a\u7684\u662f\u53c2\u6570<code>email</code>\u5fc5\u987b\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u53c2\u6570\u96c6\u5408\u624d\u53ef\u4ee5\u5b58\u5728\uff0c\u8fd9\u91cc\u5b9a\u4e49\u7684\u96c6\u5408\u53ea\u6709\u4e00\u4e2a\u53c2\u6570--<code>user_name</code></p> <p>\u4f7f\u7528<code>curl</code>\u53d1\u9001\u8bf7\u6c42\u540e\u53ef\u4ee5\u901a\u8fc7\u54cd\u5e94\u7ed3\u679c\u53d1\u73b0\uff0c\u5982\u679c\u8bf7\u6c42\u7684\u53c2\u6570\u53ea\u6709<code>uid</code>\u65f6\u80fd\u6b63\u5e38\u8fd4\u56de\uff0c\u4f46\u8bf7\u6c42\u7684\u53c2\u6570<code>user_name</code>\u4e3a\u7a7a\u65f6\uff0c\u53c2\u6570<code>email</code>\u5fc5\u987b\u4e3a\u7a7a\uff0c\u4e0d\u7136\u4f1a\u62a5\u9519\u3002 <pre><code>\u279c ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\n{\"uid\":\"123\",\"user_name\":null,\"email\":null}%\n\u279c ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;email\\=aaa\n{\"data\":\"email requires param user_name, which if not none\"}%\n\u279c ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;email\\=aaa\\&amp;user_name\\=so1n\n{\"uid\":\"123\",\"user_name\":\"so1n\",\"email\":\"aaa\"}%\n</code></pre></p>"},{"location":"5_2_param_check_plugin/#atmostoneof","title":"AtMostOneOf\u63d2\u4ef6","text":"<p>\u9664\u4e86\u53c2\u6570\u7684\u4e92\u76f8\u4f9d\u8d56\u5916\uff0c\u8fd8\u5b58\u5728\u53c2\u6570\u4e92\u76f8\u6392\u65a5\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u67d0\u4e2a\u63a5\u53e3\u6709\u53c2\u6570A\uff0cB\uff0cC\u4e09\u4e2a\uff0c\u5f53B\u5b58\u5728\u65f6\uff0cC\u5c31\u4e0d\u80fd\u5b58\u5728\uff0cC\u5b58\u5728\u65f6\uff0cB\u5c31\u4e0d\u80fd\u5b58\u5728\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528<code>AtMostOneOf</code>\u63d2\u4ef6\u914d\u7f6e\u89c4\u5219\u6765\u5b9e\u73b0\u529f\u80fd\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>from typing import Optional\nimport uvicorn  # type: ignore\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nfrom pait.exceptions import TipException\nfrom pait.plugin.at_most_one_of import AtMostOneOfPlugin\nfrom pait.app.starlette import pait\nfrom pait import field\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\n\"\"\"\u63d0\u53d6\u5f02\u5e38\u4fe1\u606f\uff0c \u5e76\u4ee5\u54cd\u5e94\u8fd4\u56de\"\"\"\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\n@pait(\npost_plugin_list=[\nAtMostOneOfPlugin.build(at_most_one_of_list=[[\"email\", \"user_name\"]])\n]\n)\nasync def demo(\nuid: str = field.Query.i(),\nuser_name: Optional[str] = field.Query.i(default=None),\nemail: Optional[str] = field.Query.i(default=None)\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": user_name, \"email\": email})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre></p> <p>\u8fd9\u4e2a\u51fd\u6570\u672c\u610f\u4e0a\u8981\u6c42\u7684\u662f\u53c2\u6570<code>uid</code>\u4e3a\u5fc5\u586b\u53c2\u6570\uff0c\u800c\u53c2\u6570<code>user_name</code>\u548c<code>email</code>\u662f\u9009\u586b\u53c2\u6570\uff0c\u4f46\u662f\u901a\u8fc7<code>AtMostOneOfPlugin</code>\u63d2\u4ef6\u540e\u5c31\u4f1a\u65b0\u589e\u4e00\u4e2a\u6821\u9a8c\u903b\u8f91\uff0c \u8fd9\u4e2a\u6821\u9a8c\u903b\u8f91\u662f\u7531\u53c2\u6570<code>at_most_one_of_list</code>\u5b9a\u4e49\u7684\uff0c\u5b83\u8868\u793a\u7684\u662f\u67d0\u4e00\u7ec4\u53c2\u6570\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\uff0c\u8fd9\u91cc\u5b9a\u4e49\u7684\u662f\u53c2\u6570<code>email</code>\u548c<code>user_name</code>\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\u3002</p> <p>\u4f7f\u7528<code>curl</code>\u53d1\u9001\u8bf7\u6c42\u540e\u53ef\u4ee5\u901a\u8fc7\u54cd\u5e94\u7ed3\u679c\u53d1\u73b0\uff0c\u53c2\u6570<code>email</code>\u548c<code>user_name</code>\u5171\u5b58\u65f6\u5019\u4f1a\u8fd4\u56de\u9519\u8bef\uff0c\u5176\u5b83\u60c5\u51b5\u90fd\u80fd\u6b63\u5e38\u8fd4\u56de\u54cd\u5e94\u3002 <pre><code>\u279c ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\n{\"uid\":\"123\",\"user_name\":null,\"email\":null}%\n\u279c ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;email\\=aaa\n{\"uid\":\"123\",\"user_name\":null,\"email\":\"aaa\"}%\n\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\n{\"uid\":\"123\",\"user_name\":\"so1n\",\"email\":null}%\n\u279c ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;email\\=aaa\\&amp;user_name\\=so1n\n{\"data\":\"requires at most one of param email or user_name\"}%\n</code></pre></p>"},{"location":"5_3_json_response_plugin/","title":"Json\u54cd\u5e94\u63d2\u4ef6","text":"<p>\u76ee\u524dAPI\u63a5\u53e3\u7528\u7684\u6700\u591a\u7684\u5e8f\u5217\u5316\u65b9\u5f0f\u5c31\u662fJson\uff0c\u6240\u4ee5\u57fa\u4e8eJson\u54cd\u5e94\u6709\u5f88\u591a\u7279\u522b\u7684\u9700\u6c42\uff0c\u76ee\u524d\uff0c<code>Pait</code>\u81ea\u5e26\u4e86\u51e0\u4e2a\u4e0eJson\u54cd\u5e94\u76f8\u5173\u7684\u63d2\u4ef6\uff0c\u4ed6\u4eec\u90fd\u7528\u5230\u4e86<code>Pait</code>\u88c5\u9970\u5668\u586b\u5199\u7684<code>response_model_list</code>\u3002</p> <p>Note</p> <ul> <li>1.\u7531\u4e8e\u8981\u83b7\u53d6\u5230\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u63d2\u4ef6\u90fd\u4f1a\u4fb5\u5165\u5230\u539f\u6709\u6846\u67b6\uff0c\u5bfc\u81f4\u4f7f\u7528\u65b9\u6cd5\u4e0e\u539f\u6709\u6846\u67b6\u6709\u4e9b\u4e0d\u540c\u3002</li> <li>2.\u8fd9\u51e0\u4e2a\u63d2\u4ef6\u90fd\u8981\u5355\u72ec\u6839\u636e\u4e0d\u540c\u7684Web\u6846\u67b6\u8fdb\u884c\u517c\u5bb9\uff0c\u6240\u4ee5\u8bf7\u4ee5<code>from pait.app.{web framework name}.plugin.{plugin name} import xxx</code>\u7684\u5f62\u5f0f\u6765\u5f15\u5165\u5bf9\u5e94\u7684\u63d2\u4ef6\u3002</li> </ul>"},{"location":"5_3_json_response_plugin/#json","title":"\u6821\u9a8cJson\u54cd\u5e94\u7ed3\u679c\u63d2\u4ef6","text":"<p>\u6821\u9a8cJson\u54cd\u5e94\u7ed3\u679c\u63d2\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u662f\u5728\u6536\u5230\u8fd4\u56de\u54cd\u5e94\u7ed3\u679c\u65f6\uff0c\u5bf9\u54cd\u5e94\u7ed3\u679c\u8fdb\u884c\u6821\u9a8c\uff0c\u5982\u679c\u6821\u9a8c\u6210\u529f\uff0c\u624d\u4f1a\u8fd4\u56de\u54cd\u5e94\uff0c\u5426\u5219\u5c31\u4f1a\u62a5\u9519\u3002 \u4ee5example.param_verify.starlette_example.async_check_json_plugin_route\u4e3a\u4f8b\u5b50\uff1a <pre><code>from typing import Optional\nfrom typing_extensions import TypedDict  # \u5bf9\u4e8ePython3.8\u4ee5\u4e0b\u7684\u53ea\u80fd\u901a\u8fc7typing_extensions\u5f15\u5165\nimport uvicorn  # type: ignore\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nfrom pait.exceptions import TipException\nfrom pait.app.starlette.plugin.check_json_resp import CheckJsonRespPlugin\nfrom example.param_verify.model import UserSuccessRespModel3\nfrom pait.app.starlette import pait\nfrom pait import field\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\n\"\"\"\u63d2\u4ef6\u6821\u9a8c\u4e0d\u901a\u8fc7\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\uff0c\u8be5\u51fd\u6570\u4f1a\u63d0\u53d6\u5f02\u5e38\u4fe1\u606f\uff0c\u5e76\u4ee5\u8fd4\u56de\u5bf9\u5e94\u7684\u9519\u8bef\u4fe1\u606f\"\"\"\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\n_sub_typed_dict = TypedDict(\n\"_sub_typed_dict\",\n{\n\"uid\": int,\n\"user_name\": str,\n\"email\": str,\n},\n)\n_typed_dict = TypedDict(\n\"_typed_dict\",\n{\n\"code\": int,\n\"msg\": str,\n\"data\": _sub_typed_dict,\n},\n)\n@pait(response_model_list=[UserSuccessRespModel3], plugin_list=[CheckJsonRespPlugin.build()])\nasync def demo(\nuid: int = field.Query.i(description=\"user id\", gt=10, lt=1000),\nemail: Optional[str] = field.Query.i(default=\"example@xxx.com\", description=\"user email\"),\nuser_name: str = field.Query.i(description=\"user name\", min_length=2, max_length=4),\nage: int = field.Query.i(description=\"age\", gt=1, lt=100),\ndisplay_age: int = field.Query.i(0, description=\"display_age\"),\n) -&gt; _typed_dict:\n\"\"\"Test json plugin by resp type is typed dict\"\"\"\nreturn_dict: dict = {\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"uid\": uid,\n\"user_name\": user_name,\n\"email\": email,\n},\n}\nif display_age == 1:\nreturn_dict[\"data\"][\"age\"] = age\nreturn return_dict  # type: ignore\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> \u5728\u8fd9\u4e2a\u4ee3\u7801\u4e2d\uff0c\u9996\u5148\u662f\u572823-38\u884c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a<code>_typed_dict</code>\u7c7b\u578b\uff0c\u4ed6\u7684\u7ed3\u6784\u4e0e<code>UserSuccessRespModel3.response_data</code>\u4e00\u6837\uff0c \u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4f1a\u5728<code>demo</code>\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u5b9a\u4e49<code>demo</code>\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e3a <code>_typed_dict</code>\u3002</p> <p>\u5982\u679c\u89c9\u5f97\u91cd\u590d\u5b9a\u4e49\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4ee5\u76f4\u63a5\u586b\u5199\u4e3a<code>dict</code>\uff0c \u4f46\u662f\u8fd9\u6837\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u7c7b\u578b\u68c0\u67e5\u5de5\u5177\u5c31\u6ca1\u529e\u6cd5\u68c0\u67e5\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u662f\u5426\u6b63\u786e\u4e86\u3002</p> <p>\u7136\u540e\u572841\u884c\u4e2d\u5f15\u5165\u4e86\u4e00\u4e2a\u540d\u4e3a<code>CheckJsonRespPlugin</code>\u7684\u63d2\u4ef6\uff0c\u8be5\u63d2\u4ef6\u4f1a\u5728\u542f\u52a8\u7684\u65f6\u5019\u68c0\u67e5\u8def\u7531\u51fd\u6570\u5b9a\u4e49\u7684\u8fd4\u56de\u7c7b\u578b\u4e0e<code>UserSuccessRespModel3.response_data</code>\u662f\u5426\u4e00\u81f4\uff0c\u4e0d\u4e00\u81f4\u5219\u4f1a\u62a5\u9519\u3002 \u7136\u540e\u5b83\u5728\u8fd0\u884c\u65f6\u6821\u9a8c\u8def\u7531\u51fd\u6570\u54cd\u5e94\u7684\u5b57\u5178\u7ed3\u6784\u4e2d\u6bcf\u4e2a\u5b57\u6bb5\u7684\u7c7b\u578b\u662f\u5426\u4e0e<code>UserSuccessRespModel3.response_data</code>\u4e00\u81f4\uff0c\u5982\u679c\u6821\u9a8c\u5931\u8d25\u5219\u8fd4\u56de\u9519\u8bef\uff0c\u6821\u9a8c\u6210\u529f\u5219\u8c03\u7528Web\u6846\u67b6\u5bf9\u5e94\u7684Json\u54cd\u5e94\u5bf9\u8c61\u628a\u6570\u636e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 \u5177\u4f53\u793a\u4f8b\u5982\u4e0b\uff1a <pre><code>\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\n{\"data\":\"1 validation error for ResponseModel\\ndata -&gt; age\\n  field required (type=value_error.missing)\"}%\n\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\\&amp;display_age\\=1\n{\"code\":0,\"msg\":\"\",\"data\":{\"uid\":123,\"user_name\":\"so1n\",\"email\":\"example@xxx.com\",\"age\":18}}%\n</code></pre> \u901a\u8fc7\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u54cd\u5e94\u7ed3\u679c\u4e0e\u5b9a\u4e49\u7684\u54cd\u5e94Model\u4e0d\u5339\u914d\u65f6\uff0c\u4f1a\u76f4\u63a5\u629b\u51fa\u9519\u8bef\uff0c\u5339\u914d\u5219\u6b63\u5e38\u54cd\u5e94\u3002</p>"},{"location":"5_3_json_response_plugin/#json_1","title":"\u81ea\u52a8\u8865\u5168Json\u54cd\u5e94\u7ed3\u679c\u63d2\u4ef6","text":"<p>\u5728\u7f16\u5199API\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u63a5\u53e3\u8fd4\u56de\u7684\u54cd\u5e94\u7ed3\u679c\u5e94\u8be5\u4f1a\u4e0e\u6587\u6863\u63cf\u8ff0\u7684\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u53ef\u80fd\u4f1a\u56e0\u4e3a\u4e00\u4e9b\u7b5b\u9009\u6761\u4ef6\u7684\u4e0d\u540c\u7ecf\u5e38\u5bfc\u81f4\u8fd4\u56de\u7684\u54cd\u5e94\u7ed3\u679c\u662f\u5b9a\u4e49\u54cd\u5e94\u6a21\u578b\u7684\u5b50\u96c6\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5982\u679c\u5ba2\u6237\u7aef\u6ca1\u6709\u505a\u7279\u6b8a\u5904\u7406\u5c31\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u8fd9\u65f6\u53ef\u4ee5\u91c7\u7528\u81ea\u52a8\u8865\u5168Json\u54cd\u5e94\u7ed3\u679c\u63d2\u4ef6\uff0c\u81ea\u52a8\u4e3a\u90a3\u4e9b\u7f3a\u5c11\u7684\u5b57\u6bb5\u8865\u4e0a\u9ed8\u8ba4\u503c\u3002</p> <p>\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u4e3a\u4f8b\u5b50\uff0c\u53bb\u6389\u53d8\u91cf<code>_typed_dict</code>\uff0c\u518d\u628a\u63d2\u4ef6<code>CheckJsonRespPlugin</code>\u66ff\u6362\u4e3a<code>AutoCompleteJsonRespPlugin</code>\uff0c\u4ee3\u7801\u5982\u4e0b: <pre><code>from typing import Optional\nimport uvicorn  # type: ignore\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nfrom pait.exceptions import TipException\nfrom pait.app.starlette.plugin.auto_complete_json_resp import AutoCompleteJsonRespPlugin\nfrom example.param_verify.model import UserSuccessRespModel3\nfrom pait.app.starlette import pait\nfrom pait import field\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\n\"\"\"\u63d0\u53d6\u5f02\u5e38\u4fe1\u606f\uff0c \u5e76\u4ee5\u54cd\u5e94\u8fd4\u56de\"\"\"\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\n@pait(\nresponse_model_list=[UserSuccessRespModel3],\nplugin_list=[AutoCompleteJsonRespPlugin.build()]\n)\nasync def demo(\nuid: int = field.Query.i(description=\"user id\", gt=10, lt=1000),\nemail: Optional[str] = field.Query.i(default=\"example@xxx.com\", description=\"user email\"),\nuser_name: str = field.Query.i(description=\"user name\", min_length=2, max_length=4),\nage: int = field.Query.i(description=\"age\", gt=1, lt=100),\ndisplay_age: int = field.Query.i(0, description=\"display_age\"),\n) -&gt; dict:\n\"\"\"Test json plugin by resp type is typed dict\"\"\"\nreturn_dict: dict = {\n\"code\": 0,\n\"msg\": \"\",\n\"data\": {\n\"uid\": uid,\n\"user_name\": user_name,\n\"email\": email,\n},\n}\nif display_age == 1:\nreturn_dict[\"data\"][\"age\"] = age\nreturn return_dict  # type: ignore\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> \u63a5\u7740\u518d\u8fd0\u884c\u4e0e\u4e0a\u9762\u4f8b\u5b50\u76f8\u540c\u7684\u8bf7\u6c42: <pre><code>\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\\&amp;display_age\\=1\n{\"code\":0,\"msg\":\"\",\"data\":{\"uid\":123,\"user_name\":\"so1n\",\"age\":18,\"email\":\"example@xxx.com\"}}%\n\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\n{\"code\":0,\"msg\":\"\",\"data\":{\"uid\":123,\"user_name\":\"so1n\",\"age\":0,\"email\":\"example@xxx.com\"}}%\n</code></pre> \u901a\u8fc7\u54cd\u5e94\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u54cd\u5e94\u7ed3\u679c\u7684<code>age</code>\u503c\u4e3a\u8c03\u7528\u547d\u4ee4\u65f6\u586b\u5199\u768418\uff0c\u800c\u7b2c\u4e8c\u4e2a\u54cd\u5e94\u7ed3\u679c\u4e2d\u672c\u6765\u662f\u6ca1\u6709<code>age</code>\u5b57\u6bb5\u7684\uff0c\u8be5\u5b57\u6bb5\u503c\u662f\u7531\u63d2\u4ef6<code>AutoCompleteJsonRespPlugin</code>\u6839\u636e<code>age</code>\u7684\u7c7b\u578b\u81ea\u52a8\u586b\u4e0a\u9ed8\u8ba4\u503c0\u3002</p> <p><code>AutoCompleteJsonRespPlugin</code>\u81ea\u52a8\u8865\u5168\u7684\u539f\u7406\u662f\u4ece<code>response_model_list</code>\u4e2d\u9009\u51fa\u5f00\u53d1\u8005\u586b\u5199\u7684\u7b2c\u4e00\u4e2a<code>ResponseModel</code>\uff0c\u6bd4\u5982\u4ee3\u7801\u4e2d\u7684\u4f8b\u5b50\u5c31\u662f<code>UserSuccessRespModel3</code>\uff0c \u7136\u540e\u901a\u8fc7\u8c03\u7528<code>UserSuccessRespModel3</code>\u7684<code>get_default_dict</code>\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u9ed8\u8ba4\u503c\uff0c\u518d\u4e0e\u8def\u7531\u51fd\u6570\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5982\u679c\u53d1\u73b0\u54cd\u5e94\u7684\u6570\u636e\u7ed3\u6784\u7f3a\u5c11\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u5c31\u4f1a\u81ea\u52a8\u8865\u4e0a\u3002 \u5982\u679c\u5f00\u53d1\u8005\u89c9\u5f97\u81ea\u52a8\u751f\u6210\u7684\u9ed8\u8ba4\u503c\u4e0d\u559c\u6b22\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u5b57\u6bb5\u5bf9\u5e94\u7684<code>Field</code>\u6765\u6307\u5b9a\u81ea\u5df1\u60f3\u8981\u7684\u9ed8\u8ba4\u503c\uff0c\u6bd4\u5982\u5bf9<code>UserSuccessRespModel3</code>\u8fdb\u884c\u66f4\u6539: <pre><code>class UserSuccessRespModel3(PaitJsonResponseModel):\nis_core: bool = True\nclass ResponseModel(ResponseModel):  # type: ignore\nclass DataModel(BaseModel):\nuid: int = Field(description=\"user id\", gt=10, lt=1000)\nuser_name: str = Field(description=\"user name\", min_length=2, max_length=4)\nage: int = Field(default=10, description=\"age\", gt=1, lt=100)\nemail: str = Field(description=\"user email\")\ndata: DataModel\ndescription: str = \"success response\"\nresponse_data: Type[BaseModel] = ResponseModel\n</code></pre> \u901a\u8fc7<code>Field</code>\u5b9a\u4e49<code>age</code>\u7684\u9ed8\u8ba4\u503c\u4e3a10,\u518d\u8fd0\u884c\u4e00\u6837\u7684\u8bf7\u6c42\u540e\u53ef\u4ee5\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd4\u56de\u7684<code>age</code>\u9ed8\u8ba4\u503c\u53d8\u4e3a10\uff1a <pre><code>\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\\&amp;display_age\\=1\n{\"code\":0,\"msg\":\"\",\"data\":{\"uid\":123,\"user_name\":\"so1n\",\"age\":18,\"email\":\"example@xxx.com\"}}%\n\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\n{\"code\":0,\"msg\":\"\",\"data\":{\"uid\":123,\"user_name\":\"so1n\",\"age\":10,\"email\":\"example@xxx.com\"}}%\n</code></pre></p>"},{"location":"5_4_mock_json_response_check_plugin/","title":"Mock\u54cd\u5e94\u63d2\u4ef6","text":"<p>\u5728\u5bf9\u63a5\u4e86\u9700\u6c42\u540e\uff0c\u6211\u4eec\u9700\u8981\u5148\u51fa\u4e00\u4efd\u63a5\u53e3\u6587\u6863\u7ed9\u5ba2\u6237\u7aef\u540e\u518d\u7f16\u5199\u63a5\u53e3\u5bf9\u5e94\u7684\u903b\u8f91\u4ee3\u7801\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528<code>Pait</code>\u6765\u88c5\u9970\u4e00\u4e2a\u6ca1\u6709\u903b\u8f91\u529f\u80fd\u7684\u8def\u7531\u51fd\u6570\uff0c \u5e76\u901a\u8fc7<code>Pait</code>\u81ea\u52a8\u751f\u6210\u4e00\u4efdAPI\u6587\u6863\u7ed9\u5ba2\u6237\u7aef\u4f7f\u7528\uff0c\u7136\u540e\u53cc\u65b9\u518d\u4e00\u8d77\u5f00\u53d1\u529f\u80fd\u3002</p> <p>\u4f46\u662f\u5728\u6ca1\u8fbe\u5230\u8054\u8c03\u4e4b\u524d\u5ba2\u6237\u7aef\u5f00\u53d1\u8005\u4e5f\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u6d4b\u8bd5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5ba2\u6237\u7aef\u9700\u8981\u5148\u6839\u636e\u54cd\u5e94Model\u6765\u7f16\u5199\u5bf9\u5e94\u7684Mock\u6570\u636e\uff0c \u8fd9\u6837\u4f1a\u589e\u52a0\u524d\u7aef\u7684\u5de5\u4f5c\u91cf\uff0c\u540c\u65f6\u524d\u7aefMock\u7684\u6570\u636e\u5e76\u4e0d\u4e00\u5b9a\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528<code>MockPlugin</code>\u63d2\u4ef6\u6765\u8ba9\u63a5\u53e3\u63d0\u4f9bMock\u6570\u636e\u3002</p> <p><code>MockPlugin</code>\u63d2\u4ef6\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u4ee3\u7801\u5982\u4e0b: <pre><code>from typing import Optional, Type\nimport uvicorn  # type: ignore\nfrom starlette.applications import Starlette\nfrom starlette.routing import Route\nfrom pait import field\nfrom pait.app.starlette import pait\nfrom pait.app.starlette.plugin.mock_response import MockPlugin\nfrom pait.model.response import PaitJsonResponseModel\nfrom pydantic import BaseModel, Field\nclass UserRespModel(PaitJsonResponseModel):\nis_core: bool = True\nclass ResponseModel(BaseModel):\nclass DataModel(BaseModel):\nuid: int = Field(description=\"user id\", gt=10, lt=1000)\nuser_name: str = Field(description=\"user name\", min_length=2, max_length=4)\nage: int = Field(description=\"age\", gt=1, lt=100)\nemail: str = Field(description=\"user email\")\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"success response\"\nresponse_data: Type[BaseModel] = ResponseModel\n@pait(\nresponse_model_list=[UserRespModel],\nplugin_list=[MockPlugin.build()]\n)\nasync def demo(\nuid: int = field.Query.i(description=\"user id\", gt=10, lt=1000),\nemail: Optional[str] = field.Query.i(default=\"example@xxx.com\", description=\"user email\"),\nuser_name: str = field.Query.i(description=\"user name\", min_length=2, max_length=4),\nage: int = field.Query.i(description=\"age\", gt=1, lt=100),\ndisplay_age: int = field.Query.i(0, description=\"display_age\"),\n) -&gt; dict:\npass\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\nuvicorn.run(app)\n</code></pre> \u8fd9\u4efd\u4ee3\u7801\u4e2d\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8def\u7531\u51fd\u6570\u7b7e\u540d\uff0c\u8be5\u51fd\u6570\u6ca1\u6709\u4efb\u4f55\u903b\u8f91\uff0c\u7136\u540e\u901a\u8fc7<code>pait</code>\u88c5\u9970\u5668\u586b\u5199<code>MockPlugin</code>\u548cResponseModel\uff0c \u5982\u679c\u6709\u591a\u4e2aResponseModel\u7684\u8bdd<code>MockPlugin</code>\u4f1a\u9ed8\u8ba4\u4f7f\u7528\u7b2c\u4e00\u4e2aResponseModel\uff0c\u8fd0\u884c\u8fd9\u4efd\u4ee3\u7801\u540e\u6267\u884c\u5bf9\u5e94\u7684\u8bf7\u6c42\u547d\u4ee4\u53ef\u4ee5\u5f97\u5230\u9ed8\u8ba4\u7684Mock\u54cd\u5e94\uff1a <pre><code>\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\\&amp;display_age\\=1\n{\"code\":0,\"msg\":\"success\",\"data\":{\"uid\":0,\"user_name\":\"\",\"age\":0,\"email\":\"\"}}%\n</code></pre> \u8fd9\u4efd\u9ed8\u8ba4\u7684\u54cd\u5e94\u6570\u636e\u662f<code>MockPlugin</code>\u901a\u8fc7\u8c03\u7528<code>UserRespModel.get_example_value</code>\u751f\u6210\u7684\uff0c\u5982\u679c\u5bf9\u4e8e\u751f\u6210\u7684\u9ed8\u8ba4\u503c\u4e0d\u6ee1\u610f\uff0c \u53ef\u4ee5\u901a\u8fc7<code>Field</code>\u7684<code>example</code>\u6765\u5b9a\u4e49\u4e0d\u540c\u7684\u54cd\u5e94\u503c\uff0c\u6bd4\u5982\u628a<code>UserRespModel</code>\u6539\u6210\u4e0b\u9762\u7684\u6837\u5b50\uff1a <pre><code>import random\nfrom typing import Type\nfrom pait.model.response import PaitJsonResponseModel\nfrom pydantic import BaseModel, Field\n# \u5f15\u5165faker\u5e93\nfrom faker import Faker\nfake = Faker()\nclass UserSuccessRespModel3(PaitJsonResponseModel):\nis_core: bool = True\nclass ResponseModel(BaseModel):  # type: ignore\nclass DataModel(BaseModel):\nuid: int = Field(description=\"user id\", gt=10, lt=1000, example=lambda :random.randint(100000, 900000))\nuser_name: str = Field(description=\"user name\", min_length=2, max_length=4, example=\"so1n\")\nage: int = Field(description=\"age\", gt=1, lt=100, example=18)\nemail: str = Field(description=\"user email\", example=fake.email)\ncode: int = Field(0, description=\"api code\")\nmsg: str = Field(\"success\", description=\"api status msg\")\ndata: DataModel\ndescription: str = \"success response\"\nresponse_data: Type[BaseModel] = ResponseModel\n</code></pre> \u8fd9\u6837\u4e00\u6765\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u6709\u81ea\u5df1\u7684\u751f\u6210\u793a\u4f8b\u503c\u7684\u89c4\u5219\uff0c\u6bd4\u5982\u5b57\u6bb5uid\u5c31\u662f\u968f\u673a\u4ece100000-900000\u4e2d\u6311\u9009\u4e00\u4e2a\u503c\uff0c\u5b57\u6bb5eamil\u5c31\u662f\u901a\u8fc7fake.email\u751f\u6210\u7684\uff0c\u800c\u5b57\u6bb5user_name\u548cage\u5219\u6709\u6307\u5b9a\u7684\u56fa\u5b9a\u503c\uff0c \u901a\u8fc7\u8fd0\u884c\u4ee3\u7801\u540e\u6267\u884c\u8bf7\u6c42\u547d\u4ee4\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd4\u56de\u7684\u793a\u4f8b\u503c\u7b26\u5408\u6211\u4eec\u7684\u5b9a\u4e49: <pre><code>\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\\&amp;display_age\\=1\n{\"code\":0,\"msg\":\"success\",\"data\":{\"uid\":835740,\"user_name\":\"so1n\",\"age\":18,\"email\":\"warnold@example.net\"}}\n\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\\&amp;display_age\\=1\n{\"code\":0,\"msg\":\"success\",\"data\":{\"uid\":203363,\"user_name\":\"so1n\",\"age\":18,\"email\":\"nathanthomas@example.net\"}}\n\u279c  ~ curl http://127.0.0.1:8000/api/demo\\?uid\\=123\\&amp;user_name\\=so1n\\&amp;age\\=18\\&amp;display_age\\=1\n{\"code\":0,\"msg\":\"success\",\"data\":{\"uid\":508769,\"user_name\":\"so1n\",\"age\":18,\"email\":\"reynoldslisa@example.com\"}}\n</code></pre></p>"},{"location":"5_5_cache_response/","title":"\u7f13\u5b58\u63d2\u4ef6","text":""},{"location":"5_5_cache_response/#_1","title":"\u7f13\u5b58\u63d2\u4ef6","text":"<p>\u7f13\u5b58\u63d2\u4ef6\u80fd\u7f13\u5b58\u9664\u6d41\u5f0f\u54cd\u5e94\u610f\u5916\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u540c\u65f6\u4e5f\u80fd\u6839\u636e\u51fd\u6570\u7b7e\u540d\u6765\u81ea\u52a8\u751f\u6210\u7f13\u5b58\u7684Key, \u6240\u4ee5\u7f13\u5b58\u63d2\u4ef6\u5c5e\u4e8e\u540e\u7f6e\u63d2\u4ef6\uff0c\u8fd9\u6837\u624d\u80fd\u8bfb\u53d6\u5230\u51fd\u6570\u7b7e\u540d\u7684\u53c2\u6570\u3002 \u7f13\u5b58\u63d2\u4ef6\u4f7f\u7528\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>import time\nimport aiofiles  # type: ignore\nfrom redis.asyncio import Redis  # type: ignore\nfrom starlette.applications import Starlette\nfrom starlette.responses import PlainTextResponse\nfrom starlette.routing import Route\nfrom pait.app.starlette import pait\nfrom pait.app.starlette.plugin.cache_resonse import CacheResponsePlugin\nfrom pait.model.response import PaitTextResponseModel\n@pait(\nresponse_model_list=[PaitTextResponseModel],\npost_plugin_list=[CacheResponsePlugin.build(cache_time=10)],\n)\nasync def demo() -&gt; PlainTextResponse:\nreturn PlainTextResponse(str(time.time()))\ndef create_app() -&gt; Starlette:\napp: Starlette = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\n# \u5ef6\u540e\u7ed1\u5b9aRedis\u5b9e\u4f8b\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5b9e\u4f8b\u4f7f\u7528\u4e0d\u540c\u7684Redis\u5b9e\u4f8b\nCacheResponsePlugin.set_redis_to_app(app, redis=Redis(decode_responses=True))\nreturn app\nif __name__ == \"__main__\":\nimport uvicorn  # type: ignore\nfrom pait.extra.config import apply_block_http_method_set\nfrom pait.g import config\nconfig.init_config(apply_func_list=[apply_block_http_method_set({\"HEAD\", \"OPTIONS\"})])\nuvicorn.run(create_app(), log_level=\"debug\")\n</code></pre> \u8fd0\u884c\u4ee3\u7801\u540e\u7136\u540e\u8fd0\u884c<code>curl</code>\u547d\u4ee4\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u8fd4\u56de\u7684\u6570\u636e\u90fd\u662f\u4e00\u6837\u7684\uff1a <pre><code>\u279c curl http://127.0.0.1:8000/api/demo\n1652714661.9645622\n\u279c curl http://127.0.0.1:8000/api/demo\n1652714661.9645622\n\u279c curl http://127.0.0.1:8000/api/demo\n1652714661.9645622\n</code></pre></p> <p>\u7f13\u5b58\u63d2\u4ef6\u7684\u7b80\u5355\u4f7f\u7528\u65b9\u6cd5\uff0c\u76ee\u524d\u8fd8\u652f\u6301\u5176\u5b83\u7684\u53c2\u6570\u6765\u62d3\u5c55\u4f7f\u7528\uff0c\u5982\u4e0b\uff1a</p> <ul> <li>redis: \u6307\u5b9a\u63d2\u4ef6\u53ef\u4ee5\u4f7f\u7528\u7684Redis\u5b9e\u4f8b\uff0c\u5efa\u8bae\u901a\u8fc7<code>CacheResponsePlugin.set_redis_to_app</code>\u65b9\u6cd5\u6307\u5b9aRedis\u5b9e\u4f8b\u3002</li> <li>name: \u6307\u5b9a\u8def\u7531\u51fd\u6570\u7684\u7f13\u5b58Key\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4ee5\u51fd\u6570\u540d\u4e3aKey\u3002</li> <li>enable_cache_name_merge_param: \u5982\u679c\u4e3aTrue\uff0c\u7f13\u5b58\u7684Key\u8fd8\u4f1a\u5305\u62ec\u53c2\u6570\u540d\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4e00\u4e2a\u8def\u7531\u51fd\u6570:     <pre><code>@pait(\nresponse_model_list=[PaitTextResponseModel],\npost_plugin_list=[CacheResponsePlugin.build(cache_time=10)],\n)\nasync def demo(uid: str = Query.i(), name: str = Query.i()) -&gt; PlainTextResponse:\nreturn PlainTextResponse(str(time.time()))\n</code></pre>     \u5f53\u8bf7\u6c42\u7684url\u4e2d\u643a\u5e26<code>?uid=10086&amp;name=so1n</code>\u65f6\uff0c\u7f13\u5b58\u63d2\u4ef6\u4f1a\u8ba4\u4e3a\u5f53\u524d\u7684\u7f13\u5b58Key\u4e3a<code>demo:10086:so1n</code></li> <li>include_exc: \u63a5\u6536\u4e00\u4e2a\u5f02\u5e38\u7684\u5143\u7956\uff0c\u5982\u679c\u8def\u7531\u51fd\u6570\u629b\u51fa\u7684\u9519\u8bef\u5c5e\u4e8e\u5f00\u53d1\u8005\u586b\u5199\u7684\u4e00\u79cd\u9519\u8bef\uff0c\u5219\u4f1a\u7f13\u5b58\u8be5\u5f02\u5e38\u3002</li> <li>cache_time: \u7f13\u5b58\u7684\u65f6\u95f4\u3002</li> <li>timeout: \u4e3a\u4e86\u9632\u6b62\u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\u7684\u7f13\u5b58\u51b2\u7a81\uff0c\u7f13\u5b58\u63d2\u4ef6\u91cc\u901a\u8fc7Reids\u9501\u6765\u9632\u6b62\u8d44\u6e90\u7ade\u4e89\u3002timeout\u4ee3\u8868\u8be5\u9501\u7684\u6700\u957f\u6301\u6709\u65f6\u95f4\u3002</li> <li>sleep: \u5f53\u53d1\u73b0\u9501\u88ab\u53e6\u4e00\u4e2a\u8bf7\u6c42\u6301\u6709\u65f6\uff0c\u5f53\u524d\u8bf7\u6c42\u4f1a\u4f11\u7720\u8bbe\u7f6e\u5bf9\u5e94\u7684\u65f6\u95f4\uff0c\u7136\u540e\u518d\u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u9501\u6216\u8005\u8d85\u65f6\u3002</li> <li>blocking_timeout: \u6307\u5c1d\u8bd5\u83b7\u53d6\u9501\u7684\u6700\u957f\u65f6\u95f4\uff0c\u5982\u679c\u4e3aNone\uff0c\u5219\u4f1a\u4e00\u76f4\u7b49\u5f85\u3002</li> </ul>"},{"location":"5_x_how_tp_customize_the_plugin/","title":"\u5982\u4f55\u81ea\u5b9a\u4e49\u63d2\u4ef6","text":"<p><code>Pait</code>\u81ea\u5e26\u662f\u63d2\u4ef6\u5e76\u4e0d\u591a\uff0c\u4f46\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5b9e\u73b0\u63d2\u4ef6\uff0c\u4e0b\u9762\u4ee5\u5f02\u5e38\u6355\u83b7\u63d2\u4ef6\u4e3a\u4f8b\u5b50\u9610\u8ff0\u5982\u4f55\u5236\u4f5c\u4e00\u4e2a\u63d2\u4ef6\u3002</p> <p>\u4e0b\u9762\u6240\u793a\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684API\u63a5\u53e3\uff1a <pre><code>from typing import Optional\nimport uvicorn  # type: ignore\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\nfrom pait.exceptions import TipException\nfrom pait.app.starlette import pait\nfrom pait import field\nasync def api_exception(request: Request, exc: Exception) -&gt; JSONResponse:\n\"\"\"\u63d0\u53d6\u5f02\u5e38\u4fe1\u606f\uff0c \u5e76\u4ee5\u54cd\u5e94\u8fd4\u56de\"\"\"\nif isinstance(exc, TipException):\nexc = exc.exc\nreturn JSONResponse({\"data\": str(exc)})\n@pait()\nasync def demo(\nuid: str = field.Query.i(),\nuser_name: Optional[str] = field.Query.i(default=None),\nemail: Optional[str] = field.Query.i(default=None)\n) -&gt; JSONResponse:\nreturn JSONResponse({\"uid\": uid, \"user_name\": user_name, \"email\": email})\napp = Starlette(routes=[Route(\"/api/demo\", demo, methods=[\"GET\"])])\napp.add_exception_handler(Exception, api_exception)\nuvicorn.run(app)\n</code></pre> \u8fd9\u4e2a\u63a5\u53e3\u7531<code>Pait</code>\u63d0\u4f9b\u53c2\u6570\u6821\u9a8c\u529f\u80fd\uff0c\u5982\u679c\u8c03\u7528\u65b9\u53d1\u8d77\u7684\u53c2\u6570\u6709\u9519\uff0c\u5219\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u5e76\u6700\u7ec8\u88ab<code>starlette</code>\u6355\u83b7\u518d\u5206\u53d1\u5230<code>api_exception</code>\u51fd\u6570\u5904\u7406\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u8bf7\u6c42\uff0c <code>Pait</code>\u5728\u6821\u9a8c\u53d1\u73b0\u7f3a\u5c11\u53c2\u6570uid\u65f6\u4f1a\u629b\u51fa\u9519\u8bef\uff0c\u6700\u540e\u88ab<code>api_exception</code>\u6355\u83b7\u5e76\u628a\u5f02\u5e38\u8fd4\u56de\u7ed9\u8c03\u7528\u65b9\uff1a <pre><code>\u279c  ~ curl http://127.0.0.1:8000/api/demo\n{\"data\":\"Can not found uid value\"}\n</code></pre> \u73b0\u5728\u8be5\u63a5\u53e3\u591a\u4e86\u4e00\u4e2a\u9700\u6c42\uff0c\u9700\u8981\u5bf9\u8be5\u8def\u7531\u51fd\u6570\u7684\u5f02\u5e38\u7684\u5904\u7406\u5b9a\u5236\u5316\uff0c\u751f\u6210\u4e0d\u4e00\u6837\u7684\u8fd4\u56de\u683c\u5f0f\uff0c\u4f46\u662f<code>api_exception</code>\u662f\u7edf\u4e00\u5904\u7406\u6240\u6709\u63a5\u53e3\u51fd\u6570\u7684\u5f02\u5e38\uff0c \u5b83\u4e0d\u53ef\u80fd\u4e3a\u6bcf\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e00\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u5904\u7406\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u5b9a\u5236\u4e00\u4e2a\u6355\u83b7\u5f02\u5e38\u7684\u63d2\u4ef6\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u4e0b\u662f\u4e00\u4e2a\u5355\u72ec\u9488\u5bf9\u8fd9\u4e2a\u63a5\u53e3\u5b9a\u5236\u7684\u63d2\u4ef6\uff1a <pre><code>from typing import Any, Dict\nfrom pait.plugin.base import BasePlugin\nfrom pait.model.core import PaitCoreModel\nfrom pydantic import ValidationError\nfrom pait.exceptions import PaitBaseException\nclass DemoExceptionPlugin(BasePlugin):\nis_pre_core: bool = True\n@classmethod\ndef pre_check(cls, pait_core_model: \"PaitCoreModel\", kwargs: Dict) -&gt; Dict:\nif pait_core_model.func.__name__ != \"demo\":\nraise RuntimeError(f\"The {cls.__name__} is only used for demo func\")\nreturn super().cls_hook_by_core_model(pait_core_model, kwargs)\nasync def __call__(self, *args: Any, **kwargs: Any) -&gt; Any:\ntry:\nreturn await self.call_next(args, kwargs)\nexcept (ValidationError, PaitBaseException) as e:\nreturn JSONResponse({\"plugin exc info\": str(e)})\n</code></pre> \u5728\u8fd9\u4e2a\u793a\u4f8b\u63d2\u4ef6\u4e2d\uff0c\u9700\u8981\u6ce8\u610f\u7684\u6709\u51e0\u4e2a\u5730\u65b9\uff1a</p> <ul> <li>0.\u7531\u4e8e\u8be5\u8def\u7531\u51fd\u6570\u662f<code>async</code>\u7684\uff0c\u6240\u4ee5<code>__call__</code>\u65b9\u6cd5\u9700\u8981\u52a0\u4e0aasync\u3002</li> <li>1.\u7b2c9\u884c\u7684<code>is_pre_core = True</code>\u662f\u8bbe\u7f6e\u8be5\u63d2\u4ef6\u4e3a\u524d\u7f6e\u63d2\u4ef6\uff0c\u8fd9\u6837\u5c31\u80fd\u62e6\u622a<code>Pait</code>\u548c\u8def\u7531\u51fd\u6570\u7684\u5f02\u5e38\u4e86\u3002</li> <li>2.\u7b2c12\u884c\u7684<code>pre_check</code>\u65b9\u6cd5\u4f1a\u8fdb\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u7684\u68c0\u67e5\uff0c\u8be5\u68c0\u67e5\u53ea\u4f1a\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u8fd0\u884c\uff0c\u8fd9\u4e2a\u68c0\u67e5\u7684\u903b\u8f91\u662f\u5982\u679c\u5224\u5b9a\u8be5\u63d2\u4ef6\u5e76\u4e0d\u662f\u6302\u5728<code>demo</code>\u51fd\u6570\u4e0a\u5c31\u4f1a\u629b\u9519\uff0c \u5176\u4e2d<code>pait_core_model</code>\u662f<code>Pait</code>\u4e3a\u8def\u7531\u51fd\u6570\u751f\u6210\u7684\u4e00\u4e9b\u5c5e\u6027\u3002</li> <li>3.\u7b2c17\u884c\u7684<code>__call__</code>\u65b9\u6cd5\u662f\u8be5\u63d2\u4ef6\u7684\u4e3b\u8981\u5904\u7406\u903b\u8f91\uff0c\u5f53\u6709\u8bf7\u6c42\u8fdb\u6765\u65f6\uff0c<code>Pait</code>\u4f1a\u901a\u8fc7<code>__call__</code>\u65b9\u6cd5\u8c03\u7528\u63d2\u4ef6\uff0c\u63d2\u4ef6\u53ef\u4ee5\u901a\u8fc7<code>call_next</code>\u6765\u8c03\u7528\u4e0b\u4e00\u4e2a\u63d2\u4ef6\uff0c \u8be5\u63d2\u4ef6\u901a\u8fc7<code>try...except</code>\u6765\u6355\u83b7\u540e\u7eed\u6240\u6709\u8c03\u7528\u6bb5\u5f02\u5e38\uff0c\u5982\u679c\u662f\u7b26\u5408\u6761\u4ef6\u7684\u5f02\u5e38\u5c31\u4f1a\u88ab\u6355\u83b7\uff0c\u5e76\u751f\u6210\u4e0d\u4e00\u6837\u7684\u54cd\u5e94\u7ed3\u679c\u3002</li> </ul> <p>\u7f16\u5199\u5b8c\u6bd5\u63d2\u4ef6\u540e\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e86\uff0c\u5bf9\u4e0a\u9762\u4ee3\u7801\u8fdb\u884c\u5982\u4e0b\u7684\u5c0f\u66f4\u6539: <pre><code>@pait(plugin_list=[DemoExceptionPlugin.build])\nasync def demo(...): pass\n</code></pre> \u7136\u540e\u91cd\u542f\u7a0b\u5e8f\u5e76\u8fd0\u884c\u540c\u6837\u7684\u8bf7\u6c42\uff0c\u53ef\u4ee5\u53d1\u73b0\u54cd\u5e94\u7ed3\u679c\u5df2\u7ecf\u53d8\u4e3a\u63d2\u4ef6\u81ea\u5df1\u629b\u51fa\u7684\u7ed3\u679c\uff1a <pre><code>\u279c  ~ curl http://127.0.0.1:8000/api/demo\n{\"plugin exc info\":\"File \\\"/home/so1n/demo.py\\\", line 48, in demo.\\nerror:Can not found uid value\"}\n</code></pre></p>"},{"location":"6_config/","title":"config","text":"<p>config\u80fd\u4e3a<code>Pait</code>\u63d0\u4f9b\u4e00\u4e9b\u914d\u7f6e\u652f\u6301, \u6574\u4e2a\u8fd0\u884c\u65f6\u53ea\u5141\u8bb8\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u5efa\u8bae\u5728\u6dfb\u52a0\u5b8c\u6240\u6709\u8def\u7531\u5e76\u4e14\u8c03\u7528<code>load_app</code>\u540e\u518d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5982\u4e0b\u4ee3\u7801\uff1a <pre><code>from starlette.applications import Starlette\nfrom pait.g import config\nfrom pait.app import load_app\n# ------\n# \u901a\u8fc7from ... import \u5bfc\u5165\u8def\u7531\u6a21\u5757\n# ------\napp: Starlette = Starlette()\n# --------\n# app.add_route\n# --------\nload_app(app)\nconfig.init_config(author=(\"so1n\", ))\n# --------\n# run app\n# --------\n</code></pre> \u8be5\u4ee3\u7801\u4e2d\u5728<code>run app</code>\u4ee3\u7801\u5757\u4e4b\u524d\u901a\u8fc7\u8c03\u7528<code>config.init_config</code>\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u76ee\u524d<code>config.init_config</code>\u652f\u6301\u4ee5\u4e0b\u51e0\u4e2a\u53c2\u6570:</p> \u53c2\u6570 \u63cf\u8ff0 author \u5168\u5c40\u7684\u9ed8\u8ba4API\u4f5c\u8005, \u5982\u679c<code>@pait</code>\u4e2d\u6ca1\u6709\u586b\u5199author, \u5219\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684auth\u4e3a<code>config.author</code> status \u5168\u5c40\u7684\u9ed8\u8ba4API\u72b6\u6001, \u5982\u679c<code>@pait</code>\u4e2d\u6ca1\u6709\u586b\u5199status, \u5219\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684status\u4e3a<code>config.status</code> json_type_default_value_dict \u914d\u7f6ejson\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\uff0c\u7528\u4e8ePait\u751f\u6210\u4e00\u4e9b\u9ed8\u8ba4Json\u503c\u3002 python_type_default_valur_dict \u914d\u7f6ePython\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\uff0c\u7528\u4e8ePait\u751f\u6210\u4e00\u4e9bPython\u9ed8\u8ba4\u503c\u3002 json_encoder Pait\u5168\u5c40\u8c03\u7528\u7684Json\u5e8f\u5217\u5316\u7684\u5bf9\u8c61 apply_func_list \u6309\u7167\u4e00\u5b9a\u89c4\u5219\u9002\u914d\u8def\u7531\u51fd\u6570\u5c5e\u6027\u7684\u51fd\u6570\u5217\u8868"},{"location":"6_config/#1apply-func","title":"1.apply func\u4ecb\u7ecd","text":"<p>\u5728\u4f7f\u7528<code>Pait</code>\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u4f9d\u636e\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684\u751f\u547d\u5468\u671f\u6765\u5e94\u7528\u4e0d\u540c\u7684<code>Pait</code>\u5c5e\u6027\uff0c\u6bd4\u5982\u5bf9\u4e8e<code>status</code>\u4e3a<code>design</code>\u7684\u8def\u7531\u51fd\u6570\uff0c\u5f80\u5f80\u4f1a\u4f7f\u7528Mock\u63d2\u4ef6\uff0c\u800c\u5bf9\u4e8e<code>status</code>\u4e3a<code>test</code>\u7684\u8def\u7531\u51fd\u6570\uff0c\u5f80\u5f80\u4f1a\u4f7f\u7528\u54cd\u5e94\u7ed3\u679c\u68c0\u67e5\u7684\u63d2\u4ef6\u7b49\u7b49\uff0c\u6bcf\u6b21\u90fd\u662f\u624b\u52a8\u53bb\u6539\u4f1a\u975e\u5e38\u9ebb\u70e6\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528apply func\u529f\u80fd\u3002</p> <p>Note</p> <p>\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u529f\u80fd\u5c5e\u4e8e\u8def\u7531\u7ec4\u529f\u80fd\uff0c\u6bd5\u7adf\u6700\u7ec8\u7684\u6548\u679c\u662f\u7c7b\u4f3c\u7684\uff0c\u4f46\u8bf7\u4e0d\u8981\u628a\u8be5\u529f\u80fd\u8ba4\u4e3a\u662f\u4e2d\u95f4\u4ef6\u3002</p> <p><code>Pait</code>\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684apply func\uff0c\u6bcf\u4e2aapply func\u53ea\u4f1a\u5e94\u7528\u4e00\u79cd<code>Pait</code>\u5c5e\u6027\uff0c\u6bcf\u4e2aapply func\u7684\u683c\u5f0f\u5982\u4e0b\uff1a <pre><code>from typing import Any, Optional\nfrom pait.model import APPLY_FN\ndef apply_func_demo(\nvalue: Any, match_rule: Optional[\"MatchRule\"] = None\n) -&gt; \"APPLY_FN\":\npass\n</code></pre> \u5b83\u4eec\u90fd\u662f\u63a5\u65362\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u67d0\u4e2a<code>Pait</code>\u5c5e\u6027\u8981\u88ab\u5e94\u7528\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5339\u914d\u89c4\u5219\u3002</p> <p>\u5339\u914d\u89c4\u5219\u662f\u4e00\u4e2a\u540d\u4e3a<code>MatchRule</code>\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u521d\u59cb\u5316\u65f6\u4f1a\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u540d\u4e3a<code>key</code>\uff0c\u53e6\u4e00\u4e2a\u540d\u4e3a<code>target</code>\uff0c\u5176\u4e2dKey\u662f\u6307\u8def\u7531\u51fd\u6570\u5bf9\u5e94<code>Pait</code>\u5c5e\u6027\u7684Key\uff0c\u9ed8\u8ba4\u503c\u4e3a<code>all</code>(\u4ee3\u8868\u6240\u6709\u8def\u7531\u51fd\u6570\u90fd\u5339\u914d)\uff0c\u800ctarget\u5219\u662f\u5bf9\u5e94\u7684\u662f\u5c5e\u6027\u5bf9\u5e94\u7684\u503c\uff0cKey\u76ee\u524d\u652f\u6301\u7684\u503c\u5982\u4e0b\uff1a <pre><code>MatchKeyLiteral = Literal[\n\"all\",              # \u6240\u6709\u8def\u7531\u51fd\u6570\u90fd\u4f1a\u5339\u914d\n\"status\",           # \u8def\u7531\u51fd\u6570\u7684status\u4e3a\u5bf9\u5e94\u503c\u5f97\u90fd\u4f1a\u5339\u914d\n\"group\",            # \u8def\u7531\u51fd\u6570\u7684group\u4e3a\u5bf9\u5e94\u503c\u5f97\u90fd\u4f1a\u5339\u914d\n\"tag\",              # \u8def\u7531\u51fd\u6570\u7684tag\u5305\u542b\u5bf9\u5e94\u503c\u5f97\u90fd\u4f1a\u5339\u914d\n\"method_list\",      # \u8def\u7531\u51fd\u6570\u7684http\u8bf7\u6c42\u65b9\u6cd5\u5305\u542b\u5bf9\u5e94\u503c\u5f97\u90fd\u4f1a\u5339\u914d\n\"path\",             # \u8def\u7531\u51fd\u6570\u7684url\u4e0e\u8f93\u5165\u7684\u6b63\u5219\u5339\u914d\u5230\u7684\u90fd\u4f1a\u5339\u914d\n\"!status\",\n\"!group\",\n\"!tag\",\n\"!method_list\",\n\"!path\",\n]\n</code></pre> \u4ed6\u4eec\u5206\u4e3a\u4e09\u7c7b\uff0c\u4e00\u7c7b\u4e3a<code>all</code>\uff0c\u6bd4\u5982<code>MatchRule(\"all\")</code>\u4ee3\u8868\u6240\u6709\u8def\u7531\u51fd\u6570\u90fd\u4f1a\u5339\u914d\uff0c\u4e00\u7c7b\u4e3a<code>status</code>\u3001<code>group</code>\u3001<code>tag</code>\u3001<code>method_list</code>\u3001<code>path</code>\uff0c\u6bd4\u5982<code>MatchRule(\"group\", \"demo\")</code>\u4ee3\u8868\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684<code>group</code>\u4e3a<code>demo</code>\u65f6\u4f1a\u88ab\u5339\u914d\uff0c \u53e6\u4e00\u7c7b\u5219\u662f\u4ee5<code>!</code>\u5f00\u5934\u7684\uff0c\u4ee3\u8868\u53cd\u5411\u5339\u914d\uff0c\u6bd4\u5982<code>MatchRule(\"!status\", \"test\")</code>\u4ee3\u8868\u662f\u5339\u914d<code>status</code>\u7684\u503c\u4e0d\u662f<code>test</code>\u7684\u8def\u7531\u51fd\u6570\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u5339\u914d\u89c4\u5219\u8fd8\u652f\u6301<code>&amp;</code>\u548c<code>|</code>\u7684\u591a\u89c4\u5219\u5339\u914d\uff0c\u5982\u4e0b\uff1a <pre><code>from pait.extra.config import MatchRule\nfrom pait.model.status import PaitStatus\n# \u5339\u914dstatus\u4e3atest\u6216\u8005\u662fdev\u7684\u8def\u7531\u51fd\u6570\nMatchRule(\"status\", PaitStatus.test) | MatchRule(\"status\", PaitStatus.dev)\n# \u5339\u914dpath\u4e3a/api/user\u4e14 method_list\u4e3aGET\u6216\u8005group\u4e3agRPC\u7684\u8def\u7531\u51fd\u6570\nMatchRule(\"path\", \"/api/user\") &amp; (MatchRule(\"method_list\", \"GET\") | MatchRule(\"group\", \"gRPC\"))\n</code></pre></p> <p>Note</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0capply func\u9075\u5faa\u7684\u4e00\u4e2a\u539f\u5219\u662f\u5bf9\u4e8e\u6570\u7ec4\u7c7b\u578b\u7684\u503c\uff0c\u5b83\u63d0\u4f9b\u7684\u662f\u8ffd\u52a0\uff0c\u800c\u4e0d\u662f\u8986\u76d6\u3002</p>"},{"location":"6_config/#11apply_extra_openapi_model","title":"1.1.apply_extra_openapi_model","text":"<p>\u5728\u4f7f\u7528Web\u6846\u67b6\u7684\u65f6\u5019\uff0c\u7ecf\u5e38\u4f1a\u901a\u8fc7\u4e2d\u95f4\u4ef6\u4f7f\u7528\u5230\u4e00\u4e9b\u975e\u8def\u7531\u51fd\u6570\u58f0\u660e\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u5b83\u4f1a\u901a\u8fc7Header\u83b7\u53d6APP\u7248\u672c\u53f7\u5e76\u6839\u636eAPP\u7248\u672c\u53f7\u6765\u8fdb\u884c\u9650\u5236\uff0c\u7248\u672c\u53f7\u5c0f\u4e8e1\u7684\u90fd\u8fd4\u56de404\uff0c\u5927\u4e8e1\u624d\u901a\u8fc7\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5<code>Pait</code>\u65e0\u6cd5\u83b7\u53d6\u5230\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u4f7f\u7528\u7684\u8bf7\u6c42\u503c\uff0c\u5bfc\u81f4\u751f\u6210OpanAPI\u7684\u6570\u636e\u4f1a\u7f3a\u5c11\u8fd9\u4e9b\u8bf7\u6c42\u503c\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528<code>apply_extra_openapi_model</code>\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a <pre><code>from pydantic import BaseModel\nfrom pait.field import Header\nfrom pait.extra.config import apply_extra_openapi_model\nfrom pait.g import config\nclass DemoModel(BaseModel):\n\"\"\"\u4e2d\u95f4\u4ef6\u4e00\u822c\u90fd\u662f\u901a\u8fc7Header\u8bfb\u53d6\u5bf9\u5e94\u7684\u7248\u672c\u53f7\u503c\"\"\"\nversion_code: int = Header.i(description=\"\u7248\u672c\u53f7\")\nversion_name: str = Header.i(description=\"\u7248\u672c\u540d\u79f0\")\n# \u901a\u8fc7apply_extra_openapi_model\u5e94\u7528\u5f53\u524d\u8fd9\u4e2aModel\uff0c\u7531\u4e8e\u4e2d\u95f4\u4ef6\u90fd\u662f\u5e94\u7528\u5230\u6240\u6709\u7684\u8def\u7531\u51fd\u6570\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528MatchRule\u7684\u9ed8\u8ba4\u503c\u3002\nconfig.init_config(apply_func_list=[apply_extra_openapi_model(DemoModel)])\n</code></pre></p>"},{"location":"6_config/#12apply_response_model","title":"1.2.apply_response_model","text":"<p>\u4e0e<code>apply_extra_openapi_model</code>\u4e00\u6837\uff0c\u5728\u4f7f\u7528\u4e2d\u95f4\u4ef6\u9650\u5236\u7248\u672c\u53f7\u5c0f\u4e8e1\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5185\u90e8\u7684\u54cd\u5e94\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528apply_response_model\u6765\u6dfb\u52a0\u4e00\u4e2a\u9ed8\u8ba4\u7684\u54cd\u5e94\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a <pre><code>from pait.extra.config import apply_response_model\nfrom pait.g import config\nfrom pait.model.response import HtmlResponseModel\nclass DefaultResponseModel(HtmlResponseModel):\nresponse_data: str = \"&lt;h1&gt; Default Html&lt;/h1&gt;\"\n# \u7531\u4e8e\u4e2d\u95f4\u4ef6\u90fd\u662f\u5e94\u7528\u5230\u6240\u6709\u7684\u8def\u7531\u51fd\u6570\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528MatchRule\u7684\u9ed8\u8ba4\u503c\u3002\nconfig.init_config(apply_func_list=[apply_response_model([DefaultResponseModel])])\n</code></pre></p>"},{"location":"6_config/#13apply_block_http_method_set","title":"1.3.apply_block_http_method_set","text":"<p>\u7531\u4e8e<code>Pait</code>\u53ea\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u5b83\u53ea\u80fd\u6355\u83b7\u5230\u8def\u7531\u51fd\u6570\u672c\u8eab\u7684\u5c5e\u6027\uff0c\u50cfURL, HTTP\u65b9\u6cd5\u4e4b\u7c7b\u7684\u53c2\u6570\u9700\u8981\u540e\u7eed\u8c03\u7528<code>load_app</code>\u6765\u8865\u5168\uff0c\u4f46\u662f\u5f88\u591aWeb\u6846\u67b6\u4f1a\u81ea\u52a8\u4e3a\u8def\u7531\u51fd\u6570\u8865\u4e0a<code>HEAD</code>\uff0c<code>OPTIONS</code>\u7b49Http\u65b9\u6cd5\uff0c\u5373\u4f7f\u5f00\u53d1\u8005\u5728\u6ce8\u518c\u8def\u7531\u65f6\u5e76\u6ca1\u6709\u586b\u5199\u3002 \u8fd9\u6837\u4f1a\u5bfc\u81f4\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684OpenAPI\u6570\u636e\u4e5f\u5305\u542b\u4e86<code>HEAD</code>\u548c<code>OPTIONS</code>\u7b49HTTP\u65b9\u6cd5\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528<code>apply_block_http_method_set</code>\u6765\u7981\u7528\u4e00\u4e9bHTTP\u65b9\u6cd5\u65b9\u6cd5\u4e0d\u88ab<code>Pait</code>\u6355\u83b7\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a <pre><code>from pait.extra.config import apply_block_http_method_set\nfrom pait.g import config\nconfig.init_config(apply_func_list=[apply_block_http_method_set({\"HEAD\", \"OPTIONS\"})])\n</code></pre></p>"},{"location":"6_config/#14apply_multi_plugin","title":"1.4.apply_multi_plugin","text":"<p>\u63d2\u4ef6\u662f<code>Pait</code>\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u5176\u4e2d\u6709\u4e9b\u63d2\u4ef6\u53ea\u9002\u7528\u4e8e\u63a5\u53e3\u7684\u67d0\u4e9b\u751f\u547d\u5468\u671f\uff0c\u6240\u4ee5\u8fd9\u7c7b\u63d2\u4ef6\u6bd4\u8f83\u63a8\u8350\u901a\u8fc7<code>apply_multi_plugin</code>\u6839\u636e\u8def\u7531\u51fd\u6570\u7684\u751f\u547d\u5468\u671f\u6765\u4f7f\u7528\u4e0d\u540c\u7684\u63d2\u4ef6\uff0c\u5982\u4e0b: <pre><code>from pait.app.starlette.plugin.mock_response import MockPlugin\nfrom pait.app.starlette.plugin.check_json_resp import CheckJsonRespPlugin\nfrom pait.extra.config import apply_multi_plugin, MatchRule\nfrom pait.g import config\nfrom pait.model.status import PaitStatus\nconfig.init_config(\napply_func_list=[\napply_multi_plugin(\n# \u4e3a\u4e86\u80fd\u590d\u7528\u63d2\u4ef6\uff0c\u8fd9\u91cc\u53ea\u5141\u8bb8lambda\u5199\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528pait\u81ea\u5e26\u7684create_factory\u65b9\u6cd5\n[lambda: MockPlugin.build()],\n# \u9650\u5b9astatus\u4e3adesign\u7684\u4f7f\u7528Mock\u63d2\u4ef6\nmatch_rule=MatchRule(key=\"status\", target=PaitStatus.design)\n),\napply_multi_plugin(\n[lambda: CheckJsonRespPlugin.build()],\n# \u9650\u5b9astatus\u4e3atest\u7684\u4f7f\u7528\u54cd\u5e94\u4f53\u68c0\u67e5\u63d2\u4ef6\nmatch_rule=MatchRule(key=\"status\", target=PaitStatus.test)\n),\n]\n)\n</code></pre></p>"},{"location":"6_config/#15apply_pre_depend","title":"1.5.apply_pre_depend","text":"<p>\u5927\u591a\u6570\u65f6\u5019\u53ef\u80fd\u4f1a\u4e3a\u67d0\u4e00\u7ec4\u8def\u7531\u51fd\u6570\u4f7f\u7528\u4e00\u4e2aToken\u68c0\u9a8c\u51fd\u6570\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u9002\u5408\u4f7f\u7528\u4e2d\u95f4\u4ef6\uff0c\u4f46\u662f\u4e00\u4e2a\u4e00\u4e2a\u8def\u7531\u51fd\u6570\u53bb\u6dfb\u52a0depend\u5374\u662f\u5f88\u9ebb\u70e6\u7684\u4e00\u4ef6\u4e8b\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528<code>apply_pre_depend</code>\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a <pre><code>from pait.extra.config import apply_pre_depend, MatchRule\nfrom pait.field import Header\nfrom pait.g import config\ndef check_token(token: str = Header.i(\"\")) -&gt; bool:\nreturn bool(token)\nconfig.init_config(\napply_func_list=[\n# \u5339\u914durl\u4ee5/api/v1/user\u5f00\u5934\u7684\napply_pre_depend(check_token, match_rule=MatchRule(key=\"path\", target=\"^/api/v1/user\")),\n# \u5339\u914d\u8def\u7531\u51fd\u6570\u7684group\u5c5e\u6027\u4e3auser\u7684\napply_pre_depend(check_token, match_rule=MatchRule(key=\"group\", target=\"user\"))\n],\n)\n</code></pre></p>"},{"location":"6_config/#16apply_default_pydantic_model_config","title":"1.6.apply_default_pydantic_model_config","text":"<p>Note</p> <p>\u5f53\u524d\u7248\u672c\u5e76\u4e0d\u4f1a\u4f7f\u7528<code>BaseConfig</code></p> <p>\u524d\u9762\u8bf4\u5230\uff0c<code>Pait</code>\u5b9e\u9645\u4e0a\u4f1a\u628a\u5f00\u53d1\u8005\u586b\u5199\u7684\u51fd\u6570\u7b7e\u540d\u8f6c\u6362\u4e3a\u4e00\u4e2a<code>pydantic.BaseModel</code>\u518d\u8fdb\u884c\u6821\u9a8c\u548c\u7c7b\u578b\u8f6c\u6362\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6709\u65f6\u5019\u9700\u8981\u4f7f\u7528<code>pydantic.BaseConfig</code>\u529f\u80fd\uff0c\u6bd4\u5982<code>pydantic</code>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u5bf9\u5f00\u53d1\u8005\u586b\u5199\u7684<code>default</code>\u503c\u8fdb\u884c\u6821\u9a8c\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884c\u6821\u9a8c\uff0c\u5219\u9700\u8981\u4f7f\u7528<code>pydantic.BaseConfig</code>\u529f\u80fd\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528<code>apply_default_pydantic_model_config</code>\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a <pre><code>from pait.extra.config import apply_default_pydantic_model_config\nfrom pait.g import config\nfrom pydantic import BaseConfig\nclass MyBaseConfig(BaseConfig):\nvalidate_assignment = True\nconfig.init_config(apply_func_list=[apply_default_pydantic_model_config(MyBaseConfig)])\n</code></pre></p>"},{"location":"7_gRPC_gateway/","title":"gRPC Gateway[Editing]","text":""},{"location":"7_gRPC_gateway/#1","title":"1.\u4ecb\u7ecd","text":"<p>gRPC\u57fa\u4e8eHTTP/2.0\u8fdb\u884c\u901a\u4fe1\uff0c\u7406\u8bba\u4e0a\u5f88\u5bb9\u6613\u81ea\u52a8\u8f6c\u6362\u6210\u4e00\u4e2aRESTful\u63a5\u53e3\uff0c\u6240\u4ee5<code>Go gRPC</code>\u5f88\u5bb9\u6613\u7684\u5c31\u80fd\u5b9e\u73b0<code>gRPC GatwWay</code>\u529f\u80fd\uff0c\u5982grpc-gateway\u3002\u4f46\u662f<code>Python gRPC</code>\u5374\u5f88\u96be\u505a\u5230\uff0c\u56e0\u4e3a\u5b83\u4e0d\u50cf<code>Go gRPC</code>\u4e00\u6837\u662f\u4f7f\u7528Go\u8bed\u8a00\u7f16\u5199\u7684\u5e93\uff0c\u800c\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u540c\u65f6<code>Python gRPC</code>\u63d0\u4f9b\u7684API\u6bd4\u8f83\u5c11\uff0c\u6240\u4ee5<code>Python</code>\u8981\u5199\u4e00\u4e2a\u8f6c\u53d1HTTP\u8bf7\u6c42\u5230gRPC\u670d\u52a1\u6bd4\u8f83\u9ebb\u70e6\uff0c\u800c<code>Pait</code>\u63d0\u4f9b\u7684<code>gRPC GateWay</code>\u529f\u80fd\u53ef\u4ee5\u4e3a\u5f00\u53d1\u8005\u4ee5\u6700\u5c0f\u7684\u4ee3\u7801\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684<code>gRPC Gateway</code>\u3002</p> <p>Note</p> <p><code>Pait</code>\u63d0\u4f9b\u7684<code>gRPC GateWay</code>\u529f\u80fd\u5b9e\u9645\u4e0a\u662f\u7c7b\u4f3c\u4e00\u4e2a\u4ee3\u7406\u670d\u52a1\uff0c\u5b83\u4f1a\u628aHTTP\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\u8f6c\u4e3a\u5bf9\u5e94\u7684Msg\u5bf9\u8c61\uff0c\u518d\u901a\u8fc7channel\u53d1\u9001\u7ed9gRPC\u670d\u52a1\u7aef\uff0c\u6700\u540e\u628agRPC\u670d\u52a1\u7aef\u8fd4\u56de\u7684Msg\u5bf9\u8c61\u8f6c\u4e3a\u6846\u67b6\u5bf9\u5e94\u7684Json\u54cd\u5e94\u8fd4\u56de\u7ed9HTTP\u5ba2\u6237\u7aef\u3002</p>"},{"location":"7_gRPC_gateway/#2","title":"2.\u4f7f\u7528","text":"<p><code>gRPC GateWay</code>\u7684\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c \u4ee3\u7801\u4f8b\u5b50\u5982\u4e0b\uff1a <pre><code>from typing import Any\nimport grpc\nfrom starlette.applications import Starlette\nfrom pait.app.starlette.grpc_route import GrpcGatewayRoute\nfrom pait.app.starlette import AddDocRoute\nfrom pait.util.grpc_inspect.message_to_pydantic import grpc_timestamp_int_handler\n# \u5f15\u5165\u6839\u636eProtobuf\u6587\u4ef6\u751f\u6210\u7684\u5bf9\u5e94\u4ee3\u7801\nfrom example.example_grpc.python_example_proto_code.example_proto.user import user_pb2_grpc\nfrom example.example_grpc.python_example_proto_code.example_proto.book import social_pb2_grpc, manager_pb2_grpc\ndef create_app() -&gt; Starlette:\napp: Starlette = Starlette()\n# \u4e3aapp\u6ce8\u518cUserStub,BookSocialStub\u548cBookManagerStub\u7684\u8def\u7531\u51fd\u6570\ngrpc_gateway_route: GrpcGatewayRoute = GrpcGatewayRoute(\napp,\n# \u4f20\u5165\u5bf9\u5e94\u7684Stub\u7c7b\nuser_pb2_grpc.UserStub,\nsocial_pb2_grpc.BookSocialStub,\nmanager_pb2_grpc.BookManagerStub,\n# \u6307\u5b9aurl\u5f00\u5934\nprefix=\"/api\",\n# \u6307\u5b9a\u751f\u6210\u7684\u8def\u7531\u51fd\u6570\u540d\u7684\u5f00\u5934\ntitle=\"Grpc\",\n# \u5b9a\u4e49\u8def\u7531\u5c5e\u6027\u7684\u89e3\u6790\u65b9\u6cd5\uff0c\u5177\u4f53\u89c1\u4e0b\u9762\u8bf4\u660e\nparse_msg_desc=\"by_mypy\",\n)\ndef _before_server_start(*_: Any) -&gt; None:\n# \u542f\u52a8\u65f6\u6ce8\u518c\u5bf9\u5e94\u7684channel,\u8fd9\u6837\u6ce8\u518c\u7684\u8def\u7531\u51fd\u6570\u5728\u63a5\u6536\u8bf7\u6c42\u65f6\u53ef\u4ee5\u628a\u53c2\u6570\u901a\u8fc7grpc.channel\u4f20\u7ed9grpc\u670d\u52a1\u7aef\ngrpc_gateway_route.init_channel(grpc.aio.insecure_channel(\"0.0.0.0:9000\"))\nasync def _after_server_stop(*_: Any) -&gt; None:\n# \u5173\u95ed\u65f6\u5173\u95ed\u5efa\u7acb\u7684channel\nawait grpc_gateway_route.channel.close()\napp.add_event_handler(\"startup\", _before_server_start)\napp.add_event_handler(\"shutdown\", _after_server_stop)\n# \u6ce8\u518c\u6587\u6863\u8def\u7531\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u7684\u770b\u51faGrpcGateWayRoute\u7684\u8def\u7531\u51fd\u6570\u662f\u4ec0\u4e48\nAddDocRoute(prefix=\"/api-doc\", title=\"Pait Api Doc\").gen_route(app)\nreturn app\nif __name__ == \"__main__\":\nimport uvicorn  # type: ignore\nfrom pait.extra.config import apply_block_http_method_set\nfrom pait.g import config\nconfig.init_config(\napply_func_list=[apply_block_http_method_set({\"HEAD\", \"OPTIONS\"})]\n)\nuvicorn.run(create_app(), log_level=\"debug\")\n</code></pre> \u8fd0\u884c\u4ee3\u7801\u540e\uff0c\u8bbf\u95ee\u5bf9\u5e94\u7684\u94fe\u63a5http://127.0.0.1:8000/api-doc/swagge\u5c31\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u9875\u9762\uff1a </p> <p>\u9875\u9762\u4e2d\u7684API\u90fd\u662f<code>GrpcGatewayRoute</code>\u901a\u8fc7\u89e3\u6790Protobuf\u751f\u6210\u7684Stub\u7c7b\u751f\u6210\u7684\uff0c\u5177\u4f53\u7684Protobuf\u6587\u4ef6\u53ef\u4ee5\u8bbf\u95eeexample_proto\u4e86\u89e3\u3002</p> <p>Note</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u901a\u8fc7<code>GrpcGatewayRoute</code>\u7684<code>init_channel</code>\u65b9\u6cd5\u6307\u5b9agrpc.channel\uff0c\u90a3\u4e48\u8def\u7531\u51fd\u6570\u6536\u5230\u8bf7\u6c42\u540e\u65e0\u6cd5\u628a\u8be5\u8bf7\u6c42\u8f6c\u6210grpc\u8bf7\u6c42\u53d1\u9001\u7ed9\u5bf9\u5e94\u7684gRPC\u670d\u52a1\u3002</p>"},{"location":"7_gRPC_gateway/#3","title":"3.\u53c2\u6570\u4ecb\u7ecd","text":"<p><code>GrpcGatewayRoute</code>\u63d0\u4f9b\u7684\u53c2\u6570\u90fd\u4f1a\u5e94\u7528\u5230\u6240\u6709Stub\u4e2d\uff0c\u5982\u679c\u6bcf\u4e2aStub\u9700\u8981\u5e94\u7528\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u5219\u53ef\u4ee5\u5206\u5f00\u6ce8\u518cStub\uff0c<code>GrpcGatewayRoute</code>\u652f\u6301\u7684\u53c2\u6570\u5982\u4e0b:</p> <ul> <li>app: \u5fc5\u586b\uff0c\u4e14\u5fc5\u987b\u662f\u5bf9\u5e94\u7684app\u5b9e\u4f8b\uff0c<code>GrpcGatewayRoute</code>\u4f1a\u628aStub\u751f\u6210\u7684\u8def\u7531\u51fd\u6570\u6ce8\u518c\u5230\u5bf9\u5e94\u7684app\u5b9e\u4f8b\u4e2d\u3002</li> <li>stub_list: \u652f\u6301\u4e00\u4e2a\u6216\u591a\u4e2a\u7684stub\u53c2\u6570\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f20\u5165\u7684Stub\u5fc5\u987b\u662f\u7531Protobuf\u751f\u6210\u7684gRPC Stub\u7c7b\u3002</li> <li>prefix: \u751f\u6210\u8def\u7531\u51fd\u6570\u7684URL\u524d\u7f00\uff0c\u5047\u5982<code>prefix</code>\u4e3a<code>/api</code>\uff0cStub\u7c7b\u7684\u4e00\u4e2agRPC\u65b9\u6cd5\u5bf9\u5e94\u7684URL\u4e3a<code>/user.User/get_uid_by_token</code>\uff0c\u90a3\u4e48\u751f\u6210\u7684URL\u5219\u662f<code>/api/user.User/get_uid_by_token</code>\u3002</li> <li>title: \u751f\u6210\u8def\u7531\u51fd\u6570\u540d\u662f\u7531title\u4ee5\u53ca\u4e00\u4e2agRPC\u65b9\u6cd5\u7684\u65b9\u6cd5\u540d\u51b3\u5b9a\u7684\uff0c\u5982\u679c\u4e00\u4e2aapp\u5b9e\u4f8b\u7ed1\u5b9a\u8fc7\u4e2a\u76f8\u540c\u7684Stub\u7c7b\uff0c\u5219title\u5fc5\u987b\u4e0d\u540c\u3002\uff08\u5bf9\u4e8e<code>Tornado</code>\uff0c\u662f\u901a\u8fc7title\u548cgRPC\u65b9\u6cd5\u540d\u6765\u5b9a\u4e49\u5bf9\u5e94Handler\u7c7b\u7684\u540d\u79f0\u3002\uff09</li> <li>parse_msg_desc: \u6307\u5b9a\u8981\u89e3\u6790msg\u6ce8\u91ca\u7684\u7c7b\u578b\uff0c\u5982\u679c\u4e0d\u586b\u5219\u4f1a\u89e3\u6790Message\u5bf9\u5e94\u7684Option\uff0c\u5982\u679c\u586b\u5165\u7684\u503c\u4e3a<code>by_mypy</code>\uff0c\u5219\u4f1a\u89e3\u6790\u901a\u8fc7<code>mypy-protobuf</code>\u63d2\u4ef6\u751f\u6210\u7684pyi\u6587\u4ef6\uff0c\u5982\u679c\u586b\u5165\u7684\u662f\u4e00\u4e2a\u8def\u5f84\uff0c\u5219\u4f1a\u89e3\u6790\u5bf9\u5e94\u8def\u5f84\u4e0b\u7684Protobuf\u6587\u4ef6\uff0c\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u89c1:protobuf_to_pydantic\u3002</li> <li>msg_to_dict: \u9ed8\u8ba4\u4e3a<code>google.protobuf.json_format.MessageToDict</code>\u3002\u8def\u7531\u51fd\u6570\u6536\u5230gRPC\u670d\u52a1\u8fd4\u56de\u7684Message\u5bf9\u8c61\u540e\uff0c\u4f1a\u901a\u8fc7msg_to_dict\u8f6c\u4e3aPython\u7684dict\u5bf9\u8c61\uff0c\u518d\u8fd4\u56dejson\u5230\u5ba2\u6237\u7aef\u3002</li> <li>parse_dict: \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u8be5\u53c2\u6570\u4ec5\u652f\u6301<code>google.protobuf.json_format.ParseDict</code>\u4ee5\u53ca\u5b83\u7684\u53d8\u4f53\u3002\u8def\u7531\u51fd\u6570\u6536\u5230HTTP\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u540e\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u6821\u9a8c\uff0c\u7136\u540e\u8f6c\u4e3agRPC\u65b9\u6cd5\u9700\u8981\u7684Message\u5bf9\u8c61\u3002</li> <li>pait: \u7528\u4e8e\u88c5\u9970\u8def\u7531\u51fd\u6570\u7684<code>pait</code>\u88c5\u9970\u5668\u5bf9\u8c61\u3002</li> <li>make_response: \u8d1f\u8d23\u628a\u8def\u7531\u51fd\u6570\u8fd4\u56de\u7684Dict\u5bf9\u8c61\u8f6c\u4e3a\u5bf9\u5e94Web\u6846\u67b6\u7684Json\u54cd\u5e94\u5bf9\u8c61\u3002</li> <li>url_handler: \u7528\u4e8e\u66f4\u6539gRPC\u81ea\u5e26\u7684URL\uff0c\u9ed8\u8ba4\u4f1a\u628agRPC\u65b9\u6cd5\u7684<code>.</code>\u6539\u4e3a<code>-</code>\u3002</li> <li>gen_response_model_handle(0.8\u7248\u672c\u65b0\u589e): \u7528\u4e8e\u751f\u6210\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684Pait\u54cd\u5e94\u5bf9\u8c61\u51fd\u6570\uff0c\u9ed8\u8ba4\u7684\u751f\u6210\u51fd\u6570\u5982\u4e0b\uff1a     <pre><code>def _gen_response_model_handle(grpc_model: GrpcModel) -&gt; Type[PaitBaseResponseModel]:\nclass CustomerJsonResponseModel(PaitJsonResponseModel):\nname: str = grpc_model.response.DESCRIPTOR.name\ndescription: str = grpc_model.response.__doc__ or \"\"\n# Rename it,\n# otherwise it will overwrite the existing scheme with the same name when generating OpenAPI documents.\nresponse_data: Type[BaseModel] = type(\nf\"{grpc_model.method}RespModel\", (msg_to_pydantic_model(grpc_model.response),), {}\n)\nreturn CustomerJsonResponseModel\n</code></pre></li> <li>request_param_field_dict(0.8\u7248\u672c\u79fb\u9664): \u6307\u5b9a\u4e00\u4e2a\u53c2\u6570\u540d\u5bf9\u5e94\u7684field\u5bf9\u8c61\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u662f\u4f1a\u5e94\u7528\u5230\u6240\u6709\u7684Stub\u5bf9\u8c61\u3002</li> <li>grpc_timestamp_handler_tuple(0.8\u7248\u672c\u79fb\u9664): \u8be5\u65b9\u6cd5\u652f\u6301\u4f20\u5165\u4e00\u4e2a(type, callback)\u7684\u6570\u7ec4\uff0ctype\u4ee3\u8868\u5b57\u6bb5\u5bf9\u5e94\u7684\u7c7b\u578b\uff0ccallback\u4ee3\u8868\u8f6c\u6362\u65b9\u6cd5\uff0c\u5b57\u6bb5\u7684\u7c7b\u578b\u4e3aTimestamp\u65f6\u4f1a\u542f\u7528\u3002\u56e0\u4e3agRPC\u7684Timestamp\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ea\u652f\u6301\u5b57\u7b26\u4e32\u8f6c\u6362\uff0c\u6240\u4ee5\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u6765\u652f\u6301\u5176\u5b83\u7c7b\u578b\u8f6c\u4e3agRPC Timestamp\u5bf9\u8c61\uff0c\u6bd4\u5982\u628aint\u7c7b\u578b\u8f6c\u4e3aTimestamp\u5bf9\u8c61\uff0c\u5219\u5bf9\u5e94\u7684callback\u53ef\u4ee5\u5199\u4e3a:     <pre><code>def grpc_timestamp_int_handler(cls: Any, v: int) -&gt; Timestamp:\nt: Timestamp = Timestamp()\nif v:\nt.FromDatetime(datetime.datetime.fromtimestamp(v))\nreturn t\n</code></pre></li> </ul>"},{"location":"7_gRPC_gateway/#4","title":"4.\u5b9a\u4e49\u8def\u7531\u5c5e\u6027","text":"<p>\u901a\u8fc7Swagger\u9875\u9762\u53ef\u4ee5\u53d1\u73b0\uff0cUserStub\u76f8\u5173\u7684\u8def\u7531\u51fd\u6570\u7684url\u4e0e\u5176\u5b83Stub\u7684\u8def\u7531\u51fd\u6570\u4e0d\u4e00\u6837\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728Protobuf\u4e2d\u5b9a\u4e49\u4e86UserStub\u751f\u6210\u8def\u7531\u51fd\u6570\u7684\u4e00\u4e9b\u884c\u4e3a\uff0c\u76ee\u524d\u652f\u6301\u591a\u79cd\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u8def\u7531\u5c5e\u6027\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e24\u79cd\u5e38\u7528\u65b9\u6cd5\u3002</p>"},{"location":"7_gRPC_gateway/#41protobufoption","title":"4.1.\u901a\u8fc7Protobuf\u7684Option\u5b9a\u4e49\u8def\u7531\u7684\u5c5e\u6027(\u63a8\u8350)","text":"<p>Note</p> <p>0.8\u4ee5\u53ca\u540e\u7eed\u7248\u672c\u624d\u652f\u6301\u672c\u529f\u80fd</p> <p>UserStub\u5bf9\u5e94\u7684user.proto\u6587\u4ef6\u7684<code>service</code>\u5757\uff0c\u8fd9\u91cc\u901a\u8fc7Option\u5b9a\u4e49\u4e86UserStub\u8def\u7531\u51fd\u6570\u7684\u884c\u4e3a\uff0c\u5177\u4f53\u5982\u4e0b\uff1a <pre><code>// \u5f15\u5165\u4e86pait.api\u5305\nimport \"example_proto_by_option/common/api.proto\";\nservice User {\n// The interface should not be exposed for external use\nrpc get_uid_by_token (GetUidByTokenRequest) returns (GetUidByTokenResult) {\noption (pait.api.http) = {\nnot_enable: true, // \u5b9a\u4e49\u4e0d\u89e3\u6790\u8be5\u51fd\u6570\ngroup: \"user\", // \u5b9a\u4e49\u51fd\u6570\u7684group\ntag: [{name: \"grpc-user\", desc: \"grpc_user_service\"}]  // \u5b9a\u4e49\u51fd\u6570\u7684\u6807\u7b7e\n};\n};\nrpc logout_user (LogoutUserRequest) returns (google.protobuf.Empty) {\noption (pait.api.http) = {\nsummary: \"User exit from the system\",  // \u5b9a\u4e49\u51fd\u6570\u7684\u7b80\u4ecb\nany: {url: \"/user/logout\"},  // \u5b9a\u4e49\u51fd\u6570\u7684url\u662f\u4ec0\u4e48\uff0cany\u4ee3\u8868\u5177\u4f53\u7684HTTP\u65b9\u6cd5\u7531GrpcGateway\u65b9\u6cd5\u5b9a\u4e49\uff0c\u5982\u679c\u8981\u6307\u5b9aHTTP\u65b9\u6cd5\u4e3aPOST,\u90a3\u4e48\u9700\u8981\u628aany\u66ff\u6362\u4e3apost\ntag: [{name: \"grpc-user\", desc: \"grpc_user_service\"}]\n};\n};\nrpc login_user(LoginUserRequest) returns (LoginUserResult) {\noption (pait.api.http) = {\nsummary: \"User login to system\",\nany: {url: \"/user/login\"},\ntag: [{name: \"grpc-user\", desc: \"grpc_user_service\"}]\n};\n};\nrpc create_user(CreateUserRequest) returns (google.protobuf.Empty) {\noption (pait.api.http) = {\nsummary: \"Create users through the system\",\nany: {url: \"/user/create\"},\ntag: [\n{name: \"grpc-user\", desc: \"grpc_user_service\"},\n{name: \"grpc-user-system\", desc: \"grpc_user_service\"}\n]\n};\n};\nrpc delete_user(DeleteUserRequest) returns (google.protobuf.Empty) {\noption (pait.api.http) = {\ndesc: \"This interface performs a logical delete, not a physical delete\",\nany: {url: \"/user/delete\"},\ntag: [\n{name: \"grpc-user\", desc: \"grpc_user_service\"},\n{name: \"grpc-user-system\", desc: \"grpc_user_service\"}\n]\n};\n};\n}\n</code></pre> \u8fd9\u4efdprotobuf\u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u884c\u5f15\u5165\u4e86<code>pait.api</code>\u5305\uff0c\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u5efa\u8bae\u628a\u8be5\u6587\u4ef6\u4e0b\u8f7d\u5230\u5bf9\u5e94\u7684\u76ee\u5f55\u4e2d\uff0c\u5e76\u5728\u81ea\u5df1\u7684Protobuf\u6587\u4ef6\u4e2d\u5f15\u5165\u8be5\u5305\u3002</p> <p><code>pait.api</code>\u652f\u6301\u7684\u62d3\u5c55\u5c5e\u6027\u5982\u4e0b:</p> <ul> <li>group\uff1a\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684group</li> <li>tag: \u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684tag\u5bf9\u8c61</li> <li>summary: \u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684\u63cf\u8ff0</li> <li>url: \u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684url</li> <li>enable: \u662f\u5426\u8981\u751f\u6210\u5bf9\u5e94\u65b9\u6cd5\u7684\u8def\u7531\uff0c\u9ed8\u8ba4\u4e3afalse</li> <li>additional_bindings: \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8def\u7531\u6620\u5c04\u65b9\u6cd5</li> </ul> <p>\u5176\u4e2durl\u548cadditional_bindings\u7684\u4f7f\u7528\u65b9\u6cd5\u6bd4\u8f83\u7279\u6b8a\uff0c\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a <pre><code>service Demo {\n// http\u65b9\u6cd5\u7531GrpcGateway\u751f\u6210\uff0c\u4f46\u6307\u5b9a\u4e86url\u4e3a/demo\nrpc demo_request_1 (Empty) returns (Empty) {\noption (pait.api.http) = {\nany: {url: \"/demo\"},\n};\n};\nrpc demo_request_2 (Empty) returns (Empty) {\n// \u6307\u5b9ahttp\u65b9\u6cd5\u4e3apost\uff0cURL\u4e3a/demo\noption (pait.api.http) = {\npost: {url: \"/demo\"},\n};\n};\nrpc demo_request_3 (Empty) returns (Empty) {\n// \u6307\u5b9ahttp\u65b9\u6cd5\u4e3apost,\u4f46\u662furl\u91c7\u7528\u4e86gRPC\u751f\u6210\u7684url\noption (pait.api.http) = {\npost: {default: true},\n};\n};\nrpc demo_request_4 (Empty) returns (Empty) {\n// \u6307\u5b9ahttp\u65b9\u6cd5\u4e3aget\uff0cURL\u4e3a/demo\noption (pait.api.http) = {\nget: {url: \"/demo\"},\n};\n// \u989d\u5916\u6620\u5c04\u4e86\u4e00\u4e2ahttp\u65b9\u6cd5\u4e3apost,URL\u4e3a/demo\u7684\u8def\u7531\uff0c\u4e14\u6307\u5b9a\u4e86\u5bf9\u5e94\u7684desc\nadditional_bindings: {\npost: {url: \"/demo1\"},\ndesc: \"test additional bindings\"\n}\n};\n}\n</code></pre></p> <p>Note</p> <p>\u5177\u4f53\u7684\u793a\u4f8b\u6587\u4ef6\u89c1\uff1ahttps://github.com/so1n/pait/tree/master/example/example_grpc/example_proto_by_option</p>"},{"location":"7_gRPC_gateway/#42protobuf","title":"4.2.\u901a\u8fc7Protobuf\u6587\u4ef6\u6ce8\u91ca\u5b9a\u4e49\u8def\u7531\u7684\u5c5e\u6027","text":"<p>UserStub\u5bf9\u5e94\u7684user.proto\u6587\u4ef6\u7684<code>service</code>\u5757\uff0c\u8fd9\u91cc\u901a\u8fc7\u6ce8\u91ca\u5b9a\u4e49\u4e86UserStub\u8def\u7531\u51fd\u6570\u7684\u884c\u4e3a\uff0c\u8fd9\u4e9b\u6ce8\u91ca\u90fd\u662f\u901a\u8fc7<code>pait:</code>\u5f00\u5934\uff0c\u7136\u540e\u8ddf\u7740\u7684\u662f\u4e00\u6bb5json\u6570\u636e\uff0c\u5177\u4f53\u5982\u4e0b\uff1a <pre><code>// \u5b9a\u4e49\u4e86\u6574\u4e2aUser\u670d\u52a1\u751f\u6210\u7684\u8def\u7531\u51fd\u6570\u7684group\u90fd\u662fuser, tag\u90fd\u662fgrpc-user(\u540e\u9762\u8ddf\u7740\u7684grpc_user_service\u662f\u5bf9\u5e94\u7684\u6587\u6863\u63cf\u8ff0)\n// pait: {\"group\": \"user\", \"tag\": [[\"grpc-user\", \"grpc_user_service\"]]}\nservice User {\n// \u5b9a\u4e49\u4e0d\u8981\u751f\u6210get_uid_by_token\u7684\u8def\u7531\u51fd\u6570\n// pait: {\"enable\": false}\nrpc get_uid_by_token (GetUidByTokenRequest) returns (GetUidByTokenResult);\n// \u5b9a\u4e49logout_user \u51fd\u6570\u7684summary\u548curl\n// pait: {\"summary\": \"User exit from the system\", \"url\": \"/user/logout\"}\nrpc logout_user (LogoutUserRequest) returns (google.protobuf.Empty);\n// pait: {\"summary\": \"User login to system\", \"url\": \"/user/login\"}\nrpc login_user(LoginUserRequest) returns (LoginUserResult);\n// pait: {\"tag\": [[\"grpc-user\", \"grpc_user_service\"], [\"grpc-user-system\", \"grpc_user_service\"]]}\n// pait: {\"summary\": \"Create users through the system\", \"url\": \"/user/create\"}\nrpc create_user(CreateUserRequest) returns (google.protobuf.Empty);\n// pait: {\"url\": \"/user/delete\", \"tag\": [[\"grpc-user\", \"grpc_user_service\"], [\"grpc-user-system\", \"grpc_user_service\"]]}\n// pait: {\"desc\": \"This interface performs a logical delete, not a physical delete\"}\nrpc delete_user(DeleteUserRequest) returns (google.protobuf.Empty);\n}\n</code></pre> \u8fd9\u4efd\u6587\u4ef6\u7684\u6ce8\u91ca\u90fd\u662f\u901a\u8fc7<code>pait:</code>\u5f00\u5934\uff0c\u7136\u540e\u8ddf\u7740\u4e00\u6bb5json\u6570\u636e\uff0c\u76ee\u524d\u89e3\u6790\u65b9\u6cd5\u5e76\u4e0d\u662f\u975e\u5e38\u7684\u667a\u80fd\uff0c\u6240\u4ee5\u4e0d\u652f\u6301\u6362\u884c\uff0c\u5982\u679c\u5b9a\u4e49\u7684\u5c5e\u6027\u8fc7\u591a\u5219\u9700\u8981\u53e6\u8d77\u4e00\u884c\u6ce8\u91ca\uff0c\u8fd9\u884c\u6ce8\u91ca\u4e5f\u9700\u8981\u4ee5<code>pait:</code>\u5f00\u5934\uff0c\u540c\u65f6\u6ce8\u91ca\u4e00\u5b9a\u8981\u5199\u5728\u5bf9\u5e94\u65b9\u6cd5\u7684\u524d\u9762\u3002\u5982\u679cservice\u5b9a\u4e49\u4e86\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u800crpc\u65b9\u6cd5\u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u5728\u751f\u4ea7rpc\u65b9\u6cd5\u5bf9\u5e94\u7684\u8def\u7531\u65f6\u4f1a\u91c7\u7528service\u5b9a\u4e49\u7684\u5c5e\u6027\u3002</p> <p>\u76ee\u524d\u652f\u6301\u7684\u53ef\u5b9a\u4e49\u7684\u5c5e\u6027\u5982\u4e0b:</p> <ul> <li>name: \u8def\u7531\u51fd\u6570\u7684\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u5b57\u7b26\u4e32</li> <li>tag: \u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684tag\u5217\u8868\uff0c\u5217\u8868\u5185\u5fc5\u987b\u662f\u4e00\u4e2a\u5143\u7956\uff0c\u5206\u522b\u4e3atag\u7684\u540d\u548ctag\u7684\u63cf\u8ff0</li> <li>group\uff1a\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684group</li> <li>summary: \u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684\u63cf\u8ff0</li> <li>url: \u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684url</li> <li>enable: \u662f\u5426\u8981\u751f\u6210\u5bf9\u5e94\u65b9\u6cd5\u7684\u8def\u7531\uff0c\u9ed8\u8ba4\u4e3afalse</li> </ul> <p>Note</p> <p>\u5177\u4f53\u7684\u793a\u4f8b\u6587\u4ef6\u89c1\uff1ahttps://github.com/so1n/pait/tree/master/example/example_grpc/example_proto</p>"},{"location":"7_gRPC_gateway/#5message","title":"5.\u5b9a\u4e49Message\u7684\u5c5e\u6027","text":"<p>\u5728\u751f\u6210\u8def\u7531\u51fd\u6570\u65f6\uff0c<code>GrpcGatewayRoute</code>\u4f1a\u628a\u65b9\u6cd5\u5bf9\u5e94\u7684\u8bf7\u6c42message\u548c\u54cd\u5e94message\u89e3\u6790\u4e3a\u8def\u7531\u51fd\u6570\u5bf9\u5e94\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u7684\u7c7b\u578b\u90fd\u4e3a<code>pydantic.BaseModel</code>\uff0c\u4e4b\u540e<code>Pait</code>\u5c31\u53ef\u4ee5\u901a\u8fc7\u5bf9\u5e94\u7684<code>pydantic.BaseModel</code>\u5bf9\u8c61\u6765\u751f\u6210\u6587\u6863\u6216\u8005\u505a\u53c2\u6570\u6821\u9a8c\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u6837\u751f\u6210\u7684<code>pydantic.BaseModel</code>\u5bf9\u8c61\u53ea\u6709\u57fa\u672c\u7684\u4fe1\u606f\uff0c\u4e3a\u4e86\u80fd\u8ba9\u751f\u6210\u7684<code>pydantic.BaseModel</code>\u5bf9\u8c61\u66f4\u52a0\u7684\u4e30\u5bcc\uff0c<code>Pait</code>\u901a\u8fc7protobuf_to_pydantic\u6765\u62d3\u5c55<code>pydantic.BaseModel</code>\u5bf9\u8c61\u7684\u4fe1\u606f\u3002</p>"},{"location":"7_gRPC_gateway/#51protobufoptionmessage","title":"5.1.\u901a\u8fc7Protobuf\u7684Option\u5b9a\u4e49Message\u7684\u5c5e\u6027(\u63a8\u8350)","text":"<p>Note</p> <p>0.8\u4ee5\u53ca\u540e\u7eed\u7248\u672c\u624d\u652f\u6301\u672c\u529f\u80fd</p> <p>\u8be5\u65b9\u6cd5\u901a\u8fc7Protobuf\u7684Option\u6765\u62d3\u5c55<code>pydantic.BaseModel</code>\u5bf9\u8c61\u7684\u4fe1\u606f\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u9700\u8981\u628a\u6587\u4ef6\u4e0b\u8f7d\u5230\u81ea\u5df1\u7684\u9879\u76ee\u91cc\u9762\uff0c\u5e76\u5728\u81ea\u5df1\u7684Protobuf\u6587\u4ef6\u4e2d\u5f15\u7528\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>import \"example_proto_by_option/common/p2p_validate.proto\";\n// create user\nmessage CreateUserRequest {\nstring uid = 1 [\n(p2p_validate.rules).string.miss_default = true,  // \u5b9a\u4e49\u4e86\u8be5\u5b57\u6bb5\u6ca1\u6709\u9ed8\u8ba4\u503c\n(p2p_validate.rules).string.example = \"10086\",  // \u5b9a\u4e49\u5b57\u6bb5\u7684\u793a\u4f8b\u503c\u4e3a10086\n(p2p_validate.rules).string.title = \"UID\",  // \u5b9a\u4e49\u4e86\u5b57\u6bb5\u7684Title\u4e3aUID\n(p2p_validate.rules).string.description = \"user union id\" // \u5b9a\u4e49\u4e86\u5b57\u6bb5\u7684desc\n];\nstring user_name = 2 [\n(p2p_validate.rules).string.description = \"user name\",\n(p2p_validate.rules).string.min_length = 1,\n(p2p_validate.rules).string.max_length = 10,\n(p2p_validate.rules).string.example = \"so1n\"\n];\nstring password = 3 [\n(p2p_validate.rules).string.description = \"user password\",\n(p2p_validate.rules).string.alias = \"pw\",\n(p2p_validate.rules).string.min_length = 6,\n(p2p_validate.rules).string.max_length = 18,\n(p2p_validate.rules).string.example = \"123456\"\n];\nSexType sex = 4;\n}\n</code></pre></p> <p>\u4e4b\u540e\u751f\u6210\u7684\u6587\u6863\u4e2d\u5173\u4e8e<code>CreateUserRequest</code>\u7684\u5c55\u793a\u5982\u4e0b: </p> <p>\u8fd9\u79cd\u65b9\u5f0f\u8fd8\u652f\u6301\u5176\u5b83\u7684\u62d3\u5c55\uff0c\u5177\u4f53\u89c1protobuf_to_pydantic\u6587\u6863</p>"},{"location":"7_gRPC_gateway/#52protobufmessage","title":"5.2.\u901a\u8fc7Protobuf\u6587\u4ef6\u6ce8\u91ca\u5b9a\u4e49Message\u7684\u5c5e\u6027","text":"<p>\u8be5\u65b9\u6cd5\u901a\u8fc7\u83b7\u53d6Protobuf\u6587\u4ef6\u7684\u6ce8\u91ca\u6765\u62d3\u5c55<code>pydantic.BaseModel</code>\u5bf9\u8c61\u7684\u4fe1\u606f\uff0c\u6bd4\u5982user.proto\u6587\u4ef6\u7684<code>CreateUserRequest</code>\uff0c\u5b83\u7684\u6ce8\u91ca\u5982\u4e0b\uff1a <pre><code>message CreateUserRequest {\n// \u901a\u5e38Protobuf\u7684Message\u90fd\u6709\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u6307\u5b9amiss_default\u4e3atrue\uff0c\u5219\u4e0d\u4f1a\u4f7f\u7528gRPC\u7684\u9ed8\u8ba4\u503c\n// pait: {\"miss_default\": true, \"example\": \"10086\", \"title\": \"UID\", \"description\": \"user union id\"}\nstring uid = 1;\n// pait: {\"description\": \"user name\"}\n// pait: {\"default\": \"\", \"min_length\": 1, \"max_length\": \"10\", \"example\": \"so1n\"}\nstring user_name = 2;\n// pait: {\"description\": \"user password\"}\n// pait: {\"alias\": \"pw\", \"min_length\": 6, \"max_length\": 18, \"example\": \"123456\"}\nstring password = 3;\nSexType sex = 4;\n}\n// logout user\nmessage LogoutUserRequest {\nstring uid = 1;\n// \u4e0d\u89e3\u6790\u8be5\u5b57\u6bb5\n// pait: {\"enable\": false}\nstring token = 2; }\n</code></pre> \u4e4b\u540e\u751f\u6210\u7684\u6587\u6863\u4e2d\u5173\u4e8e<code>CreateUserRequest</code>\u7684\u5c55\u793a\u5982\u4e0b: </p> <p>\u53ef\u4ee5\u53d1\u73b0Message\u6ce8\u91ca\u7f16\u5199\u7684\u65b9\u6cd5\u4e0eService\u7684\u4e00\u81f4\uff0c\u53ea\u4e0d\u8fc7\u662f\u5c5e\u6027\u4e0d\u540c\uff0cMessage\u652f\u6301\u7684\u5c5e\u6027\u9664\u4e86<code>miss_default</code>\u548c<code>enable</code>\u5916\uff0c\u4e0e<code>Pait</code>\u7684Field\u5bf9\u8c61\u4e00\u81f4\uff0c<code>miss_default</code>\u9ed8\u8ba4\u4e3afalse\uff0c\u5982\u679c\u4e3atrue,\u5219\u4ee3\u8868\u8be5\u5b57\u6bb5\u6ca1\u6709\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u4ee3\u8868\u8be5\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\u4e3aProtobuf\u5bf9\u5e94\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\uff1b<code>enable</code>\u9ed8\u8ba4\u4e3aTrue\uff0c\u5982\u679c\u4e3aFalse\uff0c\u5219\u4e0d\u4f1a\u89e3\u6790\u8be5\u5b57\u6bb5\u3002</p> <p>\u652f\u6301\u7684\u5c5e\u6027\u5217\u8868</p> <ul> <li>miss_default</li> <li>enable</li> <li>example</li> <li>alias</li> <li>title</li> <li>description</li> <li>const</li> <li>gt</li> <li>ge</li> <li>lt</li> <li>le</li> <li>min_length</li> <li>max_length</li> <li>min_items</li> <li>max_items</li> <li>multiple_of</li> <li>regex</li> <li>extra</li> </ul> <p>Note</p> <p>\u66f4\u591a\u4f7f\u7528\u65b9\u6cd5\u89c1protobuf_to_pydantic\u6587\u6863</p>"},{"location":"7_gRPC_gateway/#6gateway-route","title":"6.\u81ea\u5b9a\u4e49<code>Gateway Route</code>\u8def\u7531\u51fd\u6570","text":"<p>\u867d\u7136\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53c2\u6570\u7528\u4e8e<code>Gateway Route</code>\u8def\u7531\u7684\u5b9a\u5236\uff0c\u4f46\u662f\u5149\u9760\u8fd9\u4e9b\u53c2\u6570\u8fd8\u662f\u4e0d\u591f\u7684\uff0c\u6240\u4ee5\u652f\u6301\u5f00\u53d1\u8005\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u6765\u5b9a\u4e49<code>Gateway Route</code>\u8def\u7531\u51fd\u6570\u7684\u6784\u9020\u3002</p> <p>\u6bd4\u5982\u4e0b\u8ff0\u793a\u4f8b\u7684User.proto\u6587\u4ef6: <pre><code>// \u539f\u6587\u4ef6\u89c1\uff1ahttps://github.com/so1n/pait/blob/master/example/example_grpc/example_proto_by_option/user/user.proto\n// logout user\nmessage LogoutUserRequest {\nstring uid = 1;\n// \u4e0d\u89e3\u6790\u8be5\u5b57\u6bb5\nstring token = 2 [(p2p_validate.rules).string.enable = false];\n}\nservice User {\n// The interface should not be exposed for external use\nrpc get_uid_by_token (GetUidByTokenRequest) returns (GetUidByTokenResult) {\noption (pait.api.http) = {\nnot_enable: true,\ngroup: \"user\",\ntag: [{name: \"grpc-user\", desc: \"grpc_user_service\"}]\n};\n};\nrpc logout_user (LogoutUserRequest) returns (google.protobuf.Empty) {\noption (pait.api.http) = {\nsummary: \"User exit from the system\",\nany: {url: \"/user/logout\"},\ntag: [{name: \"grpc-user\", desc: \"grpc_user_service\"}]\n};\n};\nrpc login_user(LoginUserRequest) returns (LoginUserResult) {\noption (pait.api.http) = {\nsummary: \"User login to system\",\nany: {url: \"/user/login\"},\ntag: [{name: \"grpc-user\", desc: \"grpc_user_service\"}]\n};\n};\nrpc create_user(CreateUserRequest) returns (google.protobuf.Empty) {\noption (pait.api.http) = {\nsummary: \"Create users through the system\",\nany: {url: \"/user/create\"},\ntag: [\n{name: \"grpc-user\", desc: \"grpc_user_service\"},\n{name: \"grpc-user-system\", desc: \"grpc_user_service\"}\n]\n};\n};\nrpc delete_user(DeleteUserRequest) returns (google.protobuf.Empty) {\noption (pait.api.http) = {\ndesc: \"This interface performs a logical delete, not a physical delete\",\nany: {url: \"/user/delete\"},\ntag: [\n{name: \"grpc-user\", desc: \"grpc_user_service\"},\n{name: \"grpc-user-system\", desc: \"grpc_user_service\"}\n]\n};\n};\n}\n</code></pre> \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u63a5\u53e3\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a<code>User.get_uid_by_token</code>\u7684\u63a5\u53e3\uff0c\u5b83\u7528\u4e8e\u901a\u8fc7token\u83b7\u53d6uid, \u540c\u65f6\u62e5\u6709\u6821\u9a8cToken\u662f\u5426\u6b63\u786e\u7684\u6548\u679c\uff0c\u8fd9\u4e2a\u63a5\u53e3\u4e0d\u4f1a\u76f4\u63a5\u66b4\u9732\u7ed9\u5916\u90e8\u8c03\u7528\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u901a\u8fc7<code>Gateway Route</code>\u751f\u6210\u5bf9\u5e94\u7684HTTP\u63a5\u53e3\u3002 \u800c\u5176\u5b83\u63a5\u53e3\u88ab\u8c03\u7528\u65f6\uff0c\u9700\u8981\u4eceHeader\u83b7\u53d6Token\u5e76\u901a\u8fc7gRPC\u63a5\u53e3<code>User.get_uid_by_token</code>\u8fdb\u884c\u5224\u65ad\uff0c\u5224\u65ad\u5f53\u524d\u8bf7\u6c42\u7684\u7528\u6237\u662f\u5426\u6b63\u5e38\uff0c\u53ea\u6709\u6821\u9a8c\u901a\u8fc7\u65f6\u624d\u4f1a\u53bb\u8c03\u7528\u5bf9\u5e94\u7684gRPC\u63a5\u53e3\u3002 \u540c\u65f6\uff0c\u63a5\u53e3<code>User.logout_user</code>\u8bf7\u6c42\u4f53<code>LogoutUserRequest</code>\u7684<code>token</code>\u5b57\u6bb5\u88ab\u6807\u6ce8\u4e3a\u4e0d\u89e3\u6790\uff0c\u5e76\u901a\u8fc7Herder\u7684\u83b7\u53d6Token\uff0c\u4f7f\u5176\u8ddf\u5176\u5b83\u63a5\u53e3\u7edf\u4e00\u3002</p> <p>\u63a5\u4e0b\u6765\u5c31\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u6cd5\u6765\u91cd\u65b0\u5b9a\u4e49<code>Gateway Route</code>\u8def\u7531\u51fd\u6570\u7684\u6784\u9020\uff1a <pre><code>from sys import modules\nfrom typing import Callable, Type\nfrom uuid import uuid4\nfrom example.example_grpc.python_example_proto_code.example_proto.user import user_pb2\nfrom pait.util.grpc_inspect.stub import GrpcModel\nfrom pait.util.grpc_inspect.types import Message\nclass CustomerGrpcGatewayRoute(GrpcGatewayRoute):\n# \u7ee7\u627f`GrpcGatewayRoute.gen_route`\u65b9\u6cd5\ndef gen_route(\nself, grpc_model: GrpcModel, request_pydantic_model_class: Type[BaseModel]\n) -&gt; Callable:\n# \u5982\u679c\u4e0d\u662flogin_user\u63a5\u53e3\uff0c\u5c31\u8d70\u81ea\u5b9a\u4e49\u7684\u8def\u7531\u51fd\u6570\nif grpc_model.method!= \"/user.User/login_user\":\nasync def _route(\nrequest_pydantic_model: request_pydantic_model_class,  # type: ignore\ntoken: str = Header.i(description=\"User Token\"),  # \u901a\u8fc7Header\u83b7\u53d6token\nreq_id: str = Header.i(alias=\"X-Request-Id\", default_factory=lambda: str(uuid4())),  # \u901a\u8fc7Header\u83b7\u53d6\u8bf7\u6c42id\n) -&gt; Any:\n# \u83b7\u53d6gRPC\u63a5\u53e3\u5bf9\u5e94\u7684\u8c03\u7528\u51fd\u6570\uff0c\u9700\u8981\u653e\u5728\u6700\u524d\uff0c\u56e0\u4e3a\u5b83\u5305\u62ec\u4e86\u5224\u65adchannel\u662f\u5426\u521b\u5efa\u7684\u903b\u8f91\u3002\nfunc: Callable = self.get_grpc_func(method_name)\nrequest_dict: dict = request_pydantic_model.dict()  # type: ignore\nif method_name == \"/user.User/logout_user\":\n# logout_user\u63a5\u53e3\u9700\u8981\u4e00\u4e2atoken\u53c2\u6570\nrequest_dict[\"token\"] = token\nelse:\n# \u5176\u5b83\u63a5\u53e3\u9700\u8981\u901a\u8fc7\u6821\u9a8cToken\u6765\u5224\u65ad\u7528\u6237\u662f\u5426\u5408\u6cd5\nresult: user_pb2.GetUidByTokenResult = await user_pb2_grpc.UserStub(\nself.channel\n).get_uid_by_token(user_pb2.GetUidByTokenRequest(token=token))\nif not result.uid:\n# \u5982\u679c\u4e0d\u5408\u6cd5\u5c31\u62a5\u9519\nraise RuntimeError(f\"Not found user by token:{token}\")\n# \u5408\u6cd5\u5c31\u8c03\u7528\u5bf9\u5e94\u7684gRPC\u63a5\u53e3\nrequest_msg: Message = self.get_msg_from_dict(grpc_model.request, request_dict)\n# \u6dfb\u52a0\u4e00\u4e2a\u8bf7\u6c42ID\u7ed9gRPC\u670d\u52a1\ngrpc_msg: Message = await func(request_msg, metadata=[(\"req_id\", req_id)])\nreturn self._make_response(self.get_dict_from_msg(grpc_msg))\n# \u7531\u4e8erequest_pydantic_model_class\u662f\u5728\u7236\u7c7b\u751f\u6210\u7684\uff0c\u6240\u4ee5Pait\u5728\u517c\u5bb9\u5ef6\u8fdf\u6ce8\u91ca\u65f6\u83b7\u53d6\u4e0d\u5230\u8be5\u6a21\u5757\u7684request_pydantic_model_class\u503c\uff0c\n# \u6240\u4ee5\u8981\u628arequest_pydantic_model_class\u6ce8\u5165\u672c\u6a21\u5757\uff0c\u5728\u4e0b\u4e00\u4e2a\u7248\u672c`GrpcGatewayRoute`\u4f1a\u81ea\u52a8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\nmodules[_route.__module__].__dict__[\"request_pydantic_model_class\"] = request_pydantic_model_class\nreturn _route\nelse:\n# login_user\u63a5\u53e3\u5219\u8d70\u81ea\u52a8\u751f\u6210\u903b\u8f91\u3002\nreturn super().gen_route(grpc_model, request_pydantic_model_class)\n</code></pre> \u4e4b\u540e\u5c31\u53ef\u4ee5\u8ddf\u539f\u6765\u4f7f\u7528<code>GrpcGatewayRoute</code>\u7684\u65b9\u6cd5\u4e00\u6837\u4f7f\u7528\u6211\u4eec\u65b0\u521b\u5efa\u7684<code>CustomerGrpcGatewayRoute</code>\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6548\u679c\uff1a  \u53ef\u4ee5\u770b\u5230<code>/api/user/login</code>\u548c<code>/api/user/create</code>\u6ca1\u6709\u4ec0\u4e48\u53d8\u5316\uff0c\u800c<code>/api/user/logout</code>\u9700\u8981\u901a\u8fc7Header\u83b7\u53d6token\u548c<code>X-Request-ID</code></p>"},{"location":"8_other/","title":"\u5176\u5b83","text":""},{"location":"8_other/#1","title":"1.\u9690\u5f0f\u5f15\u5165\u4e0e\u663e\u5f0f\u5f15\u5165","text":"<p><code>pait</code>\u652f\u6301\u591a\u4e2aWeb\u6846\u67b6, \u5982\u679c\u9879\u76ee\u5bf9\u5e94\u7684\u4f9d\u8d56\u73af\u5883\u4e2d\u53ea\u5b89\u88c5\u4e86\u5176\u4e2d\u7684\u4e00\u4e2a\u6846\u67b6, \u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u9690\u5f0f\u5f15\u5165: <pre><code>from pait.app import pait, load_app, add_simple_route\n</code></pre> \u4f46\u662f\u5982\u679c\u540c\u65f6\u5b89\u88c5\u4e86\u591a\u4e2a\u6846\u67b6, \u90a3\u4e48\u4e0a\u9762\u7684\u5bfc\u5305\u65b9\u5f0f\u5c06\u4f1a\u5f15\u53d1\u5f02\u5e38, \u5efa\u8bae\u4f7f\u7528\u663e\u793a\u5f15\u5165\uff0c\u5982\u4e0b: <pre><code>from pait.app.flask import pait, load_app, add_simple_route\nfrom pait.app.sanic import pait, load_app, add_simple_route\nfrom pait.app.starlette import pait, load_app, add_simple_route\nfrom pait.app.tornado import pait, load_app, add_simple_route\n</code></pre></p>"},{"location":"8_other/#2","title":"2.\u5185\u90e8\u65b9\u6cd5","text":"<p><code>Pait</code>\u5185\u90e8\u5c01\u88c5\u4e86\u4e00\u4e9b\u901a\u7528\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u4e0d\u8003\u8651\u517c\u5bb9\u4e0d\u540c\u7684Web\u6846\u67b6\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u7684\u5f00\u53d1\u51fa\u62d3\u5c55\u5305\uff0c\u6216\u8005\u5bf9<code>Pait</code>\u8fdb\u884c\u62d3\u5c55\uff0c OpenAPI\u8def\u7531\u548cgRPCGateway\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e9b\u65b9\u6cd5\u5f00\u53d1\u7684\u3002</p>"},{"location":"8_other/#21data","title":"2.1.data","text":"<p><code>data</code>\u662f<code>Pait</code>\u7684\u6570\u636e\u8f7d\u4f53\uff0c<code>Pait</code>\u5728\u88c5\u9970\u8def\u7531\u51fd\u6570\u65f6\u751f\u6210\u7684\u6570\u636e\u4f1a\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5219\u5b58\u653e\u5728<code>pait.g.data</code>\u4e2d\uff0c\u4ee5\u4fbf\u4e3a\u540e\u7eed\u7684\u914d\u7f6e\uff0c\u6587\u6863\u751f\u6210\u7b49\u529f\u80fd\u63d0\u4f9b\u652f\u6301\u3002</p>"},{"location":"8_other/#22load_app","title":"2.2.load_app","text":"<p>data\u4f1a\u5b58\u50a8\u5f88\u591a\u8def\u7531\u51fd\u6570\u7684\u4fe1\u606f, \u4f46\u662f\u4f1a\u7f3a\u5c11\u5173\u952e\u7684OpenAPI\u4fe1\u606f\u6570\u636e\u5982<code>url</code>, <code>method</code>\u7b49\uff0c \u6240\u4ee5\u5728\u4f7f\u7528OpenAPI\u4e4b\u524d\u8fd8\u9700\u8981\u4f7f\u7528<code>load_app</code>\u628a\u76f8\u5173\u53c2\u6570\u4e0e<code>pait</code>\u88c5\u9970\u5668\u88c5\u9970\u7684\u8def\u7531\u51fd\u6570\u6570\u636e\u5728data\u4e2d\u7ed1\u5b9a\uff0c\u4f7f\u7528\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u4e0d\u8fc7\u5b83\u4e00\u5b9a\u8981\u5728\u6ce8\u518c\u6240\u6709\u8def\u7531\u540e\u518d\u8c03\u7528\uff0c\u5982\u4e0b:</p> FlaskStarletteSanicTornado <pre><code>from flask import Flask\nfrom pait.app.flask import load_app\napp: Flask = Flask()\nload_app(app) # \u9519\u8bef\u7684\u4f7f\u7528\u65b9\u6cd5\n# --------\n# app.add_url_rule\n# --------\nload_app(app) # \u6b63\u786e\u7684\u4f7f\u7528\u65b9\u6cd5\napp.run()\n</code></pre> <pre><code>import uvicorn\nfrom starlette.applications import Starlette\nfrom pait.app.starlette import load_app\napp: Starlette = Starlette()\n# \u9519\u8bef\u7684\u4f7f\u7528\u65b9\u6cd5\nload_app(app)\n# --------\n# app.add_route\n# --------\n# \u6b63\u786e\u7684\u4f7f\u7528\u65b9\u6cd5\nload_app(app)\nuvicorn.run(app)\n</code></pre> <pre><code>from sanic import Sanic\nfrom pait.app.sanic import load_app\napp: Sanic = Sanic()\nload_app(app) # \u9519\u8bef\u7684\u4f7f\u7528\u65b9\u6cd5\n# --------\n# app.add_route\n# --------\nload_app(app) # \u6b63\u786e\u7684\u4f7f\u7528\u65b9\u6cd5\napp.run()\n</code></pre> <pre><code>from tornado.web import Application\nfrom tornado.ioloop import IOLoop\nfrom pait.app.tornado import load_app\napp: Application = Application()\nload_app(app) # \u9519\u8bef\u7684\u4f7f\u7528\u65b9\u6cd5\n# --------\n# app.add_handlers\n# --------\nload_app(app) # \u6b63\u786e\u7684\u4f7f\u7528\u65b9\u6cd5\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>Note</p> <p>OpenAPI\u6a21\u5757\u5728\u521d\u59cb\u5316\u4e4b\u524d\u4e5f\u4f1a\u901a\u8fc7<code>load_app</code>\u65b9\u6cd5\u52a0\u8f7d\u6570\u636e</p>"},{"location":"8_other/#23http","title":"2.3.HTTP\u9519\u8bef\u5f02\u5e38","text":"<p><code>Pait</code>\u4e3a\u6bcf\u4e2aWeb\u6846\u67b6\u5c01\u88c5\u4e86\u4e00\u4e2aHTTP\u5f02\u5e38\u751f\u6210\u51fd\u6570\uff0c\u5b83\u4eec\u901a\u8fc7HTTP\u72b6\u6001\u7801\uff0c\u9519\u8bef\u5185\u5bb9\uff0cHeaders\u7b49\u53c2\u6570\u751f\u6210Web\u6846\u67b6\u7684HTTP\u6807\u51c6\u5f02\u5e38\uff0c\u5e38\u7528\u4e8e\u8eab\u4efd\u6821\u9a8c\u7b49\u6a21\u5757\uff0c\u5b83\u4eec\u7684\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b:</p> FlaskSanicStarletteTornado <pre><code>from pait.app.flask import http_exception\nhttp_exception(status_code=401, message=\"Unauthorized\", headers={\"WWW-Authenticate\": \"Basic\"})\n</code></pre> <pre><code>from pait.app.sanic import http_exception\nhttp_exception(status_code=401, message=\"Unauthorized\", headers={\"WWW-Authenticate\": \"Basic\"})\n</code></pre> <pre><code>from pait.app.starlette import http_exception\nhttp_exception(status_code=401, message=\"Unauthorized\", headers={\"WWW-Authenticate\": \"Basic\"})\n</code></pre> <pre><code>from pait.app.tornado import http_exception\nhttp_exception(status_code=401, message=\"Unauthorized\", headers={\"WWW-Authenticate\": \"Basic\"})\n</code></pre> <p>\u6b64\u5916\uff0c<code>Pait</code>\u8fd8\u63d0\u4f9b\u4e86\u4e00\u5957\u5e38\u89c1\u7684HTTP\u5f02\u5e38\u54cd\u5e94\u7684Model\uff0c\u5982\u4e0b: <pre><code>from pait.app import pait\nfrom pait.model import response\n# response.Http400RespModel\n# response.Http401RespModel\n# response.Http403RespModel\n# response.Http404RespModel\n# response.Http405RespModel\n# response.Http406RespModel\n# response.Http407RespModel\n# response.Http408RespModel\n# response.Http429RespModel\n@pait(response_model_list=[response.Http400RespModel])\ndef demo() -&gt; None:\npass\n</code></pre> \u540c\u65f6HTTP\u5f02\u5e38\u54cd\u5e94\u7684Model\u4e5f\u652f\u6301\u81ea\u5b9a\u4e49\u521b\u5efa\uff0c\u5982\u4e0b\u4f7f\u7528\u793a\u4f8b: <pre><code>from pait.model import response\n# \u521b\u5efa\u4e00\u4e2a\u72b6\u6001\u7801\u4e3a500,content-type\u4e3ahtml\u7684\u54cd\u5e94Model\nresponse.HttpStatusCodeBaseModel.clone(resp_model=response.HtmlResponseModel, status_code=500)\n# \u521b\u5efa\u4e00\u4e2a\u72b6\u6001\u7801\u4e3a500,content-type\u4e3atext\u7684\u54cd\u5e94Model\nresponse.HttpStatusCodeBaseModel.clone(resp_model=response.TextResponseModel, status_code=500)\n</code></pre></p>"},{"location":"8_other/#24simpleroute","title":"2.4.SimpleRoute","text":"<p><code>Pait</code>\u9664\u4e86\u7edf\u4e00\u4e86\u4e0d\u540cWeb\u6846\u67b6\u7684\u8bf7\u6c42\u5904\u7406\u5916\uff0c\u8fd8\u901a\u8fc7SimpleRoute\u7edf\u4e00\u4e86\u4e0d\u540cWeb\u6846\u67b6\u7684\u8def\u7531\u6ce8\u518c\u65b9\u6cd5\u4ee5\u53ca\u8def\u7531\u751f\u6210\u54cd\u5e94\u7684\u65b9\u6cd5\u3002 \u5f00\u53d1\u8005\u901a\u8fc7SimpleRoute\u53ef\u4ee5\u5728\u4e0d\u8003\u8651\u517c\u5bb9\u7684\u60c5\u51b5\u4e0b\u5f88\u65b9\u4fbf\u7684\u5b8c\u6210\u8def\u7531\u7f16\u5199\u548c\u6ce8\u518c\u529f\u80fd\uff0c \u6bd4\u5982<code>gRPC Gateway</code>\u548cOpenAPI\u8def\u7531\u529f\u80fd\u5b8c\u5168\u4f7f\u7528SimpleRoute\u7684\u65b9\u5f0f\u7f16\u5199\u8def\u7531\uff0c\u5e76\u7531SimpleRoute\u6ce8\u518c\u5230\u5bf9\u5e94\u7684Web\u6846\u67b6\u4e2d\uff0c\u8282\u7701\u4e86\u5f88\u591a\u5de5\u4f5c\u91cf\u3002</p> <p>Note</p> <p>\u7edf\u4e00\u7684\u8def\u7531\u751f\u6210\u54cd\u5e94\u529f\u80fd\u7531<code>UnifiedResponsePluginProtocol</code>\u63d2\u4ef6\u63d0\u4f9b\uff0cSimpleRoute\u5728\u6ce8\u518c\u8def\u7531\u51fd\u6570\u65f6\u4f1a\u4e3a\u8def\u7531\u51fd\u6570\u4f7f\u7528<code>UnifiedResponsePluginProtocol</code>\u63d2\u4ef6</p> <p>SimpleRoute\u7684\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b:</p> FlaskStarletteSanicTornado docs_source_code/other/flask_with_simple_route_demo.py<pre><code>from flask import Flask\nfrom pait.app import SimpleRoute, add_multi_simple_route, add_simple_route\nfrom pait.app.flask import pait\nfrom pait.model import response\n@pait(response_model_list=[response.JsonResponseModel])\ndef json_route() -&gt; dict:\nreturn {}\n@pait(response_model_list=[response.TextResponseModel])\ndef text_route() -&gt; str:\nreturn \"demo\"\n@pait(response_model_list=[response.HtmlResponseModel])\ndef html_route() -&gt; str:\nreturn \"&lt;h1&gt;demo&lt;/h1&gt;\"\napp: Flask = Flask(\"demo\")\nadd_simple_route(app, SimpleRoute(route=json_route, url=\"/json\", methods=[\"GET\"]))\nadd_multi_simple_route(\napp,\nSimpleRoute(route=json_route, url=\"/json\", methods=[\"GET\"]),\nSimpleRoute(route=text_route, url=\"/text\", methods=[\"GET\"]),\nSimpleRoute(route=html_route, url=\"/html\", methods=[\"GET\"]),\nprefix=\"/api\",\ntitle=\"api\",\n)\napp.run(port=8000)\n</code></pre> docs_source_code/other/starlette_with_simple_route_demo.py<pre><code>import uvicorn\nfrom pait.app import SimpleRoute, add_multi_simple_route, add_simple_route\nfrom pait.app.starlette import pait\nfrom pait.model import response\nfrom starlette.applications import Starlette\n@pait(response_model_list=[response.JsonResponseModel])\nasync def json_route() -&gt; dict:\nreturn {}\n@pait(response_model_list=[response.TextResponseModel])\nasync def text_route() -&gt; str:\nreturn \"demo\"\n@pait(response_model_list=[response.HtmlResponseModel])\nasync def html_route() -&gt; str:\nreturn \"&lt;h1&gt;demo&lt;/h1&gt;\"\napp: Starlette = Starlette()\nadd_simple_route(app, SimpleRoute(route=json_route, url=\"/json\", methods=[\"GET\"]))\nadd_multi_simple_route(\napp,\nSimpleRoute(route=json_route, url=\"/json\", methods=[\"GET\"]),\nSimpleRoute(route=text_route, url=\"/text\", methods=[\"GET\"]),\nSimpleRoute(route=html_route, url=\"/html\", methods=[\"GET\"]),\nprefix=\"/api\",\ntitle=\"api\",\n)\nuvicorn.run(app)\n</code></pre> docs_source_code/other/sanic_with_simple_route_demo.py<pre><code>import uvicorn\nfrom pait.app import SimpleRoute, add_multi_simple_route, add_simple_route\nfrom pait.app.sanic import pait\nfrom pait.model import response\nfrom sanic import Sanic\nfrom sanic.request import Request\n@pait(response_model_list=[response.JsonResponseModel])\nasync def json_route(request: Request) -&gt; dict:\nreturn {}\n@pait(response_model_list=[response.TextResponseModel])\nasync def text_route(request: Request) -&gt; str:\nreturn \"demo\"\n@pait(response_model_list=[response.HtmlResponseModel])\nasync def html_route(request: Request) -&gt; str:\nreturn \"&lt;h1&gt;demo&lt;/h1&gt;\"\napp: Sanic = Sanic(\"demo\")\nadd_simple_route(app, SimpleRoute(route=json_route, url=\"/json\", methods=[\"GET\"]))\nadd_multi_simple_route(\napp,\nSimpleRoute(route=json_route, url=\"/json\", methods=[\"GET\"]),\nSimpleRoute(route=text_route, url=\"/text\", methods=[\"GET\"]),\nSimpleRoute(route=html_route, url=\"/html\", methods=[\"GET\"]),\nprefix=\"/api\",\ntitle=\"api\",\n)\nuvicorn.run(app)\n</code></pre> docs_source_code/other/tornado_with_simple_route_demo.py<pre><code>from pait.app import SimpleRoute, add_multi_simple_route, add_simple_route\nfrom pait.app.tornado import pait\nfrom pait.model import response\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application\n@pait(response_model_list=[response.JsonResponseModel])\nasync def json_route() -&gt; dict:\nreturn {}\n@pait(response_model_list=[response.TextResponseModel])\nasync def text_route() -&gt; str:\nreturn \"demo\"\n@pait(response_model_list=[response.HtmlResponseModel])\nasync def html_route() -&gt; str:\nreturn \"&lt;h1&gt;demo&lt;/h1&gt;\"\napp: Application = Application()\nadd_simple_route(app, SimpleRoute(route=json_route, url=\"/json\", methods=[\"GET\"]))\nadd_multi_simple_route(\napp,\nSimpleRoute(route=json_route, url=\"/json\", methods=[\"GET\"]),\nSimpleRoute(route=text_route, url=\"/text\", methods=[\"GET\"]),\nSimpleRoute(route=html_route, url=\"/html\", methods=[\"GET\"]),\nprefix=\"/api\",\ntitle=\"api\",\n)\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u4ee3\u7801\u4e2d\u7b2c\u4e00\u6bb5\u9ad8\u4eae\u4ee3\u7801\u662f\u7f16\u5199\u4e86\u4e09\u4e2a\u8def\u7531\u51fd\u6570\uff0c\u5b83\u4eec\u90fd\u7b26\u5408SimpleRoute\u7684\u8def\u7531\u51fd\u6570\u6807\u51c6\uff0cSimpleRoute\u8def\u7531\u51fd\u6570\u7684\u6807\u51c6\u5982\u4e0b:</p> <ul> <li>1.\u8def\u7531\u51fd\u6570\u9700\u8981\u88ab<code>pait</code>\u88c5\u9970\uff0c\u540c\u65f6response_model_list\u5c5e\u6027\u4e0d\u80fd\u4e3a\u7a7a\uff08\u4ee3\u7801\u4e2d\u8def\u7531\u51fd\u6570\u7684\u54cd\u5e94\u6a21\u578b\u5206\u522b\u4e3a<code>JsonResponseModel</code>\uff0c<code>TextResponseModel</code>\uff0c<code>HtmlResponseModel</code>\uff0c\u8fd9\u4e9b\u90fd\u662fSimpleRoute\u8def\u7531\u5f3a\u5236\u8981\u6c42\u7684\uff0c\u5982\u679c\u6ca1\u6709\u54cd\u5e94\u6a21\u578b\uff0c\u90a3\u4e48\u65e0\u6cd5\u901a\u8fc7SimpleRoute\u628a\u8def\u7531\u51fd\u6570\u6ce8\u518c\u5230Web\u6846\u67b6\u4e2d\u3002\uff09</li> <li>2.\u8def\u7531\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e0d\u518d\u662f\u5404\u79cd\u54cd\u5e94\u5bf9\u8c61\uff0c\u800c\u662f<code>Python</code>\u7684\u57fa\u7840\u7c7b\u578b\uff0c\u4f46\u662f\u9700\u8981\u8ddf\u54cd\u5e94\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002</li> </ul> <p>\u7b2c\u4e8c\u6bb5\u9ad8\u4eae\u662f\u901a\u8fc7<code>add_simple_route</code>\u548c<code>add_multi_simple_route</code>\u65b9\u6cd5\u6ce8\u518c\u8def\u7531\uff0c\u5176\u4e2d<code>add_simple_route</code>\u53ea\u80fd\u6ce8\u518c\u4e00\u4e2a\u8def\u7531\uff0c\u800c<code>add_multi_simple_route</code>\u53ef\u4ee5\u6ce8\u518c\u591a\u4e2a\u8def\u7531\uff0c\u5b83\u4eec\u7684\u90fd\u63a5\u6536app\u548cSimpleRoute\u5b9e\u4f8b\uff0c\u800cSimpleRoute\u53ea\u652f\u6301\u4e09\u4e2a\u5c5e\u6027\uff0c\u5982\u4e0b:</p> \u53c2\u6570 \u63cf\u8ff0 route \u7b26\u5408SimpleRoute\u6807\u51c6\u7684\u8def\u7531\u51fd\u6570 url \u5f53\u524d\u8def\u7531\u7684Url method \u5f53\u524d\u8def\u7531\u5bf9\u5e94\u7684HTTP Method <p>\u6b64\u5916\uff0c<code>add_multi_simple_route</code>\u8fd8\u652f\u6301\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5982\u4e0b:</p> \u53c2\u6570 \u63cf\u8ff0 prefix \u8def\u7531\u524d\u7f00\uff0c\u6bd4\u5982prefix\u4e3a\"/api\"\uff0c\u67d0\u4e2aSimpleRoute\u7684url\u4e3a\"/user\"\u65f6\uff0c\u6ce8\u518c\u7684\u8def\u7531URL\u4e3a\"/api/user\" title \u5f53\u524d\u8def\u7531\u7ec4\u7684\u6807\u9898\u662f\u4ec0\u4e48\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u6846\u67b6\uff0c\u5b83\u4eec\u91c7\u7528\u7684\u8def\u7531\u7ec4\u6216\u8005\u84dd\u56fe\u90fd\u9700\u8981\u6709\u552f\u4e00\u7684\u547d\u540d\uff0c\u6240\u4ee5\u4e0d\u540c\u6279\u6b21<code>add_multi_simple_route</code>\u7684<code>title</code>\u53c2\u6570\u90fd\u5e94\u8be5\u4e0d\u540c <p><code>add_simple_route</code>\u548c<code>add_multi_simple_route</code>\u5728\u6dfb\u52a0\u8def\u7531\u51fd\u6570\u65f6\uff0c\u4f1a\u5148\u68c0\u67e5\u8def\u7531\u51fd\u6570\u662f\u5426\u7b26\u5408SimpleRoute\u6807\u51c6\uff0c\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u5219\u629b\u51fa\u5f02\u5e38\uff0c \u5982\u679c\u7b26\u5408\uff0c\u4f1a\u4f7f\u7528<code>UnifiedResponsePluginProtocol</code>\u63d2\u4ef6\u4f7f\u8def\u7531\u51fd\u6570\u7684\u8fd4\u56de\u8f6c\u6362\u4e3a\u7b26\u5408Web\u6846\u67b6\u7684\u54cd\u5e94\u7c7b\u578b\uff0c\u6700\u540e\u518d\u628a\u8def\u7531\u51fd\u6570\u6ce8\u518c\u5230Web\u6846\u67b6\u4e2d\u3002</p> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u6d4b\u8bd5: <pre><code>\u279c  curl http://127.0.0.1:8000/json\n{}\n\u279c  curl http://127.0.0.1:8000/api/json\n{}\n\u279c  curl http://127.0.0.1:8000/api/text\ndemo\n\u279c   curl http://127.0.0.1:8000/api/html\n&lt;h1&gt;demo&lt;/h1&gt;\n</code></pre></p>"},{"location":"8_other/#25web","title":"2.5.\u8bbe\u7f6e\u4e0e\u83b7\u53d6Web\u6846\u67b6\u5c5e\u6027","text":"<p><code>Pait</code>\u4e3aWeb\u6846\u67b6\u7684\u8bbe\u7f6e\u4e0e\u83b7\u53d6Web\u6846\u67b6\u5c5e\u6027\u503c\u7684\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u65b9\u6cd5\uff0c\u5b83\u4eec\u5206\u522b\u662f<code>set_app_attribute</code>\u548c<code>get_app_attribute</code>\uff0c \u901a\u8fc7<code>set_app_attribute</code>\u548c<code>get_app_attribute</code>\u53ef\u4ee5\u5728\u4efb\u4e00\u65f6\u523b\u8bbe\u7f6e\u4e0e\u83b7\u53d6Web\u6846\u67b6\u5c5e\u6027\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> FlaskStarletteSanicTornado docs_source_code/other/flask_with_attribute_demo.py<pre><code>import httpx\nfrom flask import Flask, Response, current_app, jsonify\nfrom pait.app import get_app_attribute, set_app_attribute\ndef demo_route() -&gt; Response:\nclient: httpx.Client = get_app_attribute(current_app, \"client\")\nreturn jsonify({\"status_code\": client.get(\"http://so1n.me\").status_code})\napp: Flask = Flask(\"demo\")\napp.add_url_rule(\"/api/demo\", \"demo\", demo_route, methods=[\"GET\"])\nset_app_attribute(app, \"client\", httpx.Client())\napp.run(port=8000)\n</code></pre> docs_source_code/other/starlette_with_attribute_demo.py<pre><code>import httpx\nimport uvicorn\nfrom pait.app import get_app_attribute, set_app_attribute\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import JSONResponse\nasync def demo_route(request: Request) -&gt; JSONResponse:\nclient: httpx.AsyncClient = get_app_attribute(request.app, \"client\")\nreturn JSONResponse({\"status_code\": (await client.get(\"http://so1n.me\")).status_code})\napp: Starlette = Starlette()\napp.add_route(\"/api/demo\", demo_route, methods=[\"GET\"])\nset_app_attribute(app, \"client\", httpx.AsyncClient())\nuvicorn.run(app)\n</code></pre> docs_source_code/other/sanic_with_attribute_demo.py<pre><code>import httpx\nimport uvicorn\nfrom pait.app import get_app_attribute, set_app_attribute\nfrom sanic import HTTPResponse, Request, Sanic, json\nasync def demo_route(request: Request) -&gt; HTTPResponse:\nclient: httpx.AsyncClient = get_app_attribute(request.app, \"client\")\nreturn json({\"status_code\": (await client.get(\"http://so1n.me\")).status_code})\napp: Sanic = Sanic(\"demo\")\napp.add_route(demo_route, \"/api/demo\", methods=[\"GET\"])\nset_app_attribute(app, \"client\", httpx.AsyncClient())\nuvicorn.run(app)\n</code></pre> docs_source_code/other/tornado_with_attribute_demo.py<pre><code>import httpx\nfrom pait.app import get_app_attribute, set_app_attribute\nfrom tornado.ioloop import IOLoop\nfrom tornado.web import Application, RequestHandler\nclass DemoHandler(RequestHandler):\nasync def get(self) -&gt; None:\nclient: httpx.AsyncClient = get_app_attribute(self.application, \"client\")\nself.write({\"status_code\": (await client.get(\"http://so1n.me\")).status_code})\napp: Application = Application()\napp.add_handlers(\".*$\", [(\"/api/demo\", DemoHandler)])\nset_app_attribute(app, \"client\", httpx.AsyncClient())\napp.listen(8000)\nIOLoop.instance().start()\n</code></pre> <p>\u5728\u8fd0\u884c\u4ee3\u7801\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u6d4b\u8bd5: <pre><code>\u279c  curl http://127.0.0.1:8000/api/demo\n{\"status_code\": 200}\n</code></pre></p> <p>Note</p> <p>\u901a\u8fc7\u4e3aWeb\u6846\u67b6\u8bbe\u7f6e\u5c5e\u6027\u503c\uff0c\u53ef\u4ee5\u4f7f\u7ec4\u4ef6\u4e0e\u6846\u67b6\u89e3\u8026\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7ec4\u4ef6\u66f4\u52a0\u7075\u6d3b\uff0c\u4f46\u662f\u66f4\u52a0\u63a8\u8350\u901a\u8fc7DI\u5de5\u5177\u6765\u5b9e\u73b0\u89e3\u8026\uff0c\u5177\u4f53\u7684DI\u5de5\u5177\u89c1Awesome Dependency Injection in Python\u3002</p>"},{"location":"8_other/#3webpait","title":"3.\u5982\u4f55\u5728\u5176\u5b83Web\u6846\u67b6\u4f7f\u7528Pait","text":"<p>\u76ee\u524d<code>Pait</code>\u8fd8\u5728\u5feb\u901f\u8fed\u4ee3\u4e2d\uff0c\u6240\u4ee5\u8fd8\u662f\u4ee5\u529f\u80fd\u5f00\u53d1\u4e3a\u4e3b\uff0c\u5982\u679c\u8981\u5728\u5176\u4ed6\u5c1a\u672a\u652f\u6301\u7684\u6846\u67b6\u4e2d\u4f7f\u7528<code>Pait</code>, \u6216\u8005\u8981\u5bf9\u529f\u80fd\u8fdb\u884c\u62d3\u5c55, \u53ef\u4ee5\u53c2\u7167\u4e24\u4e2a\u6846\u67b6\u8fdb\u884c\u7b80\u5355\u7684\u9002\u914d\u5373\u53ef.</p> <p>\u540c\u6b65\u7c7b\u578b\u7684web\u6846\u67b6\u8bf7\u53c2\u7167 pait.app.flask</p> <p>\u5f02\u6b65\u7c7b\u578b\u7684web\u6846\u67b6\u8bf7\u53c2\u7167 pait.app.starlette</p>"},{"location":"8_other/#4ide","title":"4.IDE\u652f\u6301","text":"<p>pait\u7684\u7c7b\u578b\u6821\u9a8c\u548c\u8f6c\u6362\u4ee5\u53ca\u7c7b\u578b\u62d3\u5c55\u5f97\u76ca\u4e8e<code>Pydantic</code>,\u540c\u65f6\u4e5f\u4ece<code>pydantic</code>\u83b7\u5f97\u5230IDE\u7684\u652f\u6301\uff0c\u76ee\u524d\u652f\u6301<code>Pycharm</code>\u548c<code>Mypy</code></p> <ul> <li> <p>PyCharm plugin</p> </li> <li> <p>Mypy plugin</p> </li> </ul>"},{"location":"8_other/#5","title":"5.\u793a\u4f8b\u4ee3\u7801","text":"<p>\u66f4\u591a\u5b8c\u6574\u793a\u4f8b\u8bf7\u53c2\u8003example</p>"},{"location":"8_other/#6","title":"6.\u53d1\u884c\u8bf4\u660e","text":"<p>\u8be6\u7ec6\u7684\u53d1\u7248\u8bf4\u660e\u89c1CHANGELOG</p>"}]}